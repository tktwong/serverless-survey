service: song-contest-rater
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: dev
  environment:
    SONG_CONTEST_RATER_ACTS_TABLE: '${self:custom.tableNames.acts}-${opt:stage, self:provider.stage}'
    SONG_CONTEST_RATER_COMPETITIONS_TABLE: '${self:custom.tableNames.competitions}-${opt:stage, self:provider.stage}'
    SONG_CONTEST_RATER_USERS_TABLE: '${self:custom.tableNames.users}-${opt:stage, self:provider.stage}'
    SONG_CONTEST_RATER_RATINGS_TABLE: '${self:custom.tableNames.ratings}-${opt:stage, self:provider.stage}'
    SONG_CONTEST_RATER_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb}
    SONG_CONTEST_RATER_IMAGES_BUCKET: '${self:service}-${self:custom.bucketNames.images}-${opt:stage, self:provider.stage}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'

plugins:
  - serverless-bundle
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-iam-roles-per-function

custom:
  bundle:
    linting: false
  dynamodb:
    start:
      migrate: true
    stages:
      - local
  tableNames:
    acts: 'acts'
    competitions: 'competitions'
    users: 'users'
    ratings: 'ratings'
  bucketNames:
    images: 'images'
  endpoints:
    dynamodb: 'http://localhost:8000'

functions:
  - ${file(infrastructure/act/functions.yml)}
  - ${file(infrastructure/competition/functions.yml)}
  - ${file(infrastructure/user/functions.yml)}
  - ${file(infrastructure/rating/functions.yml)}

resources:
  - ${file(infrastructure/act/resources.yml)}
  - ${file(infrastructure/competition/resources.yml)}
  - ${file(infrastructure/shared/resources.yml)}
  - ${file(infrastructure/user/resources.yml)}
  - ${file(infrastructure/rating/resources.yml)}
