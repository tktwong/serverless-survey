service: secret-santa-api

custom:
  tableName: 'secret-santa-api-${self:provider.stage}'
  whitelist: 'http://192.168.1.7:3000,http://localhost:3000,http://secretsanta.mineshdesigns.co.uk,http://secretsanta.mineshdesigns.co.uk.s3-website-eu-west-1.amazonaws.com'
  jwtSecret: 'sn0wman2018$'
  senderEmail: 'mineshdesigns@gmail.com'
  sendEmailFunction: 'secret-santa-api-dev-send-email'
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - { "Fn::GetAtt": ["DynamoDBTable", "Arn" ] }
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["DynamoDBTable", "Arn" ] }, "index", "groupID-index"
          ] ] }
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource:
        "arn:aws:lambda:eu-west-1:805665609698:function:secret-santa-api-dev-send-email"
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource:
        - "*"
      Condition:
        StringEquals:
          ses:FromAddress:
            - "mineshdesigns@gmail.com"
  environment:
    SECRET_SANTA_TABLE: ${self:custom.tableName}
    WHITELIST: ${self:custom.whitelist}
    JWT_SECRET: ${self:custom.jwtSecret}
    SENDER_EMAIL: ${self:custom.senderEmail}
    SEND_EMAIL_FUNCTION: ${self:custom.sendEmailFunction}

plugins:
  - serverless-offline

functions:
  app:
    handler: slsHandler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  send-email:
    handler: email.handler
  alexa-secret-santa-skill:
    handler: skill.handler
    events:
      - alexaSkill: amzn1.ask.skill.a8154279-590e-4678-907b-bce68e79edb5

resources:
  Resources:
    DynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: memberName
            AttributeType: S
          -
            AttributeName: groupID
            AttributeType: S
        KeySchema:
          -
            AttributeName: memberName
            KeyType: HASH
          -
            AttributeName: groupID
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
        - IndexName: groupID-index
          KeySchema:
          - AttributeName: groupID
            KeyType: HASH
          Projection:
            ProjectionType: ALL
        TableName: ${self:custom.tableName}