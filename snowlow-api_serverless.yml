service: snowlow
package:
  exclude:
    - secrets.yml

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      # noStart: true
  secrets: ${file(secrets.yml)}

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    USER_TABLE: ${self:service}-user
    SEARCH_HISTORY_TABLE: ${self:service}-searchHistory
    PC_PRICE_TABLE: ${self:service}-pcPrice
    ADMIN_COG_ID: "${self:custom.secrets.ADMIN_COG_ID}"
    TWILIO_SID: "${self:custom.secrets.TWILIO_SID}"
    TWILIO_TOKEN: "${self:custom.secrets.TWILIO_TOKEN}"
    AUTH_TOKEN: "${self:custom.secrets.AUTH_TOKEN}"
    PHONE_NUMBER: "${self:custom.secrets.PHONE_NUMBER}"
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_TABLE}"
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SEARCH_HISTORY_TABLE}"
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PC_PRICE_TABLE}"

functions:

  search:
    handler: build/controllers/snowlow/SearchController.search
    events:
      - http:
          path: search/{searchTerm}
          method: get
          cors: true

  movieBot:
    handler: build/controllers/bot/BotController.movieBot
    events:
      - http:
          path: bot/movie/{movieTitle}/{location}/{date}
          method: get
          cors: true

  pcPriceBot:
    handler: build/controllers/bot/BotController.pcPriceBot
    events:
      - http:
          path: bot/pcparts/{listId}
          method: get
          cors: true

  getAll:
    handler: /build/controllers/snowlow/SearchController.getAll
    events:
      - http:
          path: search/admin/history
          method: get
          cors: true
          authorizer: aws_iam

  deleteAll:
    handler: build/controllers/snowlow/SearchController.clearData
    events:
      - http:
          path: search/admin/history
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.USER_TABLE}
    SearchHistoryDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.SEARCH_HISTORY_TABLE}
    pcPriceDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.PC_PRICE_TABLE}