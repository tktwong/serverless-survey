
service: sls-api-cad

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
    - Effect: Allow
      Action:
      - cognito-sync:*
      - cognito-identity:*
      Resource: arn:aws:cognito-identity:eu-west-1:*:*
    - Effect: Allow
      Action:
      - cognito-idp:*
      Resource: arn:aws:cognito-idp:eu-west-1:*:*

functions:
  postUser:
    handler: users/postUser.postUser
    events:
      - http:
          path: users/post
          method: post
          cors: true
  postToCognito:
    handler: users/postToCognito.postToCognito
    events:
      - http:
          path: users/postToCognito
          method: post
          cors: true
  queryByUser:
    handler: projects/queryByUser.queryByUser
    events:
      - http:
          path: projects/query
          method: post
          cors: true
  getUsers:
    handler: users/getUsers.getUsers
    events:
      - http:
          path: users/get-all
          method: get
          cors: true
  getUser:
    handler: users/getUser.getUser
    events:
      - http:
          path: users/get
          method: post
          cors: true
  deleteUser:
    handler: users/deleteUser.deleteUser
    events:
      - http:
          path: users/delete
          method: post
          cors: true
  updateUser:
    handler: users/updateUser.updateUser
    events:
      - http:
          path: users/update
          method: post
          cors: true
  postEmail:
    handler: users/postEmail.postEmail
    events:
      - http:
          path: users/postEmail
          method: post
          cors: true
  queryByEmail:
    handler: users/queryByEmail.queryByEmail
    events:
      - http:
          path: users/queryByEmail
          method: post
          cors: true
  postProject:
    handler: projects/postProject.postProject
    events:
      - http:
          path: projects/post
          method: post
          cors: true
  deleteProject:
    handler: projects/deleteProject.deleteProject
    events:
      - http:
          path: projects/delete
          method: post
          cors: true
  updateProject:
    handler: projects/updateProject.updateProject
    events:
      - http:
          path: projects/update
          method: post
          cors: true
  getProjects:
    handler: projects/getProjects.getProjects
    events:
      - http:
          path: projects/get-all
          method: get
          cors: true
  getProject:
    handler: projects/getProject.getProject
    events:
      - http:
          path: projects/get
          method: post
          cors: true

resources:
 Resources:
  UsersDynamoDbTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      TableName: 'users'
  ProjectsDynamoDbTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      TableName: 'projects'
