plugins:
 - serverless-offline
 - serverless-finch

service: my-digitalhumani

custom:
  enterpriseTable: '${self:provider.stage}-enterprise'
  projectTable: '${self:provider.stage}-project'
  treeTable: '${self:provider.stage}-tree'
  reportTable: '${self:provider.stage}-report'
  client:
      bucketName: digitalhumani.com

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ca-central-1
  iamRoleStatements:
   - Effect: Allow
     Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
     Resource:
      - { "Fn::GetAtt": [ "EnterpriseDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "ProjectDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "TreeDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "ReportDynamoDBTable", "Arn" ] }
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.stage}-*/index/*"
  environment:
    ENTERPRISE_TABLE: ${self:custom.enterpriseTable}
    PROJECT_TABLE: ${self:custom.projectTable}
    TREE_TABLE: ${self:custom.treeTable}
    REPORT_TABLE: ${self:custom.reportTable}

functions:
  app:
    handler: index.handler
    events:
     - http: ANY /
     - http: 'ANY {proxy+}'

resources:
  Resources:
    EnterpriseDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.enterpriseTable}
    ProjectDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.projectTable}
    TreeDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: uuid
          AttributeType: S
         -
          AttributeName: enterpriseId
          AttributeType: S
         -
          AttributeName: created
          AttributeType: S
        KeySchema:
         -
          AttributeName: uuid
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.treeTable}
        GlobalSecondaryIndexes:
         -
          IndexName: "myGSI"
          KeySchema:
           -
            AttributeName: enterpriseId
            KeyType: HASH
           -
            AttributeName: created
            KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - "treeCount"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    ReportDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: enterpriseId
          AttributeType: S
         -
          AttributeName: monthDate
          AttributeType: S
        KeySchema:
         -
          AttributeName: enterpriseId
          KeyType: HASH
         -
          AttributeName: monthDate
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.reportTable}
