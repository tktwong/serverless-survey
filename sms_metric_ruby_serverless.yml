service: sms-metric

provider:
  name: aws
  runtime: ruby2.7

  stage: ${opt:stage, 'deveropment'}
  region: ap-northeast-1
  profile: ${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'cloudwatch:GetMetricData'
      Resource:
        '*'
    - Effect: Allow
      Action:
        - 'dynamodb:PutItem'
      Resource:
        Fn::Join:
          - ':'
          - - arn:aws:dynamodb
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - Fn::Join:
                - '/'
                - - table
                  - Ref: SmsSpentUsd

package:
  exclude:
    - Gemfile
    - Gemfile.lock
    - .rubocop.yml
    - doc/**

functions:
  store_spent_usd:
    handler: lib/sms_metric.SmsMetric.store_spent_usd
    environment:
      TABLE_NAME: {Ref: SmsSpentUsd}
      REGION: {Ref: AWS::Region}
    events:
      - schedule:
          rate: cron(0 15 * * ? *) # 15:00 UTC = 01:00 JST
          enable: false

resources:
  Resources:
    SmsSpentUsd:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}_sms_spent_usd
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
