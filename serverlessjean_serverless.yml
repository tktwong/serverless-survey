service: serverless-back-end

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/Eruptions*"]]  
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/Tsunamies*"]]  

functions:
  loadVolcano:
    handler: handler.loadVolcano
    timeout: 40
  loadTsunami:
    handler: handler.loadTsunami
    timeout: 40
  getData:
    handler: handler.getData
    events:
      - http:
          path: disasters/getData
          method: post
          cors: true
          integration: LAMBDA 
  MapReduceQuery:
    handler: handler.MapReduceQuery
    events:
      - http:
          path: disasters/MapReduceQuery
          method: post
          cors: true
          integration: LAMBDA 

resources:  
  Resources:
    OpenIssues:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Eruptions
        AttributeDefinitions:
          - AttributeName: EruptionId
            AttributeType: S
        KeySchema:
          - AttributeName: EruptionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    ClosedIssues:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Tsunamies
        AttributeDefinitions:
          - AttributeName: TsunamiId
            AttributeType: S
        KeySchema:
          - AttributeName: TsunamiId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5          
          WriteCapacityUnits: 5