service: bear-store

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: prod
  region: eu-central-1
  environment:
    SECRET: ${env:SECRET, file(./config.json):SECRET}
    EMAIL: ${env:EMAIL, file(./config.json):EMAIL}
    PASSWORD: ${env:PASSWORD, file(./config.json):PASSWORD}
    region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:*:*:table/bears-table"
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource:
        - "*"

custom:
  webpackIncludeModules: true
  serverless-offline:
    port: 4000
    noTimeout: true

functions:
  express:
    handler:  src/functions/index.handlerExpress
    events:
    - http:
        path: /
        method: any
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          - Startlower
          - Text
          - Access-Control-Allow-Headers
          - Access-Control-Allow-Origin
    - http:
        path: /{any+}
        method: any
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          - Startlower
          - Text
          - Access-Control-Allow-Headers
          - Access-Control-Allow-Origin

plugins:
  - serverless-webpack
  - serverless-offline

resources:
  ${file(resources.yml)}

