service:
  name: game-api-assessment

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"


functions:
  timestamp:
    handler: src/handlers/timestamp.unixTimeMs
    events:
      - http:
          method: get
          path: Timestamp
    memorySize: 128
  transaction:
    handler: src/handlers/user.transactionRecording
    events:
      - http:
          method: post
          path: Transaction
    memorySize: 512
  transactionStats:
    handler: src/handlers/user.transactionStats
    events:
      - http:
          method: post
          path: TransactionStats
    memorySize: 512
  scorePost:
    handler: src/handlers/leaderboard.createLeaderboardScore
    events:
      - http:
          method: post
          path: ScorePost
    memorySize: 512
  leaderboardGet:
    handler: src/handlers/leaderboard.leaderboardGet
    events:
      - http:
          method: post
          path: LeaderboardGet
    memorySize: 512
  userSave:
    handler: src/handlers/user.userSave
    events:
      - http:
          method: post
          path: UserSave
    memorySize: 512
  userLoad:
    handler: src/handlers/user.userLoad
    events:
      - http:
          method: post
          path: UserLoad
    memorySize: 512

resources:
  Resources:
    Transaction:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Transaction
        AttributeDefinitions:
          -
            AttributeName: 'TransactionId'
            AttributeType: 'N'
        KeySchema:
          -
            AttributeName: 'TransactionId'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    TransactionStats:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: TransactionStats
        AttributeDefinitions:
          -
            AttributeName: 'UserId'
            AttributeType: 'N'
        KeySchema:
          -
            AttributeName: 'UserId'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Leaderboard:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Leaderboard
        AttributeDefinitions:
          -
            AttributeName: 'LeaderboardId'
            AttributeType: 'N'
          -
            AttributeName: 'UserId'
            AttributeType: 'N'
          -
            AttributeName: 'Score'
            AttributeType: 'N'
        KeySchema:
          -
            AttributeName: 'LeaderboardId'
            KeyType: HASH
          -
            AttributeName: 'UserId'
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        LocalSecondaryIndexes:
        -
          IndexName: 'ScoreIndex'
          KeySchema:
            -
              AttributeName: 'LeaderboardId'
              KeyType: 'HASH'
            -
              AttributeName: 'Score'
              KeyType: 'RANGE'
          Projection:
            ProjectionType: 'ALL'
    User:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: User
        AttributeDefinitions:
          -
            AttributeName: 'UserId'
            AttributeType: 'N'
        KeySchema:
          -
            AttributeName: 'UserId'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
