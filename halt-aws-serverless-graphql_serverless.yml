service:
  name: halt-proj-gql

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  webpack:
    includeModules : true
  tableName: accounts
  globalSecondaryIndex1: sort_key_GSI
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.dev, self:custom.tableThroughputs.default}
  userPoolUsername:
    prod: username
    dev: email
  userPoolAutoVerified:
    prod: email
    dev: email    

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'} # Set the default stage used. Default is dev
  region: ap-southeast-1 # Overwrite the default region used. Default is us-east-1
  deploymentPrefix: halt-proj
  tags:
    PROJECT: halt
    OWNER: comms
  profile: halt-app-amplify-profile # The default profile to use with this service
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-${self:custom.tableName}
    GS1: ${self:custom.globalSecondaryIndex1}  
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt: [accountsTable, Arn]

functions:
  graphql:
    # this is formatted as <FILENAME>.<HANDLER>
    handler: graphql.graphqlHandler
    tags:
      APP_ROLE: graphql server
    events:
    - http:
        path: graphql
        method: post
        cors: true
        authorizer: aws_iam
    - http:
        path: graphql
        method: get
        cors: true
        authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
  # S3
  - ${file(resources/s3-bucket.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
