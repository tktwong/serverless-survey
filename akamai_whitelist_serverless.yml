service: cdn-ip-whitelist
# Add/Replace IP to CDN whitelist

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ca-central-1

  environment:
    AKAMAI_API_URL: 'https://xxx'
    AKAMAI_API_CLIENT_TOKEN: value1
    AKAMAI_API_CLIENT_SECRET: value2
    AKAMAI_API_ACCESS_TOKEN: value3

  # you can add packaging information here
  package:
   include:
     - include-me.py
     - include-me-dir/**
   exclude:
     - exclude-me.py
     - exclude-me-dir/**

functions:
  upsert_ip:
    handler: whitelist.upsert_ip
    events:
     - httpApi:
         path: whitelist/{ip_address}
         method: put
  #    - websocket: $connect
  #    - s3: ${env:BUCKET}
  #    - schedule: rate(10 minutes)
  #    - sns: greeter-topic
  #    - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
  #    - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
  #    - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
