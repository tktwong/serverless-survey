service: esperto-watch-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  postUserInfo:
    handler: postUserInfo.main
    events:
      - http:
          path: userInfo
          method: post
          cors: true
          authorizer: aws_iam
  getUserInfo:
    handler: getUserInfo.main
    events:
      - http:
          path: userInfo/{userId}
          method: get
          cors: true
          authorizer: aws_iam
  postHeartRate:
    handler: postHeartRate.main
    events:
      - http:
          path: heartRate
          method: post
          cors: true
          authorizer: aws_iam
  getHeartRate:
    handler: getHeartRate.main
    events:
      - http:
          path: heartRate/{userId}
          method: get
          cors: true
          authorizer: aws_iam
  updateHeartMap:
    handler: updateHeartMap.main
    events:
      - http:
          path: heartMap
          method: post
          cors: true
          authorizer: aws_iam
  updateCurrentHR:
    handler: updateCurrentHR.main
    events:
      - http:
          path: currentHR
          method: post
          cors: true
          authorizer: aws_iam
  postStepCount:
    handler: postStepCount.main
    events:
      - http:
          path: stepCount
          method: post
          cors: true
          authorizer: aws_iam
  getStepCount:
    handler: getStepCount.main
    events:
      - http:
          path: stepCount/{userId}
          method: get
          cors: true
          authorizer: aws_iam
  updateStepsMap:
    handler: updateStepsMap.main
    events:
      - http:
          path: stepsMap
          method: post
          cors: true
          authorizer: aws_iam
  updateCurrentSteps:
    handler: updateCurrentSteps.main
    events:
      - http:
          path: currentSteps
          method: post
          cors: true
          authorizer: aws_iam
  postStepCountGoals:
    handler: postStepCountGoals.main
    events:
      - http:
          path: stepCountGoals
          method: post
          cors: true
          authorizer: aws_iam
  getStepCountGoals:
    handler: getStepCountGoals.main
    events:
      - http:
          path: stepCountGoals/{userId}
          method: get
          cors: true
          authorizer: aws_iam
  postHeartRateGoals:
    handler: postHeartRateGoals.main
    events:
      - http:
          path: heartRateGoals
          method: post
          cors: true
          authorizer: aws_iam
  getHeartRateGoals:
    handler: getHeartRateGoals.main
    events:
      - http:
          path: heartRateGoals/{userId}
          method: get
          cors: true
          authorizer: aws_iam
