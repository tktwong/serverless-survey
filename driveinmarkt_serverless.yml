service:
  name: backend
# app and org for use with dashboard.serverless.com
app: drivein-markt-backend
org: timbudweg

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  productsTableName: ${opt:stage, self:provider.stage}-driveinMarkt
  AWS_REGION: ${opt:region, "eu-central-1"}
# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    PRODUCT_TABLE_NAME: ${self:custom.productsTableName}

  region: ${opt:region, "eu-central-1"}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ProductsTable, Arn]

functions:
  preSignUp:
    handler: data/preSignUp.handler
    events:
      - cognitoUserPool:
          pool: DriveInMarktUserPool
          trigger: PreSignUp

  createProduct:
    handler: data/businessLogic.createProduct
    events:
      - http:
          method: post
          path: createProduct
          cors: true
  createUser:
    handler: data/businessLogic.createUser
    events:
      - http:
          method: post
          path: createUser
          cors: true
  createStore:
    handler: data/businessLogic.createStore
    events:
      - http:
          method: post
          path: createUser
          cors: true

resources:
  - ${file(resources/dynamoProducts.yml)}
  #- ${file(resources/userPool.yml)} # TODO: needs to be adjusted to fit our needs
