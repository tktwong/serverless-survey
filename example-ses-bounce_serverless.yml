service: example-ses-bounce
frameworkVersion: '2'

custom:
  deploymentBucketName: 'hyiromori-temp'
  sesSenderAddress: 'ses@hyiromori.com'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  deploymentBucket:
    name: "${self:custom.deploymentBucketName}"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource:
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/example-ses-bounce"
  environment:
    DYBAMODB_TABLE_NAME: "example-ses-bounce"
    SES_SENDER_ADDRESS: "${self:custom.sesSenderAddress}"

plugins:
  - "serverless-pseudo-parameters"

resources:
  Resources:
    bounceTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: "example-ses-bounce"
        AttributeDefinitions:
          - AttributeName: "address"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "address"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    sesTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "example-ses-bounce"
        Subscription:
          - Endpoint: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:example-ses-bounce-dev-receiveBounce"
            Protocol: "lambda"

functions:
  api:
    handler: handlers/api.handler
    events:
      - http:
          path: ''
          method: post
  receiveBounce:
    handler: handlers/receive_bounce.handler

