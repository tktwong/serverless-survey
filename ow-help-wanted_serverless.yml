# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ow-help-wanted
custom:
  config: ${file(config.yml)}

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10
  profile: ${opt:profile, env:PROFILE, self:custom.config.profile}
  stage: ${opt:stage, env:STAGE, self:custom.config.stage}
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::Join: [ ':', [ 'arn:aws:dynamodb', Ref: AWS::Region, Ref: AWS::AccountId, Fn::Join: [ '/', [ 'table', Ref: OWHelpWantedIssuesTable ] ] ] ]
 
  # define service wide environment variables here
  environment:
    GITHUB_AUTH_TOKEN: ${env:GITHUB_AUTH_TOKEN, self:custom.config.github.auth_token}
    GITHUB_USERNAME: ${env:GITHUB_USERNAME, self:custom.config.github.username}

    TWITTER_CONSUMER_KEY: ${env:TWITTER_CONSUMER_KEY, self:custom.config.twitter.consumer_key}
    TWITTER_CONSUMER_SECRET: ${env:TWITTER_CONSUMER_SECRET, self:custom.config.twitter.consumer_secret}
    TWITTER_ACCESS_TOKEN_KEY: ${env:TWITTER_ACCESS_TOKEN_KEY, self:custom.config.twitter.access_token_key}
    TWITTER_ACCESS_TOKEN_SECRET: ${env:TWITTER_ACCESS_TOKEN_SECRET, self:custom.config.twitter.access_token_secret}

    ISSUES_TABLE: ${self:service}-${self:provider.stage}-IssuesTable

functions:
  githubData:
    handler: functions/github-data.get
    events:
      - http:
          path: /github/data
          method: get
          cors: true
  githubWebhooksIssues:
    handler: functions/github-webhooks.issues
    events:
      - http:
          path: /github/webhooks/issues
          method: post
          cors: true

resources:
  Resources:
    OWHelpWantedIssuesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ISSUES_TABLE}
        AttributeDefinitions:
          - AttributeName: issueId
            AttributeType: S
        KeySchema:
          - AttributeName: issueId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
