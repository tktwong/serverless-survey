service: phonebook-api

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  region: ${opt:region}
  endpointType: REGIONAL
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: phonebook/create.create
    events:
      - http:
          path: phonebook
          method: post
          cors: true

  list:
    handler: phonebook/list.list
    events:
      - http:
          path: phonebook
          method: get
          cors: true

  get:
    handler: phonebook/get.get
    events:
      - http:
          path: phonebook/{id}
          method: get
          cors: true

  update:
    handler: phonebook/update.update
    events:
      - http:
          path: phonebook/{id}
          method: put
          cors: true

  delete:
    handler: phonebook/delete.delete
    events:
      - http:
          path: phonebook/{id}
          method: delete
          cors: true

resources:
  Resources:
#    GatewayResponse:
#      Type: 'AWS::ApiGateway::GatewayResponse'
#      Properties:
#        ResponseParameters:
#          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
#          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
#          gatewayresponse.header.Access-Control-Allow-Credentials: "'*'"
#          gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
#        ResponseType: EXPIRED_TOKEN
#        RestApiId: 
#          Ref: 'ApiGatewayRestApi'
#        StatusCode: '200'
    PhonebookDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api-${opt:stage}.salaunch.tindel.net
    stage: dev
    basePath: ''
    certificateName: '*.salaunch.tindel.net'
    createRoute53Record: true
    endpointType: 'regional'
