service: lambda-java-example
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  region: eu-central-1

package:
  artifact: target/users-demo-1.0-SNAPSHOT-lambda-package.zip

functions:
  createUser:
    handler: sinanaj.aldo.StreamLambdaHandler
    events:
      - http:
          path: /{proxy+}
          method: post
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:eu-central-1:756303989147:table/user

  getUser:
    handler: sinanaj.aldo.StreamLambdaHandler
    events:
      - http:
          path: /{proxy+}
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: arn:aws:dynamodb:eu-central-1:756303989147:table/user

resources:
  Resources:
    GoOffboardingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: user

plugins:
  - serverless-iam-roles-per-function
