service: reto-slsaws-nodejs
frameworkVersion: "1.54.0"

custom:
  envs:
    PEOPLE_TABLE_NAME: people-table
    KEY_LANG: 'LANG'
    LANG_ES: ES
    LANG_EN: EN

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  environment: ${self:custom.envs}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.envs.PEOPLE_TABLE_NAME}"

functions:
  savePeople:
    handler: src/main/apis/people_api.savePeople
    events:
      - http:
          method: post
          path: /people
  getPeople:
    handler: src/main/apis/people_api.getPeople
    events:
      - http:
          method: get
          path: /people/{ID}
  getAllPeople:
    handler: src/main/apis/people_api.getAllPeople
    events:
      - http:
          method: get
          path: /people
  swapiGetPeople:
    handler: src/main/apis/swapi_people_api.getPeople
    events:
      - http:
          method: get
          path: /swapi/people/{id}
  swapiGetAndSavePeople:
    handler: src/main/apis/swapi_people_api.getAndSavePeople
    events:
      - http:
          method: get
          path: /swapi/people/{id}/save

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.envs.PEOPLE_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST