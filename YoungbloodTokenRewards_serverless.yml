service:
  name: youngblood-token-rewards

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
    
provider:
  name: aws
  runtime: nodejs6.10
  environment:
      DYNAMODB_TABLE_TOKEN: Tokens-${opt:stage, self:provider.stage}
      IS_OFFLINE: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:*'


functions:
  alexaToken:
    handler: src/typescript/alexaSkill/alexaToken.invokeTokenRewards
    timeout: 30
    events:
      - alexaSkill
  getToken:
    handler: src/typescript/handler.getTokenService
    events:
      - http:
          method: get
          path: tokenrewards
  postToken:
    handler: src/typescript/handler.updateTokenService
    events:
      - http:
          method: post
          path: updatetokenrewards
  postAlexaTestService:
    handler: src/typescript/handler.alexaTestService
    events:
      - http:
          method: post
          path: alexaTest

resources:
  Resources:
    TokenTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain # Keeps around the DynamoDB resource when we redeploy/destroy
      Properties:
        AttributeDefinitions:
          -
            AttributeName: childName
            AttributeType: S
        KeySchema:
          -
            AttributeName: childName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_TOKEN}
custom:
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
      - temp
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      domain:
        sources:
          - table: ${self:provider.environment.DYNAMODB_TABLE_TOKEN}
            sources: [./seed.json]
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true
