service: api-multiregion-example

provider:
  name: aws
  runtime: python3.8

  stage: dev
  region: ${opt:region, 'ap-northeast-1'}

  stackTags:
    latestStage: ${self:provider.alias}
  tags:
    latestStage: ${self:provider.alias}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource: "*"
  environment:
    API_ENV: ${self:provider.alias}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    REGION_TYPE: ${opt:region_type}
    TABLE_A: ${opt:dynamodb_table_name_table-a}
    TABLE_B: ${opt:dynamodb_table_name_table-b}
    BUCKET_NAME: ${self:custom.bucket_name.${opt:region_type}}


custom:
  bucket_name:
    primary: ${opt:s3_bucket_bucket_name_primary}
    secondary: ${opt:s3_bucket_bucket_name_secondary}

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: test
          method: get
          private: true
  healthcheck:
    handler: handler.healthcheck
    environment:
      AWS_API_RETRY_COUNT: 2   # Retry count
    events:
      - http:
          path: healthcheck
          method: get

plugins:
  - serverless-aws-alias
  - serverless-prune-plugin
  - serverless-python-requirements
