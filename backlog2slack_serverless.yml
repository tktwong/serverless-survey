service: backlog2slack

custom: ${file(config.yml)}

provider:
  name: aws
  runtime: nodejs6.10
  profile: ${self:custom.aws.profile}
  region: ${self:custom.aws.region}
  stage: dev

  environment:
    WEBHOOKURI: ${self:custom.env.WEBHOOKURI}
    BASEURL: ${self:custom.env.BASEURL}
    BOTNAME: ${self:custom.env.BOTNAME}

package:
  exclude:
    - config.yml.sample
  
functions:
  Backlog2Slack:
    handler: index.handler
    events:
      - http:
          path: /b2s/{room}
          method: post
          integration: lambda
          request:
            parameters:
              room: true
            # template:
            #   application/json: '{
            #     "accountId": "$context.identity.accountId",
            #     "apiId": "$context.apiId",
            #     "apiKey": "$context.identity.apiKey",
            #     "caller": "$context.identity.caller",
            #     "headers": {
            #   #foreach( $key in $input.params().header.keySet() )
            #       "$key": "$input.params().header.get($key)"#if( $foreach.hasNext ),#end
            #   #end
            #     },
            #     "httpMethod": "$context.httpMethod",
            #     "path": "$context.resourcePath",
            #     "pathParameters": {
            #   #foreach( $key in $input.params().path.keySet() )
            #       "$key": "$input.params().path.get($key)"#if( $foreach.hasNext ),#end
            #   #end
            #     },
            #     "queryParameters": {
            #   #foreach( $key in $input.params().querystring.keySet() )
            #       "$key": "$input.params().querystring.get($key)"#if( $foreach.hasNext ),#end
            #   #end
            #     },
            #     "requestId": "$context.requestId",
            #     "requestParameters": $input.json("$"),
            #     "resourceId": "$context.resourceId",
            #     "sourceIp": "$context.identity.sourceIp",
            #     "stage": "$context.stage",
            #     "user": "$context.identity.user",
            #     "userAgent": "$context.identity.userAgent",
            #     "userArn": "$context.identity.userArn"
            #     "room": "$input.params("room")" 
            #   }'
            # passThrough: WHEN_NO_TEMPLATES

