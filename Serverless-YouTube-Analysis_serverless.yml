# NOTE: update this with your service name
service: youtube-sentiment-analysis

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-2
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  environment: ${file(env.yml):${self:provider.stage}}
  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in postVideos.js
  # - path: url path is /videos
  # - method: post request
  postVideos:
    handler: postVideos.main
    events:
      - http:
          path: videos
          method: post
          cors: true

  # Defines an HTTP API endpoint that calls the main function in postVideoStats.js
  # - path: url path is /videos/stats
  # - method: post request
  postVideoStats:
    handler: postVideoStats.main
    events:
      - http:
          path: videos/stats
          method: post
          cors: true

  # Defines an HTTP API endpoint that calls the main function in postComedianGender.js
  # - path: url path is /videos/gender
  # - method: post request
  postComedianGender:
    handler: postComedianGender.main
    events:
      - http:
          path: videos/gender
          method: post
          cors: true

  # Defines an HTTP API endpoint that calls the main function in postVideoComments.js
  # - path: url path is /videos/comments
  # - method: post request
  postVideoComments:
    handler: postVideoComments.main
    events:
      - http:
          path: videos/comments
          method: post
          cors: true

  # Defines an HTTP API endpoint that calls the main function in postCommentSentiment.js
  # - path: url path is /comments/sentiments
  # - method: post request
  postCommentSentiment:
    handler: postCommentSentiment.main
    events:
      - http:
          path: comments/sentiments
          method: post
          cors: true

  # Defines an HTTP API endpoint that calls the main function in postChannelSentiments.js
  # - path: url path is /channels/sentiments
  # - method: post request
  postChannelSentiments:
    handler: postChannelSentiments.main
    events:
      - http:
          path: channels/sentiments
          method: post
          cors: true
  
  # Defines an HTTP API endpoint that calls the main function in getSentiments.js
  # - path: url path is /sentiments
  # - method: get request
  getSentiments:
    handler: getSentiments.main
    events:
      - http:
          path: sentiments
          method: get
          cors: true

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}