service: ipa-flashcards-app
plugins:
  - serverless-deployment-bucket
  - serverless-secrets-plugin
  - serverless-iam-roles-per-function
  - serverless-mocha-plugin
  - serverless-offline


provider:
  name: aws
  runtime: nodejs10.x
  stage: test
  region: eu-central-1
  stackName: ipa-flashcards-app-stack
  apiName: ipa-flashcards-app-api
  deploymentBucket:
    name: ipa-flashcards-app-bucket
  environment:
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_USER: ${self:custom.secrets.DB_USER}
    DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}

custom:
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}


functions:
  status:
    handler: src/status/index.handler
    events:
      - http:
          path: /status
          method: get
          cors: true

  saveFlashcard:
    handler: src/controller/flashcard.save
    events:
      - http:
          path: /flashcard
          method: post
          cors: true

  removeFlashcard:
    handler: src/controller/flashcard.remove
    events:
      - http:
          path: /flashcard
          method: delete
          cors: true

  updateFlashcard:
    handler: src/controller/flashcard.update
    events:
      - http:
          path: /flashcard
          method: patch
          cors: true

  getAllFlashcards:
    handler: src/controller/flashcard.getAll
    events:
      - http:
          path: /flashcard
          method: get
          cors: true

  getByFlashcards:
    handler: src/controller/flashcard.getBy
    events:
      - http:
          path: /flashcard/find
          method: get
          cors: true


