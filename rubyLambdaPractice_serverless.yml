service: nodeRubyLambdas

plugins:
  - serverless-offline
  # - serverless-hooks-plugin

# custom:
#   hooks:
#     package:initialize:
#       - bundle install --deployment

provider:
  name: aws
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  # environment: ${file(env.yml):${self:provider.stage}}

package:
  individually: true
  excludeDevDependencies: true


functions:
  nodeMain:
    handler: node/handler.main
    runtime: nodejs8.10
    events:
      - http:
          path: main
          method: get
    package:
      exclude:
        - "**/**"
      include:
        - node/handler.js
  nodeEncrypt:
    handler: node/encryption.encrypt
    runtime: nodejs8.10
    events:
      - http:
          path: encrypt
          method: get
    package:
      exclude:
        - "**/**"
      include:
        - node/encryption.js
  nodeDecrypt:
    handler: node/decryption.decrypt
    runtime: nodejs8.10
    events:
      - http:
          path: decrypt
          method: get
    package:
      exclude:
        - "**/**"
      include:
        - node/decryption.js
  rubyEncryption:
    handler: ruby/rubyRijndaelEncryption.lambda_handler
    runtime: ruby2.5
    environment:
      ${file(env.yml):${self:provider.stage}}
    package:
      exclude:
        - "**/**"
      include:
        - vendor/**
        - ruby/rubyRijndaelEncryption.rb
