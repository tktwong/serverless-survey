service: fan-presave

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3
  role: arn:aws:iam::353948116047:role/music-presave-application
  environment:
    CAMPAIGNS_TABLE: ${self:service}-campaigns-${opt:stage, self:provider.stage}
    RELEASE_DATA_TABLE: ${self:service}-release-data-${opt:stage, self:provider.stage}
    SUBSCRIBERS_TABLE: ${self:service}-subscribers-${opt:stage, self:provider.stage}
    SUBSCRIBERS_TABLE_INDEX: campaignIdIndex
    UPDATE_QUEUE_TABLE: ${self:service}-update-queue-${opt:stage, self:provider.stage}
    SPOTIFY_TRANSACTION_HISTORY_TABLE: ${self:service}-spotify-transaction-history-${opt:stage, self:provider.stage}
    SPOTIFY_CLIENT_ID: adc4a99fec564ab19629189544e49c44
    SPOTIFY_CLIENT_SECRET: b98ee2957e874fb99ab17fec2838efcb
    SPOTIFY_CLIENT_CALLBACK: http://www.fanpresave.com/success/

functions:
  login:
    handler: callback/login.login
    events:
      - http:
          path: login/{campaignId}
          method: get
          cors: true
  callback:
    handler: callback/callback.callback
    events:
      - http:
          path: callback/{code}
          method: get
          cors: true
  create-campaign:
    handler: campaigns/create.create
    events:
      - http:
          path: campaigns
          method: post
          cors: true
  delete-campaign:
    handler: campaigns/delete.delete
    events:
      - http:
          path: campaigns/{campaignId}
          method: delete
          cors: true
  get-campaign:
    handler: campaigns/get.get
    events:
      - http:
          path: campaigns/{campaignId}
          method: get
          cors: true
  list-campaign:
    handler: campaigns/list.list
    events:
      - http:
          path: campaigns
          method: get
          cors: true
  update-campaign:
    handler: campaigns/update.update
    events:
      - http:
          path: campaigns/{campaignId}
          method: put
          cors: true
  release-data-create:
    handler: release-data/create.create
    events:
      - stream: arn:aws:dynamodb:us-east-1:353948116047:table/fan-presave-campaigns-dev/stream/2017-09-20T06:26:49.270
  release-data-scheduled:
    handler: release-data/scheduled.scheduled
    events:
      - rate(1 hour)
  create-subscribers:
    handler: subscribers/create.create
    events:
      - http:
          path: subscribers
          method: post
          cors: true
  update-queue:
    handler: update-queue/process.process
    events:
      - stream: arn:aws:dynamodb:us-east-1:353948116047:table/fan-presave-update-queue-dev/stream/2017-09-20T06:26:51.178
resources:
  Resources:
    CampaignsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.CAMPAIGNS_TABLE}
        AttributeDefinitions:
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: campaignId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    ReleaseDataDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.RELEASE_DATA_TABLE}
        AttributeDefinitions:
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: campaignId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    SubscribersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.SUBSCRIBERS_TABLE}
        AttributeDefinitions:
          -
            AttributeName: subscriberId
            AttributeType: S
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: subscriberId
            KeyType: HASH
          -
            AttributeName: campaignId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.SUBSCRIBERS_TABLE_INDEX}
            KeySchema:
              - AttributeName: campaignId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    UpdateQueueDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.UPDATE_QUEUE_TABLE}
        AttributeDefinitions:
          -
            AttributeName: subscriberId
            AttributeType: S
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: subscriberId
            KeyType: HASH
          -
            AttributeName: campaignId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    SpotifyTransactionHistoryDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.SPOTIFY_TRANSACTION_HISTORY_TABLE}
        AttributeDefinitions:
          -
            AttributeName: timestamp
            AttributeType: N
        KeySchema:
          -
            AttributeName: timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
