service: soarhelloworld
app: soarhelloworld
org: fvigo

provider:
  name: aws
  runtime: python3.8

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "s3:ListBucket"
     Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
   - Effect: "Allow"
     Action:
       - "s3:GetObject"
     Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
   - Effect: "Allow"
     Action:
       - "dynamodb:Query"
       - "dynamodb:Scan"
       - "dynamodb:GetItem"
       - "dynamodb:PutItem"
       - "dynamodb:UpdateItem"
       - "dynamodb:DeleteItem"
     Resource:
       - { "Fn::GetAtt": ["ScansDynamoDBTable", "Arn" ] }

  environment:
    S3_BUCKET: ${self:service}-${opt:stage, self:provider.stage}
    ALERT_FILE: "helloworld.json"
    ALERT_DETAIL_FILE: "helloworldextra.json"
    SCAN_RESULT_FILE: "helloworldscanresults.json"
    SCANS_TABLE: "SoarHelloWorldScans"
    API_KEY: ${file(./secrets.yml):API_KEY}

functions:
  get_alerts:
    handler: handler.get_alerts
    events:
     - http:
         path: api/v1/get_alerts
         method: get

  get_alert_details:
    handler: handler.get_alert_details
    events:
     - http:
         path: api/v1/get_alert_details
         method: get

  change_alert_status:
    handler: handler.change_alert_status
    events:
     - http:
         path: api/v1/change_alert_status
         method: get

  start_scan:
    handler: handler.start_scan
    events:
     - http:
         path: api/v1/start_scan
         method: get

  check_scan:
    handler: handler.check_scan
    events:
     - http:
         path: api/v1/check_scan
         method: get

  get_scan_results:
    handler: handler.get_scan_results
    events:
     - http:
         path: api/v1/get_scan_results
         method: get

  domain:
    handler: handler.domain
    events:
     - http:
         path: api/v1/domain
         method: get
         
  ip:
    handler: handler.ip
    events:
     - http:
         path: api/v1/ip
         method: get

resources:
 Resources:
   NewResource:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: ${self:provider.environment.S3_BUCKET}
   ScansDynamoDBTable:
     Type: 'AWS::DynamoDB::Table'
     Properties:
       AttributeDefinitions:
         -
           AttributeName: scanId
           AttributeType: S
       KeySchema:
         -
           AttributeName: scanId
           KeyType: HASH
       ProvisionedThroughput:
         ReadCapacityUnits: 1
         WriteCapacityUnits: 1
       TableName: SoarHelloWorldScans
       TimeToLiveSpecification:
         AttributeName: scanttl
         Enabled: true

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-s3-deploy

custom:
  customDomain:
    domainName: ${file(./secrets.yml):FQDN}
    certificateName: ${file(./secrets.yml):FQDN}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  assets:
    targets:
      - bucket: ${self:provider.environment.S3_BUCKET}
        files:
        - source: ./alerts/
          globs: '**/*.json'
  
