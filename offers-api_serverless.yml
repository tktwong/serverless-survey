service: programs-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - Access-Control-Allow-Origin
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  stage: ${opt:stage, self:provider.stage}
  environment:
    DB: ${env:DB_CONNECTION_STRING}

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 3
  versionFunctions: false
  endpointType: regional
  stage: dev
  region: us-east-1

functions:
# CREATE
  createOffer:
    handler: api/create.newOffer
    events:
      - http:
          path: api/offers/create
          method: post
          cors: true
# READ
  getAllOffers:
    handler: api/read.getAllOffers
    events:
      - http:
          path: api/offers
          method: get
          cors: true
  getPageOffers:
    handler: api/read.getPageOffers
    events:
      - http:
          path: api/offers/{page}
          method: get
          cors: true
# UPDATE
  updateOffer:
    handler: api/update.offer
    events:
      - http:
          path: api/offers/update/{offer_id}
          method: put
          cors: true
# DELETE
  deleteOneOffer:
    handler: api/delete.removeOffer
    events:
      - http:
          path: api/offers/delete/{offer_id}
          method: delete
          cors: true