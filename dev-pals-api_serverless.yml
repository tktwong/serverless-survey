# NOTE: update this with your service name
service: dev-pals-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-2

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatemets:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create-profile.js
  # - path: url path is /profiles
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  create:
    handler: create-profile.main
    events:
      - http:
          path: profiles
          method: post
          cors: true
          authorizer: aws_iam

  add-experience:
    handler: add-experience.main
    events:
      - http:
          path: experiences/{id}
          method: put
          cors: true
          authorizer: aws_iam

  add-education:
    handler: add-education.main
    events:
      - http:
          path: educations/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete-experience:
    handler: delete-experience.main
    events:
      - http:
          path: delete-experience/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete-education:
    handler: delete-education.main
    events:
      - http:
          path: delete-education/{id}
          method: put
          cors: true
          authorizer: aws_iam

  get-profile:
    # Defines an HTTP API endpoint that calls the main function in get-profile.js
    # - path: url path is /profiles/{id}
    # - method: GET request
    handler: get-profile.main
    events:
      - http:
          path: profiles/{id}
          method: get
          cors: true
          authorizer: aws_iam

  get-profile-by-handle:
    # Defines an HTTP API endpoint that calls the main function in get-profile-by-handle.js
    # - path: url path is /profiles/{id}
    # - method: GET request
    handler: get-profile-by-handle.main
    events:
      - http:
          path: profiles-by-handle/{handle}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    # Defines an HTTP API endpoint that calls the main function in list-profiles.js
    # - path: url path is /profiles
    # - method: GET request
    handler: list-profiles.main
    events:
      - http:
          path: profiles
          method: get
          cors: true
          authorizer: aws_iam

  delete:
    # Defines an HTTP API endpoint that calls the main function in delete-profile.js
    # - path: url path is /profile
    # - method: DELETE request
    handler: delete-profile.main
    events:
      - http:
          path: profiles/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  add-post:
    handler: add-post.main
    events:
      - http:
          path: posts
          method: post
          cors: true
          authorizer: aws_iam
