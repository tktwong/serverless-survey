#组件信息 全量配置参考https://github.com/serverless-components/tencent-scf/blob/master/docs/configure.md
component: scf #引用 component 的名称
name: transcode-video #创建的实例名称，请修改成您的实例名称

#组件参数
inputs:
  name: transcode-video-${app}-${stage}
  src: ./src
  handler: index.main_handler 
  role: transcodeRole # 函数执行角色，已授予cos对应桶全读写权限
  runtime: Python3.6 
  memorySize: 3072 # 内存大小，单位MB
  timeout: 43200 # 函数执行超时时间, 单位秒, 即本demo目前最大支持12h运行时长
  region: ap-shanghai # 函数区域，统一在环境变量中定义
  asyncRunEnable: true # 开启长时运行，目前只支持上海区
  cls: # 函数日志
    region: ap-shanghai  # 函数区域，统一在环境变量中定义
    logsetId: ${output:${stage}:${app}:cls-video.logsetId}  # cls日志集 cls-video为cls组件的实例名称
    topicId: ${output:${stage}:${app}:cls-video.topicId}  # cls日志主题
  environment: 
    variables:  # 转码参数
      REGION: ap-shanghai   # 输出桶区域
      DST_BUCKET: transcodeapp-demo-1300067089 # 输出桶名称
      DST_PATH: videos/ # 输出桶路径
      DST_FORMAT: avi # 转码生成格式
      FFMPEG_CMD: ffmpeg -i {input} -y -f {dst_format} {output}  # 转码基础命令，您可自定义配置，但必须包含ffmpeg配置参数和格式化部分，否则会造成转码任务失败。
      FFMPEG_DEBUG: 0 # 是否输出ffmpeg日志 0为不输出 1为输出
      TZ: Aisa/Shanghai # cls日志输出时间的时区
  events:
    - cos: # cos触发器    	
        parameters:          
          bucket: transcodeapp-demo-1300067089.cos.ap-shanghai.myqcloud.com  # 输入文件桶
          filter:
            prefix: videos/  # 桶内路径
            suffix: .mp4
          events: 'cos:ObjectCreated:*'  # 触发事件
          enable: true
