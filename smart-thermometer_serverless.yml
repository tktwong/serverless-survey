service: backend
app: temperature-bot
org: berabulut

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    TWITTER_CONSUMER_KEY: ${env:TWITTER_CONSUMER_KEY}
    TWITTER_CONSUMER_SECRET: ${env:TWITTER_CONSUMER_SECRET}
    TWITTER_ACCESS_TOKEN_KEY: ${env:TWITTER_ACCESS_TOKEN_KEY}
    TWITTER_ACCESS_TOKEN_SECRET: ${env:TWITTER_ACCESS_TOKEN_SECRET}
    GMAIL_USER: ${env:GMAIL_USER}
    GMAIL_PASS: ${env:GMAIL_PASS}
    GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}
    DATABASE_URL: ${env:DATABASE_URL}
    SLS_DEBUG: ${env:SLS_DEBUG}

functions:
  mail:
    handler: handlers/mailhandler.mail
    timeout: 30
    description: Mail fetched temperature.
    events:
      - http:
          path: mail
          method: post
          cors: true

  tweet:
    handler: handlers/tweethandler.tweet
    timeout: 30
    description: Tweet fetched temperature.
    events:
      - http:
          path: tweet
          method: post
          cors: true

  createUser:
    handler: handlers/userHandler.createUser
    timeout: 30
    description: Create a new user in db.
    events:
      - http:
          path: createUser
          method: post
          cors: true
  
  login:
    handler: handlers/userHandler.login
    timeout: 30
    description: Login user
    events:
      - http:
          path: login
          method: post
          cors: true
  getSensorData:
    handler: handlers/sensorHandler.sensorData
    timeout: 30
    description: Fetch sensor data from db
    events:
      - http:
          path: getSensorData
          method: post
          cors: true
  getLocationData:
    handler: handlers/locationHandler.location
    timeout: 30
    description: Fetch location data from db
    events:
      - http:
          path: getLocationData
          method: post
          cors: true


plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-iam-roles-per-function
