org: grvpanchal
app: apollo-sls-gql
# NOTE: update this with your service name
service: apollo-sls-gql

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline-lambda
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-offline:
    port: 4000

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: process.env.DYNAMODB_TABLE
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStream
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}
dynamodb:
  start:
    migrate: true
  stages:
    - dev

functions:
  graphql:
    handler: src/graphql.graphqlHandler
    environment:
      SLS_DEBUG: true
    events:
      - http:
          path: graphql
          method: post
          cors: true
          integration: lambda-proxy

      - http:
          path: graphql
          method: get
          cors: true
          integration: lambda-proxy
resources:
  Resources:
    MarketPlaceDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: title
            KeyType: HASH
        # Set the capacity based on the stage
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1