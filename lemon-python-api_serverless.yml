#------------------------------------------------
# Serverless Configuration.
#------------------------------------------------
service: lemon-python-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

plugins:
  - serverless-python-requirements
  - serverless-wsgi

#------------------------------------------------
# Custom
#------------------------------------------------
custom:
  CORE:                                         # Core Configuration.
    profile: ${opt:profile, 'none'}             # run option `--profile`
    region: ${opt:region, 'ap-northeast-2'}     # run option `--region` `-r`
    stage: ${opt:stage, 'dev'}                  # run option `--stage` `-s`
    env: ${opt:env, 'env.yml'}                  # run option `--env`
  CONF: ${file(./config.js):CONF}               # config.js 에서 CONF() 함수 호출하여 가져옴.
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

#------------------------------------------------
# Provider
#------------------------------------------------
provider:
  name: aws
  profile: ${opt:profile, 'none'}
  stage: ${opt:stage, 'dev'}

  # you can overwrite defaults here
  memorySize: 128
  timeout: 30
  cfLogs: true
  runtime: ${self:custom.CONF.${self:custom.CORE.profile}.runtime, 'python3.6'}
  region: ${self:custom.CONF.${self:custom.CORE.profile}.region, self:custom.CORE.region}      # profile의 region를 먼저 사용하고, 없으면 실행 옵션값.

  # VPC Configuration for Lambda. 
  vpc:
    securityGroupIds: ${self:custom.CONF.${self:custom.CORE.profile}.securityGroupIds}
    subnetIds: ${self:custom.CONF.${self:custom.CORE.profile}.subnetIds}

  # Lambda function's IAM Role here
  iamRoleStatements:
    #NOTE! - remove할때 lambda ENI Interface를 제거하지 못해서 블럭당하고 있을때, EC2 콘솔에서 강제 지우기 하면 됨!.. (VPC 안쓰면 관계 없음!)
    - Effect: Allow
      Action:
        - cloudwatch:PutMetricData
        - lambda:InvokeFunction
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:AttachNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface
        - ec2:DetachNetworkInterface
        - ec2:ModifyNetworkInterfaceAttribute
        - ec2:ResetNetworkInterfaceAttribute
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
      
  # -------------------------------------------------------
  # you can define service wide environment variables here
  # WARN! - 환경변수에는 object/null 으로 설정할 수 없음.
  environment: ${file(./env/${self:custom.CONF.${self:custom.CORE.profile}.env}):${self:provider.stage}}

#------------------------------------------------
# Functions
#------------------------------------------------
functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  # getUser:
  #   handler: wsgi.handler
  #   events:
  #     - http: 'GET /users/{proxy+}'
  # createUser:
  #   handler: wsgi.handler
  #   events:
  #     - http: 'POST /users'
