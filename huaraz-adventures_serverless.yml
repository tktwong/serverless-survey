# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: huaraz-adventures

package:
  individually: true

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  profile: personal
  memorySize: 128 # Default is 1024
  timeout: 10 # Default is 30
  environment:
    AWS_ROLE_S3_UPLOADS: arn:aws:iam::966447780516:role/s3-uploads
    CONTACT_EMAIL: ${file(./settings.${opt:stage}.yml):CONTACT_EMAIL}
    DYNAMODB_ENDPOINT: ${file(./settings.${opt:stage}.yml):DYNAMODB_ENDPOINT}
    NODE_ENV: ${file(./settings.${opt:stage}.yml):NODE_ENV}
    PRIVATE_KEY: ${file(./settings.${opt:stage}.yml):PRIVATE_KEY}
    SERVICE_NAME: ${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:us-east-1:966447780516:table/*
    - Effect: Allow # xray permissions (required)
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    # We need to add permissions to interact with AWS SES
    - Effect: Allow
      Action:
        - ses:sendEmail
      Resource: arn:aws:ses:us-east-1:966447780516:identity/huaraz-adventures.com

functions:
  # GraphQL Public Endpoint
  public:
    tracing: true
    handler: src/graphql.handler
    events:
      - http:
          path: public
          method: post
          cors:
            origin: ${file(./settings.${opt:stage}.yml):ORIGN}
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Locale-Code

  signIn:
    tracing: true
    handler: src/signIn.handler
    events:
      - http:
          path: signIn
          method: post
          cors:
            origin: ${file(./settings.${opt:stage}.yml):ORIGN}
            headers:
              - Content-Type
              - X-Amz-Date

  # GraphQL Private Endpoint
  private:
    tracing: true
    handler: src/graphql.handler
    events:
      - http:
          path: private
          method: post
          cors:
            origin: ${file(./settings.${opt:stage}.yml):ORIGN}
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Locale-Code
          authorizer:
            name: authorizer
            resultTtlInSeconds: 60
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer[ ]+([^ ]+)[ ]*$
            type: token

  # Custom OAuth2.0 Authorizer
  authorizer:
    handler: src/authorizer.handler

resources:
  Resources:
    contactsTable: ${file(./src/schema/Contact/Contact.table.yaml)}
    servicesTable: ${file(./src/schema/Service/Service.table.yaml)}
    tagsTable: ${file(./src/schema/Tag/Tag.table.yaml)}
    expeditionsTable: ${file(./src/schema/Expedition/Expedition.table.yaml)}
    tripsTable: ${file(./src/schema/Trip/Trip.table.yaml)}
    usersTable: ${file(./src/schema/User/User.table.yaml)}

custom:
  webpackIncludeModules: false # enable auto-packing of external modules

  serverless-offline:
    port: 4000

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      local:
        sources:
          - table: ${self:service}-contacts-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/Contact/Contact.seed.json]

          - table: ${self:service}-services-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/Service/Service.seed.json]

          - table: ${self:service}-tags-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/Tag/Tag.seed.json]

          - table: ${self:service}-expeditions-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/Expedition/Expedition.seed.json]

          - table: ${self:service}-trips-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/Trip/Trip.seed.json]

          - table: ${self:service}-users-${file(./settings.${opt:stage}.yml):NODE_ENV}
            sources: [./src/schema/User/User.seed.json]

  customDomain:
     domainName: api.huaraz-adventures.com
     basePath: ${opt:stage}
     stage: ${opt:stage}
     certificateName: "*.huaraz-adventures.com"
     hostedZoneId: Z3Q53TNZZF9HWH
     createRoute53Record: true


plugins:
  - serverless-plugin-tracing
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-domain-manager
