service: Recognition-Images-CreateBucket
custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []
  OPENCV_PROCESS_BUCKET: image-bucket-uploads
  OPENCV_OUTPUT_BUCKET: image-bucket-recognized

provider:
  name: aws
  runtime: python3.6
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 's3:GetObject'
        - 's3:ListBucket'
        - 's3:PutObject'
        - 's3:PutObjectTagging'
      Resource:
        - arn:aws:s3:::${self:custom.OPENCV_PROCESS_BUCKET}/*
        - arn:aws:s3:::*
        - arn:aws:s3:::*/*
    - Effect: Allow
      Action:
        - 's3:PutObject'
        - 's3:ListBucket'
        - 's3:GetObject'
        - 's3:PutObjectTagging'
      Resource:
        - arn:aws:s3:::${self:custom.OPENCV_OUTPUT_BUCKET}/*
        - arn:aws:s3:::*
        - arn:aws:s3:::*/*
  environment:
    OPENCV_OUTPUT_BUCKET: ${self:custom.OPENCV_OUTPUT_BUCKET}
    OPENCV_PROCESS_BUCKET: ${self:custom.OPENCV_PROCESS_BUCKET}

# vincula a func opencv ao bucket de sa√≠da
functions:
  opencv:
    handler: handler.opencv
    events:
      - s3:
          bucket: ${self:custom.OPENCV_PROCESS_BUCKET}
          event: s3:ObjectCreated:*
          


resources:
  - ${file(bucket_recognized.yml)}
  #- ${file(bucket_upload.yml)}  
   

plugins:
  - serverless-python-requirements
