service: yaUserMan # NOTE: update this with your service name

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  role: DefaultRole
  stage: prod
  region: ap-southeast-2
  apiKeys:
    - ${self:provider.stage}-key
  usagePlan:
    quota:
      limit: 5000
      offset: 2
      period: WEEK
    throttle:
      burstLimit: 200
      rateLimit: 100
  environment:
    USER_DDB_TABLE: ${self:service}-${self:provider.stage}-USER
    TOKEN_DDB_TABLE: ${self:service}-${self:provider.stage}-TOKEN
    IMAGE_BUCKET: yauserman-${self:provider.stage}-image-bucket
    TOKEN_PERIOD_IN_MINUTES: 60 

package:
  exclude:
    - Tests/**
    - .dynamodb/**
    - .vscode/**
    - Utils/**

functions:
  hello:
    handler: yaUserMan.hello
    events:
      - http:
          path: hello
          method: get
          cors: true

  adduser:
    handler: yaUserMan.adduser
    events:
      - http:
          path: user
          method: put
          private: true
          cor: true

  deleteuser:
    handler: yaUserMan.deleteuser
    events:
      - http:
          path: user
          method: delete
          private: true
          cors: true

  getuser:
    handler: yaUserMan.getuser
    events:
      - http:
          path: user
          method: get
          private: true
          cors: true

  login:
    handler: yaUserMan.login
    events:
      - http:
          path: user/login
          method: post
          private: true
          cors: true

  changepassword:
    handler: yaUserMan.changepassword
    events:
      - http:
          path: user/changepassword
          method: post
          private: true
          cors: true

  upload:
    handler: yaUserMan.upload
    events:
      - http:
          path: upload
          method: post
          private: true
          cors: true

  setupmaster:
    handler: yaUserMan.setupmaster
    events:
      - http:
          path: setupmaster
          method: get
          cors: true

  setupmasterlive:
    handler: yaUserMan.setupmasterlive

resources:
  Resources:
    Imagebucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:provider.environment.IMAGE_BUCKET}

    TokenTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: Token
            AttributeType: S
        KeySchema:
          - AttributeName: Token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: Expiry
          Enabled: true
        TableName: ${self:provider.environment.TOKEN_DDB_TABLE}

    UserDDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: Email
            AttributeType: S
        KeySchema:
          - AttributeName: Email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_DDB_TABLE}

    DefaultRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /yaUserMan/defaultrole/
        RoleName: yaUserManDefaultRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: yaUserManPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - cloudwatch:*
                    - dynamodb:*
                    - logs:*
                    - s3:*
                  Resource: '*'