org: yourorg
app: serverlessjams
service: serverlessjams

provider:
  name: aws
  runtime: python3.7
  environment:
    DYNAMODB_TABLE: serverlessjams-voteCounts
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:*:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  recordSongVote:
    handler: backend/record_song_vote.handler
    events:
      - http:
          path: song/vote
          method: post
          cors: true
  getSongVoteCounts:
    handler: backend/get_song_vote_counts.handler
    events:
      - http:
          path: votes
          method: get
          cors: true
resources:
  Resources:
    songsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: songName
            AttributeType: S
        KeySchema:
          - AttributeName: songName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-finch

custom:
  client:
    bucketName: fernandotest-12trafsd213
    distributionFolder: frontend
    errorDocument: index.html
