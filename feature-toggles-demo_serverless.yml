service: feature-toggle-example-infra

provider:
  name: aws
  stage: ${opt:stage}

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: True
        MfaConfiguration: OFF
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: True
            RequireNumbers: True
            RequireSymbols: False
            RequireUppercase: True
            TemporaryPasswordValidityDays: 7
        UsernameAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: True
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthFlowsUserPoolClient: True
        AllowedOAuthScopes:
          - email
          - openid
          - profile
        CallbackURLs:
          - http://localhost:4200
        GenerateSecret: True
        SupportedIdentityProviders:
          - COGNITO
        UserPoolId:
          Ref: UserPool
    ApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        EndpointConfiguration:
          Types:
            - EDGE
        Name: ${self:service}
    Authorizer:
      Type: 'AWS::ApiGateway::Authorizer'
      Properties:
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        Name: DefaultAuthorizer
        ProviderARNs:
          - Fn::GetAtt:
              - UserPool
              - Arn
        RestApiId: !Ref ApiGateway
  Outputs:
    RestApiId:
      Value:
        Ref: ApiGateway
      Export:
        Name: DEMO-REST-API-ID
    RestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGateway
          - RootResourceId
      Export:
        Name: DEMO-REST-API-ROOT-RESOURCE-ID
    Authorizer:
      Value:
        Ref: Authorizer
      Export:
        Name: DEMO-AUTHORIZER
