# Happy Coding!

service: slsblog

provider:
  name: aws
  runtime: nodejs4.3
  # role: slsBlogLambdaRole
  apiKeys:
    - SLSBLOGKEY
package:
  exclude:
    - rust/
    - admin/

functions:
  home:
    handler: main/handler.main
    events:
      - http:
          method: GET
          integration: lambda
          path: /
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
      - http:
          method: GET
          integration: lambda
          path: home
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  tags:
    handler: tags/handler.main
    events:
      - http:
          method: GET
          integration: lambda
          path: tag/{tagName}
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  post:
    handler: page/handler.main
    events:
      - http:
          method: GET
          integration: lambda
          path: page/{id}
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  admin:
    handler: admin/handler.main
    events:
      - http:
          method: GET
          integration: lambda
          path: admin
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  adminCreate:
    handler: admin/api/create/handler.main
    events:
      - http:
          method: POST
          integration: lambda
          path: admin/create
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
          private: true

resources:
  Resources:
    # slsBlogLambdaRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     Path: /
    #     RoleName: slsBlogLambdaRole
    #     AssumeRolePolicyDocument:
    #       Version: '2017'
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - lambda.amazonaws.com
    #           Action: sts:AssumeRole
    #     Policies:
    #       - PolicyName: AmazonDynamoDBFullAccess
    #       - PolicyName: AmazonS3FullAccess
    PostTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "postId"
            AttributeType: "S"
          - AttributeName: "Author"
            AttributeType: "S"
          - AttributeName: "Status"
            AttributeType: "S"
          - AttributeName: "Url"
            AttributeType: "S"
          - AttributeName: "Date"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "postId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "slsblog-posts"
        GlobalSecondaryIndexes:
          - IndexName: "slsblog-author-index"
            KeySchema:
              - AttributeName: "Author"
                KeyType: "HASH"
              - AttributeName: "postId"
                KeyType: "RANGE"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              NonKeyAttributes:
                - "Snippet"
                - "Title"
                - "Url"
                - "Date"
              ProjectionType: "INCLUDE"
          - IndexName: "slsblog-url-index"
            KeySchema:
              - AttributeName: "Url"
                KeyType: "HASH"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              NonKeyAttributes:
                - "Snippet"
                - "Content"
                - "Title"
                - "Author"
                - "postId"
                - "Date"
                - "Tags"
              ProjectionType: "INCLUDE"
          - IndexName: "slsblog-status-date-index"
            KeySchema:
              - AttributeName: "Status"
                KeyType: "HASH"
              - AttributeName: "Date"
                KeyType: "RANGE"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              NonKeyAttributes:
                - "Snippet"
                - "Title"
                - "Url"
                - "postId"
              ProjectionType: "INCLUDE"
    TagsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "tagName"
            AttributeType: "S"
          - AttributeName: "Date"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "tagName"
            KeyType: "HASH"
          - AttributeName: "Date"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "slsblog-tags"
    # TagsTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     AttributeDefinitions:
    #       - AttributeName: "postId"
    #         AttributeType: "S"
    #       - AttributeName: "tagName"
    #         AttributeType: "S"
    #       - AttributeName: "Date"
    #         AttributeType: "N"
    #     KeySchema:
    #       - AttributeName: "tagName"
    #         KeyType: "HASH"
    #       - AttributeName: "Date"
    #         KeyType: "RANGE"
    #     ProvisionedThroughput:
    #       ReadCapacityUnits: 1
    #       WriteCapacityUnits: 1
    #     TableName: "slsblog-tags"
    #     GlobalSecondaryIndexes:
    #       - IndexName: "slsblog-status-tag-index"
    #         KeySchema:
    #           - AttributeName: "tagName"
    #             KeyType: "HASH"
    #           - AttributeName: "Date"
    #             KeyType: "RANGE"
    #         ProvisionedThroughput:
    #           ReadCapacityUnits: 1
    #           WriteCapacityUnits: 1
    #         Projection:
    #           NonKeyAttributes:
    #             - "Snippet"
    #             - "Title"
    #             - "Url"
    #             - "postId"
    #           ProjectionType: "INCLUDE"
