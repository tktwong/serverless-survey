service: loldraftteams-api

# Use serverless-webpack plugin to transpile ES6/ES7
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: us-east-1

 # 'iamRoleStatement' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3::*:*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  getSummoner:
    handler: handlers/getSummoner.main
    events:
      - http:
          path: summoner/{region}/{summonerName}
          method: get
          cors: true
  getRanked:
    handler: handlers/getRanked.main
    events:
      - http:
          path: league/{region}/{summonerName}/{summonerId}
          method: get
          cors: true
  getMatchListForQueue:
    handler: handlers/getMatchListForQueue.main
    events:
      - http:
          path: matchlist/{region}/{summonerName}/{accountId}/{queueId}
          method: get
          cors: true
  getMatch:
    handler: handlers/getMatch.main
    events:
      - http:
          path: match/{region}/{summonerName}/{gameId}/{queueId}
          method: get
          cors: true
  getMastery:
    handler: handlers/getMastery.main
    events:
      - http:
          path: mastery/{region}/{summonerName}/{summonerId}
          method: get
          cors: true