custom:
  service: ${file(env.yml):service}
  provider: ${file(env.yml):provider}
  s3: ${file(env.yml):${opt:stage, 'dev'}.s3}
  usagePlan: ${file(env.yml):${opt:stage, 'dev'}.usagePlan}
  widths: ${file(env.yml):widths}
  serverless-offline:
    port: 8000

service: ${self:custom.service}

frameworkVersion: ">=1.34.1 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.provider.region}
  memorySize: ${self:custom.provider.memorySize}
  profile: ${self:custom.provider.awsProfile} # aws named profile
  stage: ${opt:stage, 'dev'} # `sls deploy --stage production` if --stage is provided, else use dev
  stackTags: # Optional CF stack tags
    Name: ${self:custom.provider.awsTagName}
  timeout: ${self:custom.provider.timeout}
  environment:
    DST_BUCKET_NAME: ${self:custom.s3.dstBucketName}
    SRC_BUCKET_NAME: ${self:custom.s3.srcBucketName}
    S3_ACCESS_KEY_ID: ${self:custom.s3.accessKeyId}
    S3_SECRET_ACCESS_KEY: ${self:custom.s3.secretAccessKey}
    WIDTHS: ${self:custom.widths}
    # SLS_DEBUG: '*'
  usagePlan:
    quota:
      limit: ${self:custom.usagePlan.quota.limit}
      period: ${self:custom.usagePlan.quota.period}

functions:
  onUpload:
    handler: handler.onUpload
    tags:
      Name: ${self:custom.provider.awsTagName}
