service: serverless-auth

plugins:
  - serverless-offline

# Configuration variables
custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs12.x
  profile: default
  region: us-east-1
  environment:
    JWT_SECRET: ${self:custom.secrets.jwtSecret}
functions:
  create_new_customer_account:
    handler: functions/create_new_customer_account.handler
    events:
      - http:
          path: create_new_customer_account
          method: post
          cors: true
          authorizer: authorize # Creating records is protecte
  login:
    handler: functions/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true
  authorize:
    handler: functions/authorize.handler
  getRecords:
    handler: functions/getRecords.handler
    events:
      - http:
          path: getRecords
          method: get
          cors: true
          # authorizer: authorize # Retrieving records is public or we can make private
  putRecords:
    handler: functions/putRecords.handler
    events:
      - http:
          path: putRecords
          method: post
          cors: true
          authorizer: authorize # Modifying records is protected
resources:
  Resources:
    Accounts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Accounts
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        # Set the capacity to auto-scale
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1