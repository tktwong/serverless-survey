# serverless.yml

service: aucbot

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  environment:
    AUCBOT_API_AUTH_PASSWORD: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_API_AUTH_PASSWORD}
    AUCBOT_API_AUTH_USERNAME: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_API_AUTH_USERNAME}
    AUCBOT_API_PORT: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_API_PORT}
    AUCBOT_API_QUICKSEARCHITEMLIMIT: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_API_QUICKSEARCHITEMLIMIT}
    AUCBOT_BNET_CLIENTID: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_BNET_CLIENTID}
    AUCBOT_BNET_CLIENTSECRET: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_BNET_CLIENTSECRET}
    AUCBOT_BNET_OAUTHURL: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_BNET_OAUTHURL}
    AUCBOT_BNET_APIURL: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_BNET_APIURL}
    AUCBOT_CACHE_TYPE: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_CACHE_TYPE}
    AUCBOT_DB_CONNLIMIT: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_DB_CONNLIMIT}
    AUCBOT_DB_CONNSTRING: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_DB_CONNSTRING}
    AUCBOT_ENV: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_ENV}
    AUCBOT_PATCH_PATCHMAJOR: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_PATCH_PATCHMAJOR}
    AUCBOT_PATCH_PATCHMINOR: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_PATCH_PATCHMINOR}
    AUCBOT_PATCH_RECIPEVERSION: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_PATCH_RECIPEVERSION}
    AUCBOT_VALUATIONENABLED: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_VALUATIONENABLED}
    AUCBOT_HOTITEMTIMEOUTDAYS: ${file(aucbot-config.${opt:stage, self:provider.stage, 'dev'}.yml):AUCBOT_HOTITEMTIMEOUTDAYS}
  vpc:
    securityGroupIds:
      - sg-095060b5147dc5904 # aucbot-service-sg
    subnetIds:
      - subnet-09870d74c807d39c4
      - subnet-03d49ecf3c571019a
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: "*"

package:
  exclude:
    - ./**
  include:
    - ./bin/**

plugins:
  - serverless-plugin-warmup

functions:
  proxy:
    warmup: true
    handler: bin/aucbot-lambda
    memorySize: 512
    timeout: 20
    events:
      - http:
          path: "{proxy+}"
          method: any
