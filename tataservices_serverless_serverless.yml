
service: tataservicereto
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  environment:
    DYNAMODB_TABLE: 'empresa_tataservice'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createEmpresa:
    handler: src/index.addEmpresa
    events:
      - http:
          path: empresa
          method: post
          cors: true

  getEmpresa:
    handler: src/index.getEmpresa
    events:
      - http:
          path: empresa/{id}
          method: get
          cors: true

  getAllEmpresas:
    handler: src/index.getEmpresas
    events:
      - http:
          path: empresa
          method: get
          cors: true

  getVehiculo:
    handler: src/index.getVehicle
    environment:
        API_ENDPOINT: "https://swapi.py4e.com/api/"
    events:
      - http:
          path: vehicle/{id}
          method: get
          cors: true

  getAllVehiculos:
    handler: src/index.getVehicles
    environment:
        API_ENDPOINT: "https://swapi.py4e.com/api/"
    events:
      - http:
          path: vehicle
          method: get
          cors: true

  getVehiculoSchema:
    handler: src/index.getVehicleSchema
    environment:
        API_ENDPOINT: "https://swapi.py4e.com/api/"
    events:
      - http:
          path: vehicle/schema
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-plugin-reducer
  - serverless-offline
  - serverless-offline-direct-lambda
