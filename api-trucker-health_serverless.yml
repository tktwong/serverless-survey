service: serverless-workstations

provider:
  name: aws
  stage: v1
  runtime: nodejs10.x
  profile: default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/trucker_health_mocks"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/trucker_emergency_button_mock"

package:
  include:
    - ./*.js
    - ./node_modules

functions:

# heart simulator

  getHeartBeat: #R
    handler: src/repositories/mockHeartBeatRepository/stayingAlive.beat
    events:
      - http:
          path: /beat
          method: get
          cors: true

# General trucker functions

  listTrucker: #R
    handler: src/repositories/truckerRepository/list.list
    events:
      - http:
          path: /trucker
          method: get
          cors: true

  queryTrucker:
    handler: src/repositories/truckerRepository/query.query
    events:
      - http:
          path: /trucker/{id}
          method: get
          cors: true

  insertTrucker: #C
    handler: src/repositories/truckerRepository/create.create
    events:
      - http:
          path: /trucker
          method: post
          cors: true

  updateTrucker: #C
    handler: src/repositories/truckerRepository/update.update
    events:
      - http:
          path: /trucker/{id}
          method: PUT
          cors: true

  deleteTrucker: #D
    handler: src/repositories/truckerRepository/delete.delete
    events:
      - http:
          path: /trucker/{id}
          method: DELETE
          cors: true

# mock emergency resources

  listEmergency: #R
    handler: src/repositories/emergencyRepository/list.list
    events:
      - http:
          path: /emergency
          method: get
          cors: true

  queryEmergency:
    handler: src/repositories/emergencyRepository/query.query
    events:
      - http:
          path: /emergency/{id}
          method: get
          cors: true

  insertEmergency: #C
    handler: src/repositories/emergencyRepository/create.create
    events:
      - http:
          path: /emergency
          method: post
          cors: true

  updateEmergency: #C
    handler: src/repositories/emergencyRepository/update.update
    events:
      - http:
          path: /emergency/{id}
          method: PUT
          cors: true

  deleteEmergency: #D
    handler: src/repositories/emergencyRepository/delete.delete
    events:
      - http:
          path: /emergency/{id}
          method: DELETE
          cors: true
