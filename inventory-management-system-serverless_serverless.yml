# Welcome to Serverless!


service: inventory-management-system
app: inventory-management-system

provider:
  name: aws
  stage: prod
  region: ${env:REGION}
  #TODO remove iamRoleStatements if you are not using SQS
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
        - "sqs:GetQueueAttributes"
      Resource: "arn:aws:sqs:${self:provider.region}:${env:AWS_ACCOUNT_ID}:${env:SQS_QUEUE_URL}"
    - Effect: "Allow"
      Action:
        - "sqs:ListQueues"
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
        - "sqs:DeleteMessage"
        - "sqs:ReceiveMessage"
      Resource: "arn:aws:sqs:${self:provider.region}:${env:AWS_ACCOUNT_ID}:*"
    - Effect: "Allow"
      Action:
        - "es:ESHttpGet"
        - "es:ESHttpPut"
        - "es:ESHttpDelete"
        - "es:ESHttpPost"
      Resource: "arn:aws:es:${self:provider.region}:${env:AWS_ACCOUNT_ID}:*"
  runtime: nodejs10.x


functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

  sendEmailNotification:
    handler: consumers/queue.sendEmailNotification
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SendEmailNotificationQueue
              - Arn
          batchSize: 1


resources:
  Resources:
    SendEmailNotificationQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${env:EMAIL_QUEUE}

plugins:
  - serverless-offline
  - serverless-dotenv-plugin