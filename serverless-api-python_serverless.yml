service: api-python-hello-world

custom:
  stage: ${opt:stage, self:provider.stage}
  contactTable: dynamo-${self:custom.stage}-contact-table

provider:
  name: aws
  region: sa-east-1
  runtime: python3.7
  stage: dev
  apiKeys:
    - name: ${self:custom.stage}-myKey

functions:
  hello:
    handler: src/hello.hello_world
    runtime: ${self:provider.runtime}
    memorySize: 256
    timeout: 20
    events:
      - http:
          path: api/python/hello-world
          method: get
          integration: lambda
          private: true  

  contact-post:
    handler: src/contact.create
    environment:
      TABLE: ${self:custom.contactTable}
    runtime: ${self:provider.runtime}
    memorySize: 256
    timeout: 20
    events:
      - http:
          path: contact
          method: post          
          integration: lambda
          private: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource:
          - !GetAtt ContactTable.Arn  

  contact-get:
    handler: src/contact.list
    environment:
      TABLE: ${self:custom.contactTable}
    runtime: ${self:provider.runtime}
    memorySize: 256
    timeout: 20
    events:
      - http:
          path: contact
          method: get
          private: true
          integration: lambda
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource:
          - !GetAtt ContactTable.Arn

  contact-delete:
    handler: src/contact.remove
    environment:
      TABLE: ${self:custom.contactTable}
    runtime: ${self:provider.runtime}
    memorySize: 256
    timeout: 20
    events:
      - http:
          path: contact
          method: delete
          private: true
          integration: lambda
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource:
          - !GetAtt ContactTable.Arn                  

resources:
  - Resources:
      ContactTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
          AttributeDefinitions:
            - AttributeName: id
              AttributeType: S
          KeySchema:
            - AttributeName: id
              KeyType: HASH
          BillingMode: PAY_PER_REQUEST
          TableName: ${self:custom.contactTable}    

plugins:
  - serverless-iam-roles-per-function                