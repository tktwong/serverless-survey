
service: lambdaalb

provider:
  name: aws
  region: us-west-2
  runtime: dotnetcore3.1
  stackTags:
    PointOfContact: "Mike OShea"
    TeamManager: "Mike OShea"
    Schedule: "NA"
    Name: "Deployment Test"
    BusinessUnit: "PPA"
    
custom:
  vpcConfig:
    vpcId: vpc-c93faeb1
    subnets:
      - subnet-8740bdda
      - subnet-9301e3eb
      - subnet-bd6c1896
      - subnet-ef1718a4

package:
  individually: true
      
functions:
  webapi:
    handler: CsharpHandlers::Namespace.API::FunctionHandler
    package:
      artifact: bin/Release/netcoreapp3.1/lambdaalb.zip
    environment:
      AUTH_DOMAIN: "dev-569-d-y7.auth0.com"
      AUTH_AUDIENCE: "65qyq9ml84"
      AUTH_PERMISSIONS: "write:votes,read:stuff"
    events:
      - alb:
          listenerArn: 
            Ref: Listener
          priority: 1
          conditions:
            path: /api/*

resources:
  Resources:
    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !GetAtt
          - WebapiLambdaFunction
          - Arn
        Action: 'lambda:InvokeFunction'
        Principal: elasticloadbalancing.amazonaws.com

    SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: Generic HTTP Security Group
        SecurityGroupIngress: 
          -
            CidrIp: 0.0.0.0/0
            FromPort: 443
            IpProtocol: tcp
            ToPort: 443
        VpcId: ${self:custom.vpcConfig.vpcId}

    LoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties: 
        SecurityGroups: 
          - Ref: SecurityGroup
        Subnets: 
          ${self:custom.vpcConfig.subnets}

    TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties: 
        TargetType: lambda
        Targets:
          - Id: !GetAtt [ WebapiLambdaFunction, Arn ]

    Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        Certificates:
          - CertificateArn: 'arn:aws:acm:us-west-2:455313538421:certificate/7804bac0-64d0-4a58-b9ce-f177e8fab93d'
        DefaultActions: 
          - 
            TargetGroupArn:
              Ref: TargetGroup
            Type: forward
        LoadBalancerArn:
          Ref: LoadBalancer
        Port: 443
        Protocol: HTTPS

  Outputs:
    LoadBalancerDNSName:
      Value: !GetAtt LoadBalancer.DNSName
  
