service: valpi
app: valpi

plugins:
  - serverless-offline
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api.valpi.cc
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  stage: dev
  iamRoleStatements:
    -
      Effect: Allow
      Resource: "*"
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

functions:
  get-value:
    handler: handler.get
    events:
      -
        http:
          path: /{name}
          method: get
          cors: true
  create-value:
    handler: handler.create
    events:
      -
        http:
          path: /{name}
          method: post
          cors: true
  update-value:
    handler: handler.update
    events:
      -
        http:
          path: /{name}
          method: patch
          cors: true
  delete-value:
    handler: handler.delete
    events:
      -
        http:
          path: /{name}
          method: delete
          cors: true

resources:
  Resources:
    datas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: valpi-datas
        AttributeDefinitions:
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
