service: tweetscrape

plugins:
    - serverless-scriptable-plugin
    - aws-amplify-serverless-plugin
    - serverless-webpack
    - serverless-offline
    - serverless-s3-remover
    - serverless-iam-roles-per-function
    - serverless-s3-sync

provider:
    name: aws
    runtime: nodejs8.10
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-west-2'}
    profile: ${self:custom.profiles.${self:provider.stage}, 'default'}

package:
    individually: true
    exclude:
        - node_modules/aws-sdk/**
        - node_modules/chrome-aws-lambda/**
        - app/**
        - .git/**

layers:
    chrome:
        path: app/chrome/dist

custom:
    serverless-offline:
        host: 0.0.0.0
        resourceRoutes:
            StaticFilesProxyMethod:
                Uri: http://localhost:3001/{file}

    webpack:
        webpackConfig: config/server.webpack.js
        includeModules:
            forceExclude:
                - chrome-aws-lambda

    apiPrefix: api

    StaticFilesBucketName: ${self:service}-${self:provider.stage}-staticfilesbucket
    s3Sync:
        -   bucketName: ${self:custom.StaticFilesBucketName}
            localDir: dist

    remover:
        prompt: false
        buckets:
            - ${self:custom.StaticFilesBucketName}

    scriptHooks:
        before:package:initialize:
            -   cd app/chrome/ &&
                rm -rf dist/ &&
                git checkout tags/v1.11.2 &&
                npm pack &&
                mkdir -p dist/nodejs/node_modules/chrome-aws-lambda &&
                tar --directory dist/nodejs/node_modules/chrome-aws-lambda/ --extract --file chrome-aws-lambda-*.tgz --strip-components=1 &&
                rm -f chrome-aws-lambda-*.tgz
        after:deploy:deploy:
            - serverless s3sync -r ${self:provider.region} -s ${self:provider.stage}
        before:s3sync:sync:
            - npm run build:client

functions:
    tweet:
        handler: src/lambda/scrape.default
        timeout: 180
        memorySize: 1536
        layers:
            - Ref: ChromeLambdaLayer
        events:
            - http:
                method: GET
                path: /${self:custom.apiPrefix}/tweet/{tweet+}
                cors: true
                timeout: 300
                memorySize: 2048
                request:
                    headers:
                        Content-Type: application/json

    search:
        handler: src/lambda/search.default
        timeout: 600
        memorySize: 1536
        layers:
            - Ref: ChromeLambdaLayer
        events:
            - http:
                method: GET
                path: /${self:custom.apiPrefix}/search
                cors: true
                timeout: 600
                memorySize: 2048
                request:
                    headers:
                        Content-Type: application/json

resources:
    - Resources:
    - ${file(config/resources/static-files.yml)}
    - ${file(config/resources/static-proxy.yml)}
    - ${file(config/resources/cognito-auth.yml)}
    - ${file(config/resources/cloudfront.yml)}
