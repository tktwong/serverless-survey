custom:
  service: ${file(./package.json):name}
  prefix: ${self:custom.service}-${env:ENVIRONMENT}-
  dotenv:
    file: file(./.env)
    basePath: ./

service: ${self:custom.service}
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:ENVIRONMENT}
  region: ${env:AWSC_REGION}
  timeout: 15
  environment:
    SERVICE: ${self:custom.service}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { Fn::GetAtt: ["${env:DB_POSTS}", 'Arn'] }

functions:
  records:
    handler: dist/handler._records
    events:
      - http:
          path: /records
          method: get

resources:
  Resources:
    posts:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${env:DB_DEL_POLICY}
      Properties:
        TableName: ${self:custom.prefix}${env:DB_POSTS}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-plugin-include-dependencies
