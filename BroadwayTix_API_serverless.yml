# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: broadway-tix
# endpoints:
#   POST - https://4o319y7qe2.execute-api.us-east-1.amazonaws.com/dev/createReservation
#   GET - https://4o319y7qe2.execute-api.us-east-1.amazonaws.com/dev/posts
# app and org for use with dashboard.serverless.com
#  createReservation: broadway-tix-dev-createReservation
#  getAllPosts: broadway-tix-dev-getAllPosts


  # createPost:
  #   handler: handler.createReservation
  #   events:
  #   - http:
  #       path: /post
  #       method: post

app: broadway-tix
org: jegathings

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
custom:
  settings:
    TABLE: broadway_people
    LOGIN_TABLE: broadway_users

provider:
  name: aws
  runtime: nodejs12.x
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:Query
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.TABLE}/index/*"
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.LOGIN_TABLE}/index/*"
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.TABLE}"

functions:
  login:
    handler: handler.login
    events:
    - http:
        path: /login
        method: post
        cors:
          - enabled: true
          - origin: '*'
          - headers: 'Content-Type,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Access-Control-Allow-Origin'

  createPost:
    handler: handler.createReservation
    events:
    - http:
        path: /post
        method: post
        cors:
          - enabled: true
          - origin: '*'
          - headers: 'Content-Type,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Access-Control-Allow-Origin'

  getComics:
    handler: handler.getTheComics
    events:
    - http:
        path: /getTheComics
        method: get
        cors:
          - enabled: true
          - origin: '*'
          - headers: 'Content-Type,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Access-Control-Allow-Origin'

  createShow:
    handler: handler.createShow
    events:
    - http:
        path: /createShow
        method: post
        cors:
          - enabled: true
          - origin: '*'
          - headers: 'Content-Type,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Access-Control-Allow-Origin'

  