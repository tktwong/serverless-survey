service: 
  name: consorciei
package:
  individually: true
  exclude:
    - ./**

frameworkVersion: ">=1.0.0 <2.0.0"

provider:
  name: aws
  region: us-east-2
  runtime: nodejs10.x
  tags:
    projeto: consorciei
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  versionFunctions: false
  deploymentBucket:
    name: consorciei-lambdas

functions:
  authMiddleware:
    handler: authMiddleware/index.handler
    name: ${self:provider.stage}-${self:service.name}-authMiddleware
    description: Request middleware authorizer
    timeout: 30
    package:
      include:
        - authMiddleware/**

  createUser:
    handler: createUser/index.handler
    name: ${self:provider.stage}-${self:service.name}-createUser
    description: Create new User
    timeout: 30
    events:
      - http:
         path: user
         method: post
         authorizer: authMiddleware
         cors:
           origin: '*'
         integration: lambda

    package:
      include:
        - createUser/**
    environment:
      DB_HOST: ${ssm:DB_HOST}
      DB_USER: ${ssm:DB_USER}
      DB_PASSWORD: ${ssm:DB_PASSWORD}
      DB_DATABASE: ${ssm:DB_DATABASE}
      
  login:
    handler: login/index.handler
    name: ${self:provider.stage}-${self:service.name}-login
    description: Authenticate user on system.
    timeout: 30
    events:
      - http:
         path: login
         method: post
         cors:
           origin: '*'
           headers:
             - Accept
             - Content-Type
         integration: lambda
    package:
      include:
        - login/**
    environment:
      DB_HOST: ${ssm:DB_HOST}
      DB_USER: ${ssm:DB_USER}
      DB_PASSWORD: ${ssm:DB_PASSWORD}
      DB_DATABASE: ${ssm:DB_DATABASE}