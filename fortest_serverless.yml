org: rossowu
app: myapp

service:
  name: myTestService

plugins:
  - serverless-sam

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2
  stackName: myTestStack
  memorySize: 512
  timeout: 10
  logRetentionInDays: 3
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:*:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: ServerlessDeploymentBucket
  stackPolicy:
    - Effect: Allow
      Principal: '*'
      Action: 'Update:*'
      Resource: '*'
    - Effect: Deny
      Principal: '*'
      Resource: '*'
      Action:
        - Update:Replace
        - Update:Delete

  notificationArns:
    - 'arn:aws:sns:us-east-2:187917615240:errorsSNS'

  tracing:
    lambda: true
  
package:
  include:
    - __tests__/**
    - node_modules/**
    - index.js
  exclude:
    - .git/**
  excludeDevDependencies: false
  artifact: functions.zip
  individually: true 


functions:
  index:
    handler: index.handler
    name: ${opt:stage, self:provider.stage, 'dev'}-testLambda
    description: My Test function
    memorySize: 512
    reservedConcurrency: 1 
    provisionedConcurrency: 1
    runtime: nodejs12.x
    timeout: 10
    role: arn:aws:iam::187917615240:role/lambda-s3-role
    onError: arn:aws:sns:us-east-2:187917615240:errorsSNS
    disableLogs: false
    tracing: Active
    events:
      - s3:
          bucket: mybucketrosso
        #   event: s3:ObjectCreated:*
          event: s3:ObjectCreated:Put
          rules:
            - suffix: .csv
          existing: true

configValidationMode: warn

resources:
  Resources:
    Positions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Positions
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1