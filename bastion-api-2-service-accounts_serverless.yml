service: bastion-apig
provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev

functions:
  tester:
    handler: private-api-tester.handler
    vpc:
      securityGroupIds:
        - ${cf:bastion-vpc-${self:provider.stage}.PublicEndpointSG}
      subnetIds:
        - ${cf:bastion-vpc-${self:provider.stage}.BastionPrivateSubnetA}
    environment:
#      could also use the ip address of the eni here (it's what the nlb targets).
      VPCE_DNS_NAME: vpce-0af67ca1e362bc54f-5fpnxfg2.execute-api.eu-west-1.vpce.amazonaws.com
      API_GW_ENDPOINT:
        Fn::Join:
          - ''
          - - Ref: ApiGatewayRestApi
            - '.execute-api.${self:provider.region}.amazonaws.com'

resources:
  Description: API using VPC Link
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Description: VPC Link Test
        EndpointConfiguration:
          Types:
            - REGIONAL
        Name: bastion-apig

    ApiGatewayResourceProxy:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
        PathPart: '{proxy+}'
        RestApiId: !Ref ApiGatewayRestApi

    ApiGatewayMethodHelloGet:
      Type: AWS::ApiGateway::Method
      Properties:
        ApiKeyRequired: false
        AuthorizationType: NONE
        HttpMethod: GET
        Integration:
          ConnectionId: ${cf:bastion-vpc-${self:provider.stage}.BastionVpcLink}
          ConnectionType: VPC_LINK
          IntegrationHttpMethod: POST
          Type: HTTP_PROXY
#          uri of the rest endpoint (+stage) sitting in service account.
          Uri: https://blah.com:443/blah
        ResourceId: !Ref ApiGatewayResourceProxy
        RestApiId: !Ref ApiGatewayRestApi

    ApiGatewayDeployment157688238695:
      Type: AWS::ApiGateway::Deployment
      DependsOn: ApiGatewayMethodHelloGet
      Properties:
        Description: Description of stage
        RestApiId: !Ref ApiGatewayRestApi
        StageName: ${self:provider.stage}

