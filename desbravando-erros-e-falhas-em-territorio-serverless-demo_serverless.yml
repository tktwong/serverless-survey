service: phase-4-error-handling
plugins:
  - serverless-aws-documentation
provider:
  name: aws
  runtime: python3.8
  region: 'us-east-1'
  memorySize: 128
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource:
        - ${cf:demo-database-dynamo.DynamoDBDemoArn}
    - Effect: 'Allow'
      Action:
        - 'sns:*'
      Resource:
        -  ${cf:phase-2-error-handling.SNSAPIArn}
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource:
        -  ${cf:phase-2-error-handling.SQSQueueAPIArn}
custom:
  documentation:
    info:
      version: 0.0.1
      title: "Game sell API"
      description: "Game sell API"
    resources:
      -
        path: ${opt:stage, self:provider.stage, 'dev'}/game-sell
        description: "Path to sell a game"
    models:
      -
        name: "GameSellRequest"
        description: "receive a purchase of a game"
        contentType: "application/json"
        schema: ${file(schemas/game-sell-schema-request.json)}
      -
        name: "GameSellResponse"
        description: "respond a purchase of a game"
        contentType: "application/json"
        schema: ${file(schemas/game-sell-schema-response.json)}
      -
        name: "ErrorResponse"
        description: "Error response model"
        contentType: "application/json"
        schema: ${file(schemas/error-schema-response.json)}

package:
  exclude:
    - "node_modules/*"
    - "./node_modules/**"
    - schemas/*


functions:
  game-sell:
    handler: lambda.handler
    events:
      - http:
          path: /game-sell
          method: post
          cors: true
          request:
            schema:
              application/json: ${file(schemas/game-sell-schema-request.json)}
          documentation:
            summary: "Sell a game"
            description: "Sell a game api"
            requestBody:
              description: "Attributes to create a sell"
            requestModels:
              "application/json": "GameSellRequest"
            methodResponses:
              -
                statusCode: "201"
                responseBody:
                  description: "Get result."
                responseModels:
                  "application/json": "GameSellResponse"
              -
                statusCode: "400"
                responseBody:
                  description: "Error response."
                responseModels:
                  "application/json": "ErrorResponse"
    environment:
      snsArn: ${cf:phase-2-error-handling.SNSAPIArn}