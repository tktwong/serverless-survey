# serverless.yml

service: airtable-sync

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-east-1
  memorySize: 128
  timeout: 60

  environment:
    AIRTABLE_VIEW: filterByFormula=AND(IS_AFTER(NOW(),{StartDate}),{Approved}, FIND("'tgb'",ARRAYJOIN({Blog})))

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"

functions:

  sync:
    CodeUri: s3://markham-lambda-1/airtable-sync-lambda.zip
    handler: lambda.lambda_handler
    events:
      - schedule: rate(5 minutes)

# you can add packaging information here
package:
  include:
    - src/**
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**
#    Define function environment variables here
#    environment:
#      variable2: value2
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux



    