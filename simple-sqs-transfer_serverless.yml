# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: simple-sqs-transfer # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.configurations.${self:provider.stage}.profile}
  region: ${self:custom.configurations.${self:provider.stage}.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - { "Fn::GetAtt": ["DestinationQueue", "Arn" ] }

custom:
  defaultStage: dev
  configurations:
    dev:
      profile: serverless-cli
      region: eu-west-2
      sourceQueue: my-source-queue
      destinationQueue: my-destination-queue
    beta:
      profile: sqs-transfer-beta
      region: us-west-2
      sourceQueue: beta-source-queue
      destinationQueue: beta-destination-queue
    prod:
      profile: sqs-transfer-prod
      region: us-east-1
      sourceQueue: prod-source-queue
      destinationQueue: prod-destination-queue

package:
  artifact: target/${self:service}-1.0.jar

functions:
  firstQueueConsumer:
    description: "Reads messages from source queue and transfer them to destination queue"
    handler: com.bahadirakin.sqs.SQSHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SourceQueue, Arn]
          batchSize: 1
          enabled: true
    environment:
      destinationQueueUrl:
        Ref: DestinationQueue
    memorySize: 256
    timeout: 25

resources:
  Resources:
    SourceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "${self:custom.configurations.${self:provider.stage}.sourceQueue}"
    DestinationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "${self:custom.configurations.${self:provider.stage}.destinationQueue}"

