service:
  name: twitter-admin

resources:
  Resources:
    AccountsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: accounts
        AttributeDefinitions:
          - AttributeName: account_type
            AttributeType: S
          - AttributeName: uid
            AttributeType: S
        KeySchema:
          - AttributeName: account_type
            KeyType: HASH
          - AttributeName: uid
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    AccountRelationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: account_relations
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: touid
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: touid
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8010
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true
      migrate: true
  dotenv:
    path: ./.env
    include:
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - region
      - endpoint

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-1
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

functions:
  app:
    handler: src/app.handler
    memorySize: 128
    timeout: 900
    events:
      - http: ANY /
      - http: ANY /{proxy+}