# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: books-api
plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

provider:
  name: aws
  runtime: nodejs10.x
  region: 'eu-central-1'
  stage: dev
  environment:
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'

functions:
  create:
    handler: src/functions/booksCreate.handler
    events:
      - http:
          path: books/add
          method: post
          cors: true
  get:
    handler: src/functions/booksGet.handler
    events:
      - http:
          path: books/{bookUuid}
          method: get
          cors: true
  delete:
    handler: src/functions/booksDelete.handler
    events:
      - http:
          path: books/{bookUuid}/delete
          method: delete
          cors: true
  update:
    handler: src/functions/booksUpdate.handler
    events:
      - http:
          path: books/{bookUuid}/update
          method: put
          cors: true
  scan:
    handler: src/functions/booksScan.handler
    events:
      - http:
          path: books
          method: get
          cors: true
# you can add CloudFormation resource templates here
resources:
  # DynamoDB
  - ${file(config/resources/dynamodb-table-books.yml)}
