service: wokflow-spike

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs10.x

functions:
  log:
    handler: functions/log.handler
    name: ${self:service}-log

  wait-for-event:
    handler: functions/waitForEvent.handler
    name: ${self:service}-wait-for-event

  add-to-exception-pot:
    handler: functions/addToExceptionPot.handler
    name: ${self:service}-add-to-exception-pot

stepFunctions:
  stateMachines:
    workflowSpike:
      events:
        - http:
            path: start
            method: POST
        - http:
            path: continue
            method: POST
            action: SendTaskSuccess
        - http:
            path: status
            method: POST
            action: DescribeExecution
      definition:
        StartAt: log
        States:
          log:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-log"
            Next: schedule
          schedule:
            Type: Wait
            TimestampPath: "$.scheduleForDate"
            Next: doTwoThings
          doTwoThings:
            Type: Parallel
            Branches:
              - StartAt: waitForEvent
                States:
                  waitForEvent:
                    Type: Task
                    Resource: "arn:aws:states:::lambda:invoke.waitForTaskToken"
                    Parameters:
                      FunctionName: "${self:service}-wait-for-event"
                      Payload:
                        token.$: "$$.Task.Token"
                    TimeoutSeconds: 1200
                    Catch:
                      - ErrorEquals: ["States.Timeout"]
                        ResultPath: "$.error"
                        Next: addToExceptionPot
                    End: true
                  addToExceptionPot:
                    Type: Task
                    Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-add-to-exception-pot"
                    End: true
              - StartAt: waitForOtherEvent
                States:
                  waitForOtherEvent:
                    Type: Task
                    Resource: "arn:aws:states:::lambda:invoke.waitForTaskToken"
                    Parameters:
                      FunctionName: "${self:service}-wait-for-event"
                      Payload:
                        token.$: "$$.Task.Token"
                    TimeoutSeconds: 1200
                    Catch:
                      - ErrorEquals: ["States.Timeout"]
                        ResultPath: "$.error"
                        Next: addToOtherExceptionPot
                    End: true
                  addToOtherExceptionPot:
                    Type: Task
                    Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-add-to-exception-pot"
                    End: true
            End: true

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
