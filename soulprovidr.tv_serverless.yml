plugins:
  - serverless-domain-manager
  - serverless-pseudo-parameters
  - serverless-secrets-plugin

custom:
  customDomain:
    basePath: ''
    certificateArn: ${self:custom.secrets.certificateArn}
    createRoute53Record: true
    domainName: api.soulprovidr.tv
    stage: ${self:provider.stage}
  channels:
    tableName: channels
  secrets: ${file(./secrets.${self:provider.stage}.yml)}
  storage:
    bucketName: soulprovidr.tv
  videos:
    queueName: ${self:service}-videos-queue
    queueUrl:
      Ref: SQSQueue
    tableName: videos

service: soulprovidr-tv-api

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: false
  profile: soulprovidr
  region: ca-central-1
  stage: dev
  environment:
    CHANNELS_TABLE: ${self:custom.channels.tableName}
    S3_BUCKET_NAME: ${self:custom.storage.bucketName}
    VIDEOS_QUEUE_URL: ${self:custom.videos.queueUrl}
    VIDEOS_TABLE: ${self:custom.videos.tableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.channels.tableName}
        - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.videos.tableName}

    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:custom.storage.bucketName}/*

    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:${self:provider.region}:#{AWS::AccountId}:${self:custom.videos.queueName}

functions:
  - ${file(./config/functions.yml)}

resources:
  - ${file(./config/resources.yml)}