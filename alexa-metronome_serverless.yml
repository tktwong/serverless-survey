service: alexa-sample-project

frameworkVersion: ">=1.34.0 <2.0.0"

provider:
  name: aws
  profile: alexa-sample-project
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  deploymentBucket: ${self:custom.deployment_bucket}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - lambda:GetLayerVersion
        - lambda:PublishLayerVersion
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "arn:aws:logs:*:*:*"

functions:
  actuators_alexa_handler:
    handler: src/alexa_sample_handler.lambda_handler
    description: Controls Alexa responses for arduino actuators demo
    memorySize: 128
    timeout: 15
    environment:
      ENV: 'environment'
    iamRoleStatementsName: alexa-sample-handler-role-${self:custom.stage}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - lambda:GetLayerVersion
          - lambda:PublishLayerVersion
        Resource: "*"
      - Effect: "Allow"
        Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
        Resource: "arn:aws:logs:*:*:*"
  

resources:
  Description: SNS Topics CloudFormation template generated by serverless framework
          

package:
  individually: true
  exclude:
    - node_modules/**
    
custom:
  pythonRequirements:
    dockerizePip: non-linux
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  user_name: filipebarretto
  deployment_bucket: ${self:custom.account_id}-${self:service}-${self:provider.stage}
  account_id: ${file(./customjs/custom-account-id.js):getAccountId}
  
  
  
plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-plugin-create-deployment-bucket
  - serverless-pseudo-parameters
