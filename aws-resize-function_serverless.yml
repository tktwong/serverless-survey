service: aws-resize

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  stage: dev
  # optional, in MB, default is 1024, min is 128
  memorySize: 2048
  # optional, in seconds, default is 6
  timeout: 30
  # optional, default is true
  versionFunctions: false
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${env:IMAGE_BUCKET, 'sample-bucket'}
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${env:IMAGE_BUCKET, 'sample-bucket'}
            - "/*"

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-existing-s3

package:
  exclude:
    - "node_modules/aws-sdk/**"
    - "node_modules/aws-lambda/**"

functions:
  handlePost:
    handler: src/resize.postHandler
    events:
      - http:
          enabled: true
          path: api/resize
          method: post
          cors: true
  handleExistingS3:
    handler: src/resize.s3Handler
    events:
      - existingS3:
          bucket: ${env:IMAGE_BUCKET, 'sample-bucket'}
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: profile-image/
            - suffix: .jpg
      - existingS3:
          bucket: ${env:IMAGE_BUCKET, 'sample-bucket'}
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: profile-image/
            - suffix: .png
