service: cloudsearch-s3-handler

provider:
  name: aws
  stage: ${env:ENVIRONMENT}
  runtime: nodejs12.x
  region: us-east-1
  vpc:
    securityGroupIds:
      - ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.webapp_elb_sg}
    subnetIds: ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.prod_apps_1_all}
  stackTags:
    Name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}
    owner: apps@cru.org
    application: ${env:PROJECT_NAME}
    env: ${self:custom.environmentMap.${env:ENVIRONMENT}}
    managed_by: serverless-framework
    function: lambda
  iamRoleStatements:
    - Effect: Allow
      Action:
        - CloudDearch:Document
      Resource: ${env:CLOUDSEARCH_DOMAIN_ARN}
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:ListBucket
        - s3:GetBucketNotification
        - s3:PutBucketNotification
      Resource:
        - arn:aws:s3:::${env:S3_BUCKET_NAME}
        - arn:aws:s3:::${env:S3_BUCKET_NAME}/*
  environment: ${file(serverless/environment.js)}

functions:
  s3event:
    handler: handlers/event.handler
    events:
      - existingS3:
          # See https://www.npmjs.com/package/serverless-plugin-existing-s3
          bucket: ${env:S3_BUCKET_NAME}
          events:
            - s3:ObjectCreated:*
          rules:
            - suffix: .html

package:
  individually: true
  exclude:
    - .git/**
    - test/**
    - '**/*.test.js'
    - .deployment/**

plugins:
  - serverless-webpack
  - serverless-plugin-existing-s3
  - serverless-plugin-scripts

custom:
  scripts:
    hooks:
      # Run s3deploy command
      'aws:deploy:finalize:cleanup': 'npx serverless --stage $ENVIRONMENT s3deploy'
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: yarn
    excludeFiles: '**/*.test.js'
  environmentMap:
    production: prod
    staging: stage
    development: dev
    lab: lab

resources:
  Resources:
    IamRoleLambdaExecution:
      Properties:
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess
