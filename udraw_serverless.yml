service: udraw-canvasapi

plugins:
  - serverless-apigw-binary
  - serverless-s3-sync
provider:
  name: aws
  endpointType: REGIONAL
  runtime: nodejs8.10
  region: ap-southeast-2
  stage: dev
  environment:
    UDRAW_S3_BUCKET: udraw-tiles

  iamRoleStatements:
    - Effect: Allow
      Action:
      - s3:ListBucket
      Resource:
      - 'arn:aws:s3:::udraw-tiles'
    - Effect: Allow
      Action:
      - s3:PutObject
      - s3:GetObject
      Resource:
      - 'arn:aws:s3:::udraw-tiles/*'

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

custom:
  # https://www.npmjs.com/package/serverless-apigw-binary
  apigwBinary:
    types:
      - '*/*'
  siteName: udraw.me
  siteAcmArn: 'arn:aws:acm:us-east-1:644068571316:certificate/e6c100e3-d2db-4794-9310-87b9071a3f55'
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: ../public

functions:
  canvas:
    description: Function for Udraw Canvas Tile API
    memorySize: 128
    handler: handler.main
    events:
      - http:
          path: /{proxy+}
          method: GET
          cors: true
          #contentHandling: CONVERT_TO_BINARY
      - http:
          path: /{proxy+}
          method: PUT
          cors: true
          #contentHandling: CONVERT_TO_BINARY
      - http:
          path: /{proxy+}
          method: OPTIONS
          cors: true

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Description: udraw Canvas Tile API serverless stack

  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]
    staticfiledistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          IPV6Enabled: true
          HttpVersion: http2
          Origins:
          - DomainName:
              Fn::GetAtt:
                - StaticSite
                - DomainName
            Id: udrawstaticS3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
          Enabled: 'true'
          Comment: 'Index and static access for udraw'
          DefaultRootObject: index.html
          Aliases:
          - ${self:custom.siteName}
          DefaultCacheBehavior:
            AllowedMethods:
            - HEAD
            - GET
            - OPTIONS
            TargetOriginId: udrawstaticS3Origin
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: allow-all
          PriceClass: PriceClass_All
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.siteAcmArn}
            SslSupportMethod: 'sni-only'
            MinimumProtocolVersion: 'TLSv1.1_2016'
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
