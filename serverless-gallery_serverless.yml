service: serverless-gallery
frameworkVersion: '=1.38.0'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  region: us-east-1

plugins:
  - '@anttiviljami/serverless-stack-output'

# The custom definitions will be used by the plugins and other declarations.
# Note that the 'resourceNames' variable is not required by any plugin but is used
# to define resource names who's names are long, so this definitions will help
# simplify referencing all resource names from a single source of truth.
custom:
  resourceNames:
    # change uniqueWord to one of your choice, S3 public web buckets needs to be unique.
    uniqueWord: gallery
    uniqueStage: ${self:provider.stage}${self:custom.resourceNames.uniqueWord}
    userPool: ${self:custom.resourceNames.uniqueStage}-user-pool
    pictureBucket: ${self:custom.resourceNames.uniqueStage}-picture
    identityPool: ${self:custom.resourceNames.uniqueStage}IdentityPool
    frontEndBucket: ${self:custom.resourceNames.uniqueStage}-front-end
    pictureTable: ${self:custom.resourceNames.uniqueStage}-picture-table
    poolClient: ${self:custom.resourceNames.uniqueStage}-user-pool-client
  output:
    # The output post processing script which will build the .env file.
    handler: scripts/config.handler

# The Resource section will follows the AWS cloudformation syntax and it is used
# to define additional AWS resources which you desire to use in your serverless
# stack. You can directly define these resources down here but it is good practice
# to split the resources definition into separate files to prevent overly large
# yml files hard to maintain and read.
resources:
  - ${file(resources/security.yml)}
  - ${file(resources/data-storage.yml)}

bundle:
  linting: false
