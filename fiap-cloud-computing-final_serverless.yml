service: cloud-serverless-trab

custom:
  #colocar o parametro de retorno do terraform "serverless-stage"
  stage: 'dev'
  #colocar o parametro de retorno do terraform "serverless-userId"
  userId: '085297972612'
  
provider:
  name: aws
  runtime: nodejs10.x
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: "Allow" # xray permissions (required)
      Action:
       - xray:PutTraceSegments
       - xray:PutTelemetryRecords
       - sqs:ChangeMessageVisibility
       - sqs:DeleteMessage
       - sqs:ReceiveMessage
       - sqs:SendMessage
       - SNS:GetTopicAttributes
       - SNS:SetTopicAttributes
       - SNS:AddPermission
       - SNS:RemovePermission
       - SNS:DeleteTopic
       - SNS:Subscribe
       - SNS:ListSubscriptionsByTopic
       - SNS:Publish
       - SNS:Receive
      Resource:
       - "*"

functions:
  insert:
    handler: src/insert.handler
    environment:
      #URL DA FILA PRINCIPAL
      sqsUrl: 'https://sqs.us-east-1.amazonaws.com/${self:custom.userId}/SQS-principal-${self:custom.stage}'
    events:
      - http:
          path: insertsqs
          method: post
          
  receiver:
    handler: src/receive.handler
    environment:
      #URL DA FILA DLQ
      sqsUrl: 'https://sqs.us-east-1.amazonaws.com/${self:custom.userId}/SQS-principal-${self:custom.stage}-dlq'
    events:
      - sqs:
          #ARN DA FILA PRINCIPAL
          arn: 'arn:aws:sqs:us-east-1:${self:custom.userId}:SQS-principal-${self:custom.stage}'
          batchSize: 10
          maximumBatchingWindow: 60
          
  publisher:
    handler: src/publish.handler
    environment:
      #ARN DO SNS
      snsArn: 'arn:aws:sns:us-east-1:${self:custom.userId}:SNS-deadletters-notifyer-${self:custom.stage}' 
    events:
      - sqs:
          #ARN DA FILA DLQ
          arn: 'arn:aws:sqs:us-east-1:${self:custom.userId}:SQS-principal-${self:custom.stage}-dlq'
          batchSize: 10
          maximumBatchingWindow: 60
