service: uisheet

custom:
  bucket: uisheet
  webpack:
    includeModules:
      forceInclude:
        - sib-api-v3-sdk
  customDomain:
    domainName: www.exhaustbarn.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  optimize:
    external: ['mongoose']

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-1
  memorySize: 128
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetObject
        - s3:GetObjectAcl
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:DeleteObject
        - s3:DeleteObjectAcl
      Resource: 
        - "arn:aws:s3:::${self:custom.bucket}"
        - "arn:aws:s3:::${self:custom.bucket}/*"
  apiGateway:
    binaryMediaTypes:
      - 'text/html'
      - 'image/*'
      - 'image/webp'
  environment:
    DB: ${file(./variables.json):DB}
    SSKEY: ${file(./variables.json):SSKEY}
    VERIFY: ${file(./variables.json):VERIFY}
    SIB: ${file(./variables.json):SIB}
    BTMERCHANTID: ${file(./variables.json):BT.MERCHANTID}
    BTPUBLIC: ${file(./variables.json):BT.PUBLIC}
    BTPRIVATE: ${file(./variables.json):BT.PRIVATE}
    BTTOKEN: ${file(./variables.json):BT.TOKEN}
    BUCKET: ${self:custom.bucket}

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-domain-manager
    
functions:
  get:
    handler: handler.port
    events:
      - http:
          method: any
          path: /
          cors: true
      - http:
          method: any
          path: /{site}
          cors: true
      - http:
          method: any
          path: /{site}/{chain}
          cors: true
      - http:
          method: any
          path: /{site}/{chain}/{arg1}
          cors: true
      - http:
          method: any
          path: /{site}/{chain}/{arg1}/{arg2}
          cors: true
      - s3:
          bucket: ${self:custom.bucket}
