service: ServerlessRegistryExample

plugins:
  - serverless-plugin-registry

provider:
  name: aws
  stage: ${opt:stage, "Test"}
  runtime: nodejs8.10
  role: DefaultRole
  environment:
    HELLO_MESSAGE: Mholo
    GOODBYE_MESSAGE: Hamba kakuhle

package:
  exclude:
    - node_modules

custom:
  registry:
#    registerAll: true
    baseName: /Registry/${self:provider.stage}

functions:
  Hello:
    handler: hello.handle
    registry:
      register: true
    events:
      - http:
          path: hello
          method: get
          cors: true
  Hello-1:
    handler: hello.handle
    registry:
      baseName: /ServerlessRegistryExampleCustom/${self:provider.stage}/HelloThereSailor
    events:
      - http:
          path: hello
          method: get
          cors: true
  Goodbye:
    handler: goodbye.handle
    events:
      - http:
          path: goodbye
          method: get
          cors: true

resources:
  Resources:
    DefaultRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:service}-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: arn:aws:logs:${self:provider.region}:*:log-group:/aws/lambda/*:*:*
