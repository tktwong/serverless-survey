service:
  name: aws-antstack
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    start:
      port: 8000
      migrate: true # please create the tables
      inMemory: true
      onStart: true
    stages: -dev

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment:
    CouponsTable: coupons
    FlatDiscountTable: flatdiscount
    PercentDiscountTable: percentdiscount
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "*"

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: aws/hello
  addFlatCoupon:
    handler: src/coupons/addFlatCoupon.handler
    events:
      - http:
          method: post
          path: aws/add-flat-coupon
          cors:
            origin: "*"
  addPercentCoupon:
    handler: src/coupons/addPercentCoupon.handler
    events:
      - http:
          method: post
          path: aws/add-percent-coupon
          cors:
            origin: "*"
  validateCoupon:
    handler: src/coupons/validateCoupon.handler
    events:
      - http:
          method: post
          path: aws/validate
          cors:
            origin: "*"

resources:
  Resources:
    GatewayResponseDefault4XX: #Cors for AWS ApiGateway
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    CouponsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.CouponsTable}
        AttributeDefinitions:
          - AttributeName: coupon_id
            AttributeType: S
          - AttributeName: coupon_code
            AttributeType: S
        KeySchema:
          - AttributeName: coupon_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
        GlobalSecondaryIndexes:
          - IndexName: coupons_index
            KeySchema:
              - AttributeName: coupon_code
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                - minimum_amount
                - end_date
                - discount_type
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 3
              WriteCapacityUnits: 3
    FlatDiscountDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.FlatDiscountTable}
        AttributeDefinitions:
          - AttributeName: coupon_id
            AttributeType: S
        KeySchema:
          - AttributeName: coupon_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
    PercentDiscountDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.PercentDiscountTable}
        AttributeDefinitions:
          - AttributeName: coupon_id
            AttributeType: S
        KeySchema:
          - AttributeName: coupon_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
