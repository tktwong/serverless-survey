service: youtubo

plugins:
  - serverless-offline
custom:
  domain: youtubo.xyz
  # customDomain:
  #   domainName: api.${self:custom.domain}
  #   basePath: ${file(./serverless-config.yml):api.${opt:stage, self:provider.stage}}
  #   stage: ${opt:stage, self:provider.stage}
  #   certificateName: ${self:custom.domain}
  #   createRoute53Record: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-north-1
  memorySize: 128
  timeout: 3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-*
  environment:
    SERVICE_NAME: ${self:service}
    STAGE: ${opt:stage, self:provider.stage}
    DOMAIN_NAME: ${self:custom.domain}

functions:
  ping:
    handler: api/ping.handler
    name: ${self:service}-${opt:stage, self:provider.stage}-Ping
    events:
      - http:
          path: /ping
          method: get
          cors: true
      - http:
          path: /ping
          method: post
          cors: true
  fetchUser:
    handler: api/fetchUser.handler
    name: ${self:service}-${opt:stage, self:provider.stage}-FetchUser
    events:
      - http:
          path: /users/{user}
          method: get
          cors: true
  updateUser:
    handler: api/updateUser.handler
    name: ${self:service}-${opt:stage, self:provider.stage}-UpdateUser
    events:
      - http:
          path: /users
          method: post
          cors: true
  fetchPlaylist:
    handler: api/fetchPlaylist.handler
    name: ${self:service}-${opt:stage, self:provider.stage}-FetchPlaylist
    events:
      - http:
          path: /playlists/{playlist}
          method: get
          cors: true
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-Users
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    playListTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-Playlists
        AttributeDefinitions:
          - AttributeName: playlist
            AttributeType: S
        KeySchema:
          - AttributeName: playlist
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
