service: awesome-api1

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-central-1
  environment:
    BOTTLE_DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-bottles
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BOTTLE_DYNAMODB_TABLE}"

functions:
  getAll:
    handler: bottles/getAll.handler
    events:
      - http:
          path: bottles
          method: GET
          cors:
            origin: '*'
  save:
    handler: bottles/save.handler
    events:
      - http:
          path: bottles
          method: POST
          cors:
            origin: '*'
  findOne:
    handler: bottles/findOne.handler
    events:
      - http:
          path: bottles/{id}
          method: GET
          cors:
            origin: '*'
  userBottles:
    handler: user/collectedBottles.handler
    events:
      - http:
          path: user/{username}/collected-bottles
          method: GET
          cors:
            origin: '*'
  collectBottle:
    handler: user/collectedBottlesAdd.handler
    events:
      - http:
          path: user/{username}/collected-bottles/{bottleId}
          method: PUT
          cors:
            origin: '*'

resources:
  Resources:
    bottlesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BOTTLE_DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: bottleId
            AttributeType: S
        KeySchema:
          - AttributeName: bottleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
