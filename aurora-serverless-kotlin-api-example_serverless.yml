service: rds-aurora-serverless
provider:
  name: aws
  runtime: java11
  region: eu-central-1
  versionFunctions: false
  memorySize: 1024
  timeout: 25
  logRetentionInDays: 1
  role: LambdaAPITrustRole
  vpc:
    securityGroupIds:
      - !GetAtt LambdaSecurityGroup.GroupId
    subnetIds:
      - !Ref SubnetAPrivate
      - !Ref SubnetBPrivate
  environment:
    STAGE: ${self:provider.stage}
    DB_CLUSTER: !Join [":", ["arn:aws:rds", !Ref "AWS::Region", !Ref "AWS::AccountId", "cluster", !Ref RDSCluster]]
    DB_SECRET: !Join [":", ["arn:aws:secretsmanager", !Ref "AWS::Region", !Ref "AWS::AccountId", "secret", "/rds-serverless-p3FrOW"]]
    DB_HOST: !GetAtt RDSCluster.Endpoint.Address
    DB_PORT: !GetAtt RDSCluster.Endpoint.Port
    DB_NAME: "${self:custom.rds.name}"
    DB_USER: "${self:custom.rds.username}"
    DB_PASSWORD: "${self:custom.rds.password}"
    DB_CONNECTION: "DATA" # DATA or JDBC - defaults to choose randomly every request
  tags:
    SERVICE: ${self:service}

custom:
  rds:
    name: "rdstest"
    username: "rdstest"
    password: "44ba78ab744943cba9e2ffefd7f0aef0"
  vpc:
    classB: "20"

package:
  artifact: "build/libs/rds-serverless-all.jar"

functions: ${file(infra/Lambda.yml)}
resources:
  - ${file(infra/IAM.yml)}
  - ${file(infra/VPC.yml)}
  - ${file(infra/RDS.yml)}
  - ${file(infra/CloudWatch.yml)}
