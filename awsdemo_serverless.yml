service: serverless-kra-api

# frameworkVersion: ">=1.1.0 <2.0.0"

# plugins:
#   - serverless-dynamodb-local
#   - serverless-offline

# custom:
#   dynamodb:
#     start:
#       port: 9000
#       inMemory: true
#       migration: true
#     migration:
#       dir: offline-migrations

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  deploymentBucket: serverless.test
  environment:
    DYNAMODB_TABLE: KRA
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: todos/addKra.create
    name :  serverless_ccapp_add_kra
    description: A simple backend function to add kra table data with a RESTful API endpoint using Amazon API Gateway. 
    events:
      - http:
          path: kra/create
          method: post
          # integration: lambda
          cors: true

  list:
    handler: todos/readKra.list
    name : serverless_ccapp_read_kra
    description: A simple backend function to read kra table data with a RESTful API endpoint using Amazon API Gateway. 
    events:
      - http:
          path: kra/list
          method: get
          # integration: lambda
          cors: true
  #
  # get:
  #   handler: todos/get.get
  #   name : kra-list-by-id
  #   events:
  #     - http:
  #         path: kra/list/{id}
  #         method: get
  #         cors: true
  #
  # update:
  #   handler: todos/update.update
  #   name : kra-update
  #   events:
  #     - http:
  #         path: kra/update/{id}
  #         method: put
  #         cors: true
  #
  # delete:
  #   handler: todos/delete.delete
  #   name : kra-delete
  #   events:
  #     - http:
  #         path: kra/delete/{id}
  #         method: delete
  #         cors: true

# resources:
#   Resources:
#     KraNewTable:
#       Type: 'AWS::DynamoDB::Table'
#       # DeletionPolicy: Retain # This will prevent it from being deleted when you remove your serverles project
#       Properties:
#         TableName: ${self:provider.environment.DYNAMODB_TABLE}
#         AttributeDefinitions:
#           -
#             AttributeName: KRA_name
#             AttributeType: S
#         KeySchema:
#           -
#             AttributeName: KRA_name
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
