# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-crud-go

# custom:
#   todosTableName: ${self:service}-${self:provider.stage}-todos
#   todosTableArn: # ARNs are addresses of deployed services in AWS space
#     Fn::Join:
#     - ":"
#     - - arn
#       - aws
#       - dynamodb
#       - Ref: AWS::Region
#       - Ref: AWS::AccountId
#       - table/${self:custom.todosTableName}

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: eu-central-1
  memorySize: 128
  vpc:
    securityGroupIds:
      - sg-0f0d40c4a78f9c64f
    subnetIds:
      - subnet-80f6d5eb
      - subnet-ead94197
      - subnet-662c5b2b
  environment:
    # TODOS_TABLE_NAME: ${self:custom.todosTableName}
  # iamRoleStatements: # Defines what other AWS services our lambda functions can access
  #   - Effect: Allow # Allow access to DynamoDB tables
  #     Action:
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #       - dynamodb:DeleteItem
  #     Resource:
  #       - ${self:custom.todosTableArn}

package:
 individually: true
 # exclude:
 #   - ./**

functions:
  hello:
    handler: bin/handlers/hello
    package:
     include:
       - ./bin/handlers/hello
    events:
      - http:
          path: hello
          method: get
          cors: true
  listQuestions:
    handler: bin/handlers/listQuestions
    package:
     include:
       - ./bin/handlers/listQuestions
    events:
      - http:
          path: questions
          method: get
          cors: true
  addQuestion:
    handler: bin/handlers/addQuestion
    package:
      include:
        - ./bin/handlers/addQuestion
    events:
      - http:
          path: questions
          method: post
          cors: true
  deleteQuestion:
      handler: bin/handlers/deleteQuestion
      package:
        include:
          - ./bin/handlers/deleteQuestion
      events:
        - http:
            path: questions/{id}
            method: delete
            cors: true
  addQuestionnaire:
    handler: bin/handlers/addQuestionnaire
    package:
      include:
        - ./bin/handlers/addQuestionnaire
    events:
      - http:
          path: questionGroups
          method: post
          cors: true
  listQuestionnaires:
    handler: bin/handlers/listQuestionnaires
    package:
     include:
       - ./bin/handlers/listQuestionnaires
    events:
      - http:
          path: questionGroups
          method: get
          cors: true
  updateQuestionnaire:
    handler: bin/handlers/updateQuestionnaire
    package:
      include:
        - ./bin/handlers/updateQuestionnaire
    events:
      - http:
          path: questionGroups/{id}
          method: put
          cors: true
  addLibrary:
    handler: bin/handlers/addLibrary
    package:
      include:
        - ./bin/handlers/addLibrary
    events:
      - http:
          path: libraries
          method: post
          cors: true

# resources:
#   Resources: # Supporting AWS services
#     TodosTable: # Define a new DynamoDB Table resource to store todo items
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: ${self:custom.todosTableName}
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         AttributeDefinitions:
#           - AttributeName: id
#             AttributeType: S
#         KeySchema:
#           - AttributeName: id
#             KeyType: HASH
