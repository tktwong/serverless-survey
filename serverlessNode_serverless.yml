# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: woovly-serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  #  stage: stage
  #  region: us-east-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan*
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:service}-woovly-${opt:stage}
  #        - "s3:ListBucket"
  #      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
  #    - Effect: "Allow"
  #      Action:
  #        - "s3:PutObject"
  #      Resource:
  #        Fn::Join:
  #          - ""
  #          - - "arn:aws:s3:::"
  #            - "Ref" : "ServerlessDeploymentBucket"
  #            - "/*"

  # you can define service wide environment variables here
  #  environment:
  #    variable1: value1

  # you can add packaging information here
  #package:
  #  include:
  #    - include-me.js
  #    - include-me-dir/**
  #  exclude:
  #    - exclude-me.js
  #    - exclude-me-dir/**
  environment:
    WOOVLY_TABLE: ${self:service}-woovly-${opt:stage}

plugins:
  - serverless-pseudo-parameters
  - serverless-offline
functions:
  create:
    handler: lambda/apis/main.create
    events:
      - http:
          path: /create
          method: post
  listUserVersion:
    handler: lambda/apis/main.listUserVersion
    events:
      - http:
          path: /listUserVersion/{lillyId}
          method: get
  getUserInfo:
    handler: lambda/apis/main.getUserInfoDetails
    events:
      - http:
          path: /getUserInfo/{lillyId}/{versionId?}
          method: get
  updateUserInfo:
        handler: lambda/apis/main.updateUserInfo
        events:
            - http:
                  path: updateUserInfo/{ID}
                  method: PUT
                  cors: true

resources:
  Resources:
    woovlyDynamo:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-woovly-${opt:stage}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: lillyUserId
            AttributeType: S
          - AttributeName: versionId
            AttributeType: S
        KeySchema:
            - AttributeName: ID
              KeyType: HASH
        BillingMode: PAY_PER_REQUEST

        GlobalSecondaryIndexes:
            - IndexName: user-index
              KeySchema:
                  - AttributeName: lillyUserId
                    KeyType: HASH
              Projection:
                  ProjectionType: ALL
            - IndexName: version-index
              KeySchema:
                  - AttributeName: versionId
                    KeyType: HASH
              Projection:
                  ProjectionType: ALL
            - IndexName: user-version-index
              KeySchema:
                  - AttributeName: versionId
                    KeyType: HASH
                  - AttributeName: lillyUserId
                    KeyType: RANGE
              Projection:
                  ProjectionType: ALL
            