service: incidentmanagement

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: incidents
    PRIORITY_DYNAMODB_TABLE: priorities
    USERS_DYNAMODB_TABLE: users
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

plugins:
  - serverless-finch
  - serverless-plugin-scripts

custom:
  scripts:
    commands:
      replace: sh getapiid.sh ${opt:stage, self:provider.stage}-${self:service}
  client:
    bucketName: incident.com
    distributionFolder: client/dist # (Optional) The location of your website. This defaults to client/dist


functions:
  create:
    handler: im/create.create
    events:
      - http:
          path: im
          method: post
          cors: true

  list:
    handler: im/list.list
    events:
      - http:
          path: im
          method: get
          cors: true

  update:
    handler: im/update.update
    events:
      - http:
          path: im/{id}
          method: put
          cors: true
          
  incidentsdisplay:
    handler: im/incidentsdisplay.incidentsdisplay
    events:
      - http:
          path: listincidents
          method: get
          cors: true

  userscreate:
    handler: users/create.create
    events:
      - http:
          path: users
          method: post
          cors: true

  usersget:
    handler: users/get.get
    events:
      - http:
          path: users/{username}
          method: get
          cors: true

resources:
  Resources:
    Users:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USERS_DYNAMODB_TABLE}
    Priority:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PRIORITY_DYNAMODB_TABLE}
    Incidents:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: uid
            AttributeType: S
        KeySchema:
          -
            AttributeName: uid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
