# serverless.yml


service: psr-backend

custom:

  tableName: 'users-table-${self:provider.stage}'


provider:

  name: aws

  runtime: nodejs8.10

  stage: dev

  region: us-east-1

  iamRoleStatements:

    - Effect: Allow

      Action:

        - dynamodb:Query

        - dynamodb:Scan

        - dynamodb:GetItem

        - dynamodb:PutItem

        - dynamodb:UpdateItem

        - dynamodb:DeleteItem

      Resource:

        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }

  environment:

    USERS_TABLE: ${self:custom.tableName}
    STAGE: ${opt:stage}

functions:

  app:

    handler: index.handler

    events:

      - http: ANY /

      - http: 'ANY {proxy+}'

  gimmetime:
    handler: handler.gimmetime
    events:
      - http:
          path: /time
          method: get
          request:
            parameters:
              querystrings:
                tz: true

  requestUnicorn:
    handler: requestUnicorn.handler
    events:
      - http:
          path: /ride
          method: post

resources:

  Resources:

    UsersDynamoDBTable:

      Type: 'AWS::DynamoDB::Table'

      Properties:

        AttributeDefinitions:

          -

            AttributeName: userId

            AttributeType: S

        KeySchema:

          -

            AttributeName: userId

            KeyType: HASH

        ProvisionedThroughput:

          ReadCapacityUnits: 1

          WriteCapacityUnits: 1

        TableName: ${self:custom.tableName}

    RidesDynamoDBTable:

      Type: 'AWS::DynamoDB::Table'

      Properties:

        AttributeDefinitions:

          -

            AttributeName: RideId

            AttributeType: S

        KeySchema:

          -

            AttributeName: RideId

            KeyType: HASH

        ProvisionedThroughput:

          ReadCapacityUnits: 1

          WriteCapacityUnits: 1

        TableName: Rides
