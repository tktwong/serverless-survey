service: minionstore

custom:
  tableUName: 'users-table-${self:provider.stage}'
  tablePName: 'product-table-${self:provider.stage}'
  tablePRName: 'prodreserv-table-${self:provider.stage}'
  

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - ses:SendEmail
      Resource: "*"

        
  environment:
    
    USERS_TABLE: ${self:custom.tableUName}
    PRODUCT_TABLE: ${self:custom.tablePName}
    PRODRESERV_TABLE: ${self:custom.tablePRName}
    SOURCE_EMAIL: "thaianabernardo@gmail.com"
    DEST_EMAIL: "raquel@inventosdigitais.com.br"


functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

create:
    handler: handler.createUsers
    events:
      - http:
          path: users
          method: post
          cors: true
get:
    handler: handler.getUsers
    events:
      - http:
          path: users
          method: get
          cors: true


resources:
  Resources:            

    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableUName}


    ProductDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: productId
            AttributeType: S

        KeySchema:
          -
            AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tablePName}


    ProdReservDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: reservId
            AttributeType: S
        KeySchema:
          -
            AttributeName: reservId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tablePRName}