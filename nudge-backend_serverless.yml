##
##  Name: nudge-eventing
##  Purpose: Serverless build instructions for tracking
##
##  Created By:
##    Author: Stefano Picozzi
##    Email: spicozzi@emergile.com
##    Date: OCT-2019
##

service: nudge-eventing

provider:
  versionFunctions: false
  deploymentBucket:
    name: nudge-${env:RELEASE}-deployments
    serverSideEncryption: AES256
  release: ${opt:release, 'v0'}
  name: aws
  runtime: nodejs8.10
  region: ap-southeast-2
  # profile: ${opt:profile, 'admin'}
  logRetentionInDays: 1
  stage: ${opt:stage, 'stage0'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "comprehend:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "states:ListStateMachines"
        - "states:StartExecution"
      Resource: "arn:aws:states:*:*:*"
    - Effect: "Allow"
      Action:
        - "cognito-idp:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ses:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "mobiletargeting:*"
        - "mobileanalytics:*"
      Resource: "*"

custom:
  dotenv:
    basePath: ../../
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Load our webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  log: debug

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
  
functions:

  activityHandler:
    handler: local/handlers/activityHandler.main
    name: ${env:RELEASE}-${self:provider.stage}-${self:service.name}-activityHandler

  createMachine:
    handler: local/handlers/createMachine.main
    name: ${env:RELEASE}-${self:provider.stage}-${self:service.name}-createMachine

  updateMachine:
    handler: local/handlers/updateMachine.main
    name: ${env:RELEASE}-${self:provider.stage}-${self:service.name}-updateMachine

stepFunctions:
  stateMachines:
##
##  Name:  Eventing Machine
##  Purpose: General purpose state machine data driven using workflows schema
##
##  Created By:
##    Author: Stefano Picozzi
##    Email: spicozzi@emergile.com
##    Date: OCT-2019
##

    Eventing:
      name: ${env:EVENTING}
      definition:
        Comment: Eventing Machine
        StartAt: GetApis
        States:

          GetApis:
            Type: Task
            Resource: "${env:LOCAL_ACTIVITY}-getApis"
            Next: HandleStream

          HandleStream:
            Type: Choice
            Choices:
            - Variable: "$.input.eventName"
              StringEquals: INSERT
              Next: HandleInsert
            - Variable: "$.input.eventName"
              StringEquals: MODIFY
              Next: HandleModify
            - Variable: "$.input.eventName"
              StringEquals: REMOVE
              Next: HandleRemove
            - Variable: "$.input.eventName"
              StringEquals: NEW
              Next: HandleInsert
            Default: StreamNotHandled

          StreamNotHandled:
            Type: Fail

          HandleEnd:
            Type: Pass
            End: true

          HandleRemove:
            Type: Pass
            Next: HandleEnd

          HandleModify:
            Type: Pass
            Next: ModifyAddActivityToEvent

          ModifyAddActivityToEvent:
            Type: Task
            Resource: "${env:LOCAL_ACTIVITY}-addActivityToEvent"
            Next: ModifyTestWorkflowType

          ModifyTestWorkflowType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.workflowType"
              StringEquals: "singleton"
              Next: HandleEnd
            Default: ModifyTestStatusType

          ModifyTestStatusType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.statusType"
              StringEquals: "completed"
              Next: ModifyTestActivityType
            Default: HandleEnd

          ModifyTestActivityType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.activityType"
              StringEquals: "ticket"
              Next: ModifyCreateMachine
            Default: ModifyUpdateMachine

          ModifyCreateMachine:
            Type: Task
            Resource: "${env:LOCAL_EVENTING}-createMachine"
            Next: HandleEnd

          ModifyUpdateMachine:
            Type: Task
            Resource: "${env:LOCAL_EVENTING}-updateMachine"
            Next: HandleEnd

          HandleInsert:
            Type: Pass
            Next: InsertAddActivityToEvent

          InsertAddActivityToEvent:
            Type: Task
            Resource: "${env:LOCAL_ACTIVITY}-addActivityToEvent"
            Next: InsertTestBehaviorType

          InsertTestBehaviorType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.behaviorType"
              StringEquals: "client"
              Next: HandleEnd
            Default: InsertUpdateActivityAsScheduled

          InsertUpdateActivityAsScheduled:
            Type: Task
            Resource: "${env:LOCAL_ACTIVITY}-updateActivityAsScheduled"
            Next: InsertTestWorkflowType

          InsertTestWorkflowType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.workflowType"
              StringEquals: "singleton"
              Next: InsertActivityHandler
            Default: InsertTestActivityType

          InsertActivityHandler:
            Type: Task
            Resource: "${env:LOCAL_EVENTING}-activityHandler"
            Next: InsertUpdateActivityAsCompleted

          InsertTestActivityType:
            Type: Choice
            Choices:
            - Variable: "$.input.activity.activityType"
              StringEquals: "ticket"
              Next: InsertCreateMachine
            Default: InsertUpdateMachine

          InsertCreateMachine:
            Type: Task
            Resource: "${env:LOCAL_EVENTING}-createMachine"
            Next: InsertUpdateActivityAsCompleted

          InsertUpdateMachine:
            Type: Task
            Resource: "${env:LOCAL_EVENTING}-updateMachine"
            Next: InsertUpdateActivityAsCompleted

          InsertUpdateActivityAsCompleted:
            Type: Task
            Resource: "${env:LOCAL_ACTIVITY}-updateActivityAsCompleted"
            Next: HandleEnd


