service: issues-api

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - { "Fn::GetAtt": [ "IssuesDynamoDBTable", "Arn" ] }

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  listIssue:
    handler: com.serverless.handlers.ListIssueHandler
    events:
      - http:
          path: /issues
          method: get

  createIssue:
    handler: com.serverless.handlers.CreateIssuetHandler
    events:
      - http:
          path: /issues
          method: post


resources:
  Resources:
    IssuesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: issues
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
          - AttributeName: title
            AttributeType: S
          - AttributeName: explain
            AttributeType: S
          - AttributeName: assignedUser
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5