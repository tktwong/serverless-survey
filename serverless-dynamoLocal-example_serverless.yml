service: sls-dynamo-example
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  #remove error of deprecation
  apiGateway:
    shouldStartNameWithService: true
  #permissions
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"

    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"

functions:

  hello:
    handler: handler.hello
    events:
      - http:
          path: list
          method: get

  create:
    handler: create.handler
    events:
      - http:
          path: create
          method: put

custom:
  # stage = provider.stage = dev
  stage: ${opt:stage, self:provider.stage}
  # dynamodb-dev-user-table
  tableName: ${self:custom.stage}-MyDynamo
  #DynamoDB Configs
  dynamodb:
    stages:
      - dev
      - development
      - local
    start:
      migrate: true
      seed: true
      port: 8000
      inMemory: true
      # heapInitial: 200m
      # heapMax: 1gS
      convertEmptyValues: true
    seed:
      domain:
        sources:
          - table: ${self:custom.stage}-MyDynamo
            sources: [./seed/fake-user.json]
        
resources:
  Resources:
    DynamodbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-offline
  - serverless-dynamodb-local