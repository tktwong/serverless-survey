service: ${file(serverless-config/vars-config.yml):service}
custom:
   objectPrefix: '${self:service}-${self:provider.stage}'
   scripts:
     hooks:
       package:initialize: make compile
plugins:
#  - '@silvermine/serverless-plugin-cloudfront-lambda-edge'
  - serverless-plugin-scripts
provider:
  name: aws
  runtime: go1.x
  stage: production
  profile: production
  timeout: 300
  role: "arn:aws:iam::643545105133:role/sportsengine-production-us-east-2-lambdaRole"
  region: ${file(serverless-config/vars-config.yml):region}
#functions:
#   viewerRequestPostGetRewriteHandler:
#      name: '${self:custom.objectPrefix}-viewer-request'
#      handler: app/functions/ViewerRequestPostGetRewriteHandler.main
#      memorySize: 128
#      timeout: 1
#      events:
#      lambdaAtEdge:
#        distribution: CloudFrontDistribution
#        eventType: viewer-request
#   originRequestGetPostRewriteHandler:
#      name: '${self:custom.objectPrefix}-viewer-request'
#      handler: app/functions/OriginRequestGetPostRewriteHandler.main
#      memorySize: 128
#      timeout: 1
#      events:
#      lambdaAtEdge:
#        distribution: CloudFrontDistribution
#        eventType: origin-request
resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          PriceClass: PriceClass_100
          Enabled: true
          Origins:
            - DomainName: ${file(serverless-config/vars-config.yml):cloudfrontOrigin}
              ## An identifier for the origin which must be unique within the distribution
              Id: StationsOrigin
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Logging:
            IncludeCookies: 'false'
            Bucket: cloudfront-logs-ugp.s3.amazonaws.com
            Prefix: myprefix
          Aliases: ${file(serverless-config/vars-config.yml):cnames}
          DefaultCacheBehavior:
            ViewerProtocolPolicy: allow-all
            TargetOriginId: StationsOrigin
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            DefaultTTL: 30
            MinTTL: 10
            ForwardedValues:
              QueryString: true
              ## In case you want to restrict the bucket access use S3OriginConfig and remove CustomOriginConfig
              # S3OriginConfig:
              #   OriginAccessIdentity: origin-access-identity/cloudfront/E127EXAMPLE51Z
          ViewerCertificate:
            AcmCertificateArn: ${file(serverless-config/vars-config.yml):AcmCertificateArn}
            SslSupportMethod: sni-only


# https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-event-structure.html#lambda-event-structure-request
