
service: sls-endpoints
app: sls-private-endpoints-demo

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, dev}
  region: us-east-2
  # resourcePolicy:
  #   - Effect: Allow
  #     Principal: 
  #       AWS: 
  #         - arn:aws:iam::455728032032:user/personal-macbook-cli
  #     Action: execute-api:Invoke
  #     Resource:
  #       - execute-api:/*/GET/accounts/control/getUserById
  #   - Effect: Allow
  #     Principal: "*"
  #     Action: execute-api:Invoke
  #     Resource:
  #       - execute-api:/*/GET/accounts/login

functions:
  login:
    # role: LambdaRole
    # vpc:
    #   subnetIds:
    #     - ${ssm:/demo/vpc/private_subnet_a}
    #     - ${ssm:/demo/vpc/private_subnet_b}
    handler: login.index
    events:
      - http:
          path: /accounts/login
          method: get
  getUserById:
    # role: LambdaRole
    handler: getUserById.index
    # vpc:
    #   subnetIds:
    #     - ${ssm:/demo/vpc/private_subnet_a}
    #     - ${ssm:/demo/vpc/private_subnet_b}
    events:
      - http:
          path: /accounts/control/getUserById
          method: get
          authorizer: aws_iam

# resources:
#   Resources:
#     LambdaRole:
#       Type: AWS::IAM::Role
#       Properties:
#         Path: /demo/${self:provider.stage}/serviceRoles/
#         RoleName: LambdaRole
#         AssumeRolePolicyDocument:
#           Version: '2012-10-17'
#           Statement:
#             - Effect: Allow
#               Principal:
#                 Service:
#                   - lambda.amazonaws.com
#               Action: sts:AssumeRole
#         Policies:
#           - PolicyName: LoginLambdaPolicy
#             PolicyDocument:
#               Version: '2012-10-17'
#               Statement:
#                 - Effect: Allow # Cloudwatch
#                   Action:
#                     - logs:CreateLogGroup
#                     - logs:CreateLogStream
#                     - logs:PutLogEvents
#                   Resource:
#                     - 'Fn::Join':
#                       - ':'
#                       -
#                         - 'arn:aws:logs'
#                         - Ref: 'AWS::Region'
#                         - Ref: 'AWS::AccountId'
#                         - 'log-group:/aws/lambda/*:*:*'
#                 - Effect: Allow # VPC Deployment
#                   Action:
#                     - ec2:DescribeNetworkInterfaces
#                     - ec2:CreateNetworkInterface
#                     - ec2:DeleteNetworkInterface
#                     - ec2:DescribeInstances
#                     - ec2:AttachNetworkInterface
#                   Resource: "*"
#   Outputs:
#     LambdaRoleArn:
#       Value:
#           Fn::GetAtt:
#           - LambdaRole
#           - Arn
#       Export:
#         Name: LambdaRoleArn-${self:provider.stage}
