#
# This file is part of the ONEMA onema Package.
# For the full copyright and license information,
# please view the LICENSE file that was distributed
# with this source code.
#
# copyright (c) 2018, Juan Manuel Torres (http://onema.io)
#
# @author Juan Manuel Torres <software@onema.io>
#
service: overwatch

provider:
  name: aws
  runtime: java8
  profile: ${opt:profile, 'default'}
  timeout: 30
  versionFunctions: false
  memorySize: 512
  stage: dev
  region: us-east-1

  # you can add statements to the Lambda functionArn's IAM Role here
  iamRoleStatements: ${file(infrastructure/global-values.yml):iamRoleStatements}

  # Service wide environment variables
  environment: ${file(infrastructure/global-values.yml):environment}

# Custom values. These can be referenced in the Cloud Formation template
custom: ${file(infrastructure/global-values.yml):custom}

package:
  artifact: target/scala-2.12/app.jar

functions:

  # functions
  log-registration:
    handler: io.onema.userverless.overwatch.registration.LogRegistrationFunction::lambdaHandler
    events: ${file(infrastructure/global-values.yml):loggroupEvents}
    environment:
      LOG_RETENTION_DAYS: 14
      DESTINATION_FUNCTION: "${self:service}-${self:custom.stageName}-log-parser"
      LOG_GROUP_PREFIX: "/aws/lambda"

  dql-registration:
    handler: io.onema.userverless.overwatch.registration.QueueRegistrationFunction::lambdaHandler
    events: ${file(infrastructure/global-values.yml):lambdaCreatedEvents}
    environment:
      DQL_ARN:
        Fn::GetAtt: [DeadLetterQueue, Arn]

  log-parser:
    handler: io.onema.userverless.overwatch.logs.ParserFunction::lambdaHandler
    description: parses logs for metrics errors and more
    reservedConcurrency: 1


# you can add CloudFormation resource templates here
resources:
  Parameters: ${file(infrastructure/core-overwatch_cfn.yml):Parameters}
  Resources: ${file(infrastructure/core-overwatch_cfn.yml):Resources}
  Outputs: ${file(infrastructure/core-overwatch_cfn.yml):Outputs}
