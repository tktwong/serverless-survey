service: MV-${env:REALM}-DevOps-Eni

provider:
  name: aws
  runtime: python3.6
  stage: ${env:ENV}
  memorySize: 128
  timeout: 10
  versionFunctions: false
  region: ${env:AWS_REGION}
  variableSyntax: "\\${(?!AWS::)((?:self|env):[ :a-zA-Z0-9._,\\-\\/\\(\\)]+?)}"
  deploymentBucket:
    name: amaysim-serverless-deployments-${env:AWS_ACCOUNT_ID}-${env:AWS_REGION}
  stackTags:
    FRAMEWORK: serverless
  environment:
    ENV: ${env:ENV}
    LOGLEVEL: ${env:LOGLEVEL}
    REALM: ${env:REALM}
    ENI_DESCRIPTION: ${env:ENI_DESCRIPTION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ec2:AttachNetworkInterface
        - ec2:Describe*
        - ec2:List*
      Resource:
        - "*"

package:
  artifact: package/package.zip

plugins:
  - serverless-log-forwarding
  - serverless-plugin-aws-alerts

custom:
  logForwarding:
    destinationARN: {"Fn::ImportValue": "${env:SUMOLOGIC_LAMBDA_ARN_EXPORT_NAME}"}
  alerts:
    dashboards: true
    topics:
      ok: ${env:OPS_GENIE_SNS_ARN}
      alarm: ${env:OPS_GENIE_SNS_ARN}
      insufficientData: ${env:OPS_GENIE_SNS_ARN}
    definitions:
      functionErrors:
        threshold: 10
        period: 900
      functionDuration:
        threshold: 60000
        statistic: 'p95'
        period: 900
    alarms:
      - functionErrors
      - functionThrottles
      - functionInvocations
      - functionDuration

functions:
  handler:
    handler: devops_eni.handler
    events:
      - sns: ${env:DEVOPS_R53_SNS_ARN}  # the r53 Lambda creates the SNS topic
