# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: fgc-lambda

frameworkVersion: '2'

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'

  stage: production
  websocketsApiName: fgc-lambda-websockets-api
  websocketsApiRouteSelectionExpression: $request.body.action
  logs:
    websocket: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:table/*"
    - Effect: "Allow"
      Action:
        - cognito-idp:ListUsers
      # cSpell: disable
      Resource: "arn:aws:cognito-idp:us-east-1:035010029185:userpool/us-east-1_JXjir8RPT"
      # cSpell: enable

functions:
  connectHandler:
    handler: onConnect.handler
    events:
      - websocket:
          route: $connect
  disconnectHandler:
    handler: onDisconnect.handler
    events:
      - websocket:
          route: $disconnect
  defaultHandler:
    handler: onDefault.handler
    events:
      - websocket:
          route: $default
  onAnswerHandler:
    handler: onAnswer.handler
    events:
      - websocket:
          route: answer
  onInitHandler:
    handler: onInit.handler
    events:
      - websocket:
          route: init
  onAdminAnswerHandler:
    handler: onAdminAnswer.handler
    events:
      - websocket:
          route: adminanswer
