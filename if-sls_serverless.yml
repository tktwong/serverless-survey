# For full config options, check the docs:
#    docs.serverless.com

service: if-api

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, self:provider.defaultStage}
  region: ap-southeast-1
  defaultStage: dev
  environment:
    PROVIDER: ${file(./serverless.${self:provider.stage}.yml):PROVIDER}
    APP_ENV: ${file(./serverless.${self:provider.stage}.yml):APP_ENV}
    DB_PROVIDER: ${file(./serverless.${self:provider.stage}.yml):DB_PROVIDER}
    DB_DEBUG: ${file(./serverless.${self:provider.stage}.yml):DB_DEBUG}
    MYSQL_HOST: ${file(./serverless.${self:provider.stage}.yml):MYSQL_HOST}
    MYSQL_USER: ${file(./serverless.${self:provider.stage}.yml):MYSQL_USER}
    MYSQL_PASS: ${file(./serverless.${self:provider.stage}.yml):MYSQL_PASS}
    MYSQL_PORT: ${file(./serverless.${self:provider.stage}.yml):MYSQL_PORT}
    MYSQL_DB: ${file(./serverless.${self:provider.stage}.yml):MYSQL_DB}
    MYSQL_TABLE_PREFIX: ${file(./serverless.${self:provider.stage}.yml):MYSQL_TABLE_PREFIX}
    API_GATEWAY_URL: ${file(./serverless.${self:provider.stage}.yml):API_GATEWAY_URL}
    JWT_SECRET: ${file(./serverless.${self:provider.stage}.yml):JWT_SECRET}
    TIMEZONE: ${file(./serverless.${self:provider.stage}.yml):TIMEZONE}
    MSG91_KEY: ${file(./serverless.${self:provider.stage}.yml):MSG91_KEY}
    MSG_SENDER: ${file(./serverless.${self:provider.stage}.yml):MSG_SENDER}
    
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:

  verifyOtp: 
    handler: src/handlers/auth.verifyOtp
    events:
      - http:
          path: verifyOtp
          method: post
          cors: true

  login: 
    handler: src/handlers/auth.login
    events:
      - http:
          path: login
          method: post
          cors: true

  allcompany: 
    handler: src/handlers/allcompany.allcompany
    events:
      - http:
          path: allcompany
          method: get
          cors: true

  companyProfile: 
    handler: src/handlers/companyProfile.companyProfile
    events:
      - http:
          path: companyProfile
          method: get
          cors: true

  signUp: 
    handler: src/handlers/auth.signUp
    events:
      - http:
          path: signUp
          method: post
          cors: true

  graphql:
    handler: src/handlers/graphql.graphqlHandler
    timeout: 300
    events:
      - http:
          path: graphql
          method: get
          cors: true
      - http:
          path: graphql
          method: post
          cors: true 

  playground:
    handler: src/handlers/graphql.playgroundHandler
    events:
    - http:
        path: playground
        method: get
        cors: true

# Serverless  Plugins Added
# user serverless-webpack plugin to transpile es6/es7
plugins: 
  - serverless-webpack
  - serverless-offline # This has to be at the last

#Enable auto-packing of external modules
custom:
  webpackIncludeModules: 
    forceInclude:
      - mysql
  serverless-offline:
    port: 4000  
