service: test-tic-tac-toe
app: test-tic-tac-toe
org: mauromoreno

provider:
  name: aws
  runtime: nodejs10.x
  stage: local
  region: ${file(./env.yml):${opt:stage, self:provider.stage}.AWS_REGION_CODE}
  environment: ${file(./env.yml):${opt:stage, self:provider.stage}}

package:
  exclude:
    - .git

functions:
  games-list:
    handler: src/functions/games/list.handler
    events:
      - http:
          path: /games
          method: get
          integration: lambda
  games-create:
    handler: src/functions/games/create.handler
    events:
      - http:
          path: /games
          method: post
          integration: lambda
  games-show:
    handler: src/functions/games/show.handler
    events:
      - http:
          path: /games/{gameId}
          method: get
          integration: lambda
  games-moves-create:
    handler: src/functions/games/moves/create.handler
    events:
      - http:
          path: /games/{gameId}/moves
          method: post
          integration: lambda

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: games
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Scan
              Resource: arn:aws:dynamodb:*:*:table/games
        Roles:
          - Ref: IamRoleLambdaExecution

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - local
    start:
      migrate: true
