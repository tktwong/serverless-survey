# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: api-org # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  region: ${opt:region, 'ap-northeast-1'}
  stage: ${opt:stage, 'dev'}
  cognitoService: cognito-org
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: { "Fn::Join" : ["", ["arn:aws:dynamodb:","${self:provider.region}", ":*:*" ] ]  }

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  userList:
    handler: bin/userList
    events:
      - http:
          path: org
          method: get
          cors: true
  userGet:
    handler: bin/userGet
    events:
      - http:
          path: org/{userid}
          method: get
          cors: true
  userPut:
    handler: bin/userPut
    events:
      - http:
          path: org
          method: put
          cors: true
  userPost:
    handler: bin/userPost
    events:
      - http:
          path: org
          method: post
          cors: true
  userDelete:
    handler: bin/userDelete
    events:
      - http:
          path: org/{userid}
          method: delete
          cors: true

resources:
  Resources:

    #
    # API Gateway Authorizer
    #

    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: CognitoUserPool
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        ProviderARNs: [{'Fn::ImportValue': {Fn::Join: ["", ["${self:provider.cognitoService}","-","${self:provider.stage}", "-UserPoolArn" ] ]}}]

    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,PUT,POST,DELETE'"
