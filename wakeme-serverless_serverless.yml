# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: wakeme-wakers

custom:
  PROJECT_NAME: wakeme
  PATH: wakers
  S3_BUCKET_NAME: ${self:service}-saved-files-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-1
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:DeleteObject
      Resource: "arn:aws:s3:::${self:custom.S3_BUCKET_NAME}/*"
  environment:
    DB_TABLE_NAME: ${self:service}-${self:provider.stage}
    S3_BUCKET_NAME: ${self:custom.S3_BUCKET_NAME}

functions:
  getWakers:
    handler: handler.getWakers
    events:
      - http: get ${self:custom.PROJECT_NAME}/${self:custom.PATH}
  postWakers:
    handler: handler.postWakers
    events:
      - http: post ${self:custom.PROJECT_NAME}/${self:custom.PATH}
  deleteWakers:
    handler: handler.deleteWakers
    events:
      - http: delete ${self:custom.PROJECT_NAME}/${self:custom.PATH}

resources:
  Resources:
    WakeMeBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.S3_BUCKET_NAME}
    wakerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: waker_id
            AttributeType: S
        KeySchema:
          - AttributeName: waker_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-offline