# serverless.yml

service: crayfish-apollo-lambda
provider:
  name: aws # 저는 주로 아마존 웹서비스를 사용합니다.
  runtime: nodejs12.x # 저는 주로 노드를 사용합니다. 파이썬을 사용하기도 하는데 사용하고자 하는 파이썬 버전을 입력하시면 됩니다.
  stage: ${opt:stage, 'dev'} # 작성하지 않으면 기본적으로 'dev' 입니다.
  region: ap-northeast-2 # 입력하지 않으면 기본적으로 us-east-1 입니다.
  apiName: crayfish-apollo-serverless
  stackName: crayfish-apollo-serverless
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-northeast-2:*:*"
functions:
  graphql:
    # this is formatted as <FILENAME>.<HANDLER>
    handler: index.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
plugins:
  - serverless-offline
  - serverless-webpack
# node_modules를 webpack에 포함시킴
custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    includeModules: true
  tableName: Movies
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}

# dynamoDB create table
resources:
  - Resources:
      NotesTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:custom.tableName}
          AttributeDefinitions:
            - AttributeName: year
              AttributeType: N
            - AttributeName: title
              AttributeType: S
          KeySchema:
            - AttributeName: year
              KeyType: HASH
            - AttributeName: title
              KeyType: RANGE
          # Set the capacity based on the stage
          ProvisionedThroughput:
            ReadCapacityUnits: ${self:custom.tableThroughput}
            WriteCapacityUnits: ${self:custom.tableThroughput}
