# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: event-sourcing # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: java8
  environment: 
    arn: "arn:aws:sns:us-east-1:XXXXXXXXXXXXX:pricetag-topic"
    databaseUrl: "jdbc:mysql://myinstances:3306/mydb"
    databaseUser: "user"
    databasePassword: "password"

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
              - "dynamodb:*"
      Resource:
              - "*"
    - Effect: "Allow"
      Action:
              - "SNS:*"
      Resource:
              - "*"
    - Effect: "Allow"
      Action:
              - "ec2:CreateNetworkInterface"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:DeleteNetworkInterface"
      Resource:
              - "*"



#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#{        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: target/pricetag-dev.jar

functions:
  test:
    handler: pricetag.Test
    events:
      - http:
          path: test
          method: put
  create:
    handler: pricetag.lambdas.commands.CreateHandler
    events:
      - http:
          path: pricetag
          method: put
  update:
    handler: pricetag.lambdas.commands.UpdateHandler
    events:
      - http:
          path: pricetag
          method: post
  delete:
    handler: pricetag.lambdas.commands.DeleteHandler
    events:
      - http:
          path: pricetag
          method: delete
  query:
    handler: pricetag.lambdas.queries.GetHandler
    events:
      - http:
          path: pricetag
          method: get
    vpc:
      securityGroupIds:
        - sg-0f747175
      subnetIds:
        - subnet-f404cad9
        - subnet-63748a5f
  process:
    handler: pricetag.lambdas.projections.ProcessHandler
    events:
      - sns: pricetag-topic
    vpc:
      securityGroupIds:
        - sg-0f747175
      subnetIds:
        - subnet-f404cad9
        - subnet-63748a5f


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
