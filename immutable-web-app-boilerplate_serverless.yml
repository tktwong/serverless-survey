service: immutable-web-app-boilerplate

plugins:
  - serverless-finch
  - serverless-plugin-cloudfront-lambda-edge
  - serverless-webpack
  - serverless-prune-plugin

provider:
  deploymentBucket: 
    name: serverless-deployments-us-east
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: ${opt:stage, 'experimental'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'ssm:GetParameters'
      Resource:
        - 'Fn::Join':
          - ':'
          - - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'parameter/app/${self:service}/${self:provider.stage}/*'
        - 'Fn::Join':
          - ':'
          - - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'parameter/app/${self:custom.webApps}/${self:provider.stage}/*'

functions:
  app:
    handler: handler.${self:provider.stage}
    lambdaAtEdge:
      distribution: AppDistribution
      eventType: origin-request

custom:
  webpack:
    webpackConfig: ./webpack/infrastructure.config.js
    includeModules: true
    packager: yarn
  webApps: web-apps
  hostedZoneId: ${ssm:/app/${self:custom.webApps}/hostedZoneId}
  certificateId: ${ssm:/app/${self:custom.webApps}/certificateId}
  appDomain: ${ssm:/app/${self:service}/${self:provider.stage}/appDomain}
  client:
    bucketName: assets-${self:provider.stage}
    distributionFolder: .bucket
    objectHeaders:
      ALL_OBJECTS:
        - name: Cache-Control
          value: 'public, max-age=31536000, immutable'
  prune:
    automatic: true
    number: 3

resources:
  Resources:
    AppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-app-${self:provider.stage}
    AppDistributionIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: ${self:service}-app-${self:provider.stage}
    AppBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: { Ref: 'AppBucket' }
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  - 'Fn::Join':
                    - ' '
                    - - 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity'
                      - Ref: 'AppDistributionIdentity'
              Action:
                - 's3:GetObject'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: 'AppBucket'
                    - '/*'
            - Effect: Allow
              Principal:
                AWS:
                  - 'Fn::Join':
                    - ' '
                    - - 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity'
                      - Ref: 'AppDistributionIdentity'
              Action:
                - 's3:ListBucket'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: 'AppBucket'
    AppDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          PriceClass: PriceClass_100
          HttpVersion: http2
          Aliases:
            - ${self:custom.appDomain}
          ViewerCertificate:
            SslSupportMethod: sni-only
            AcmCertificateArn:
              'Fn::Join':
                - ':'
                - - 'arn:aws:acm'
                  - Ref: 'AWS::Region'
                  - Ref: 'AWS::AccountId'
                  - 'certificate/${self:custom.certificateId}'
          DefaultCacheBehavior:
            TargetOriginId: AppBucketOrigin
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 5
            MaxTTL: 5
            DefaultTTL: 5
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
          Origins:
            - Id: AppBucketOrigin
              DomainName: { 'Fn::GetAtt': [ 'AppBucket', 'DomainName' ] }
              S3OriginConfig:
                OriginAccessIdentity:
                  'Fn::Join':
                    - ''
                    - - 'origin-access-identity/cloudfront/'
                      - Ref: 'AppDistributionIdentity'
    AppRecord:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: ${self:custom.hostedZoneId}
        RecordSets:
          - Name: ${self:custom.appDomain}
            Type: A
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2
              DNSName: { 'Fn::GetAtt': [ 'AppDistribution', 'DomainName' ] }