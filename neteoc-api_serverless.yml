service: neteocAPI

frameworkVersion: ">=1.1.0"

custom:
  myStage: ${opt:stage, self:provider.stage}
  bucket: ${self:custom.myStage}.missions.neteoc

plugins:
  - serverless-offline

provider:
  name: aws
  memorySize: 128 # optional, in MB, default is 1024
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

functions:
  postMission:
    handler: missions/handler.postMission
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /
          method: post
          cors: true
          
  getMissions:
    handler: missions/handler.getMissions
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /
          method: get
          cors: true
          
  getAttachments:
    handler: missions/attachments.getAttachments
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /{missionId}/attachments
          method: get
          cors: true
          
  getAttachment:
    handler: missions/attachments.getAttachmentLink
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /{missionId}/attachments/{attachmentId}
          method: get
          cors: true

  postAttachment:
    handler: missions/attachments.postAttachment
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /{missionId}/attachments
          method: post
          cors: true

  attendMission:
    handler: missions/handler.attendMission
    environment:
      BUCKET: ${self:custom.bucket}
    events:
      - http:
          path: /{missionId}/attend
          method: post
          cors: true

