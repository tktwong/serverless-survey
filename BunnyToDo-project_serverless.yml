service: bunny-user
frameworkVersion: "2"

plugins:
  - serverless-api-gateway-caching
custom:
  apiGatewayCaching:
    enabled: false

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  vpc:
    securityGroupIds:
      - sg-0dc36dac2d70aa95e
    subnetIds:
      - subnet-0479855e2eeaf7fb4
  environment:
    USER_TABLE: user-${self:service}-${opt:stage, self:provider.stage}
    USER_TASKS_TABLE: user-tasks-${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "*"

resources:
  Resources:
    UsersDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.USER_TABLE}
    UsersTasksDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.USER_TASKS_TABLE}

functions:
  createUser:
    handler: api/handlers/User.create
    memorySize: 128
    description: Create an user.
    events:
      - http:
          path: users
          method: post
          cors:
            origin: "*"
  listUsers:
    handler: api/handlers/User.list
    memorySize: 128
    description: List all users
    events:
      - http:
          path: users
          method: get
          cors:
            origin: "*"
          caching:
            enabled: false
  detailUser:
    handler: api/handlers/User.get
    memorySize: 128
    description: Get one user by id
    events:
      - http:
          path: users/{userId}
          method: get
          cors:
            origin: "*"
  updateUser:
    handler: api/handlers/User.update
    memorySize: 128
    description: Update an user.
    events:
      - http:
          path: users/{userId}
          method: put
          cors:
            origin: "*"
  deleteUser:
    handler: api/handlers/User.delete
    memorySize: 128
    description: Delete an user.
    events:
      - http:
          path: users/{userId}
          method: delete
          cors:
            origin: "*"
  createUserTask:
    handler: api/handlers/UserTask.create
    memorySize: 128
    description: Create a task for an user.
    events:
      - http:
          path: users/{userId}/tasks
          method: post
          cors:
            origin: "*"
  listUserTasks:
    handler: api/handlers/UserTask.list
    memorySize: 128
    description: List all user tasks.
    events:
      - http:
          path: users/{userId}/tasks
          method: get
          cors:
            origin: "*"
          caching:
            enabled: false
            cacheKeyParameters:
              - name: request.path.userId
              - name: request.header.Accept-Language
  updateUserTask:
    handler: api/handlers/UserTask.update
    memorySize: 128
    description: Update an user tasks.
    events:
      - http:
          path: users/{userId}/tasks/{taskId}
          method: put
          cors:
            origin: "*"
  deleteUserTask:
    handler: api/handlers/UserTask.delete
    memorySize: 128
    description: Delete an user task.
    events:
      - http:
          path: users/{userId}/tasks/{taskId}
          method: delete
          cors:
            origin: "*"
