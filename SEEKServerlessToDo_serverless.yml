service: serverless-starter-todo

provider:
  name: aws
  region: ${opt:region, 'ap-southeast-2'}
  runtime: nodejs8.10
  stackName: serverless-starter-todo-${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    # IAM permissions
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - :table/
            - Ref: DatabaseTable

functions:
  # Lambda function
  TodoApi:
    name: serverless-starter-todo-api-dev
    handler: index.handler
    environment:
      # Environment variables
      TABLE_NAME:
        Ref: DatabaseTable
    events:
      - http:
          cors: true
          method: any
          path: /{proxy+}

resources:
  Resources:
    DatabaseTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions: # Attributes of the table
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST #Not pay for idle time
        KeySchema: # PK of the table
          - AttributeName: id
            KeyType: HASH
    # CloudFormation resources
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        # Bucket properties
        WebsiteConfiguration:
          IndexDocument: index.html
    WebsiteBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: s3:GetObject
                Effect: Allow
                Principal: '*'
                Resource:
                  Fn::Join:
                    - ''
                    - - 'arn:aws:s3:::'
                      - Ref: WebsiteBucket
                      - /*
          Bucket:
            Ref: WebsiteBucket

  Outputs:
    # CloudFormation outputs
    WebsiteBucketName:
      Value:
        Ref: WebsiteBucket
    WebsiteURL:
      Value:
        Fn::GetAtt:
          - WebsiteBucket
          - WebsiteURL
