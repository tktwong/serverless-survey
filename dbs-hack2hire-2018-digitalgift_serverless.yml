
service: lambda-digitalgift

plugins:
  - serverless-iam-roles-per-function

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - yarn.lock
    - requirements.txt
    - seed/**

custom: 
  dynamodb:
    PRODUCT_TABLE: "gift-product-${opt:stage, self:provider.stage}"
    ORDER_TABLE: "gift-order-${opt:stage, self:provider.stage}"

provider:
  name: aws
  runtime: python3.6
  versionFunctions: false
  stage: ${opt:stage, 'dev'}  
  region: ap-southeast-1

functions:
  get-products:
    handler: functions/get-products.handler
    memorySize: 512 
    timeout: 5
    events:
      - http: 
          path: /products
          method: get
    environment:
        PRODUCT_TABLE: ${self:custom.dynamodb.PRODUCT_TABLE}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: 
          - "Fn::Join": ["", ["arn:aws:dynamodb:" , {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} , ":table/${self:custom.dynamodb.PRODUCT_TABLE}"] ]
  create-order:
    handler: functions/create-order.handler
    memorySize: 512
    timeout: 5
    events:
      - http:
          path: /order
          method: post
    environment:
        ORDER_TABLE: ${self:custom.dynamodb.ORDER_TABLE}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:putItem
        Resource:
          - "Fn::Join": ["", ["arn:aws:dynamodb:" , {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"} , ":table/${self:custom.dynamodb.ORDER_TABLE}"] ]
          
resources:
  Resources:
    ProductDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamodb.PRODUCT_TABLE}
    OrderDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamodb.ORDER_TABLE}