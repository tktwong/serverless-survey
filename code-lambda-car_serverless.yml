service: car
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: v1
  environment:

plugins:
  - serverless-offline

functions:
  registerCar:
    name: ${self:service}_register-car_${self:provider.stage}
    handler: src/controllers/car/_handler.registerCar
    description: Function to register car in the platform
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: cars
          method: POST
          cors: false
          private: false

  editCar:
    name: ${self:service}_edit-car_${self:provider.stage}
    handler: src/controllers/car/_handler.editCar
    description: Function to edit an already registered car
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: cars/{carId}
          method: PATCH
          cors: false
          private: false

  DeleteCar:
    name: ${self:service}_delete-car_${self:provider.stage}
    handler: src/controllers/car/_handler.deleteCar
    description: Function for logically deleting a car
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: cars/{carId}
          method: DELETE
          cors: false
          private: false

  getCar:
    name: ${self:service}_get-car-by-id_${self:provider.stage}
    handler: src/controllers/car/_handler.getCarById
    description: Function fot get a car by id
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: cars/{carId}
          method: GET
          cors: false
          private: false

  getAllCars:
    name: ${self:service}_get-cars_${self:provider.stage}
    handler: src/controllers/car/_handler.getAllCars
    description: Function for to get all car
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: cars
          method: GET
          cors: false
          private: false