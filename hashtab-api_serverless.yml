service: hashtab-api

provider:
  name: aws
  runtime: nodejs10.x
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'local'}

  # IAM Roles
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt: [TabsTable, Arn]

  # Universal ENV
  environment:
    STAGE: ${self:provider.stage}

# In the words of Lone Star, "Take only what you need to survive."
package:
  individually: true
  exclude:
    - src/**
  # Lambdas
functions:
  server:
    name: server
    handler: src/server.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

# AWS Services
resources:
  Resources:
    # DynamoDB
    TabsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TabsTable
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: gsi1_pk
            AttributeType: S
          - AttributeName: gsi1_sk
            AttributeType: S
          - AttributeName: gsi2_pk
            AttributeType: S
          - AttributeName: gsi2_sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: gsi1_pk
                KeyType: HASH
              - AttributeName: gsi1_sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: "5"
              WriteCapacityUnits: "5"
          - IndexName: GSI2
            KeySchema:
              - AttributeName: gsi2_pk
                KeyType: HASH
              - AttributeName: gsi2_sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: "5"
              WriteCapacityUnits: "5"

  Outputs:
    TabsTableArn:
      Description: Tabs Table Arn
      Value:
        "Fn::GetAtt": [TabsTable, Arn]
      Export:
        Name: ${self:service}:${self:provider.stage}:TabsTable
        # see Fn::ImportValue to use in other services
        # and http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
        # for documentation on use.

# Serverless Plugins
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

# Custom Config
custom:
  # Webpack
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true # enable auto-packing of external modules

  # Offline Development Configuration
  serverless-offline:
    port: 3000
  dynamodb:
    start:
      migrate: true
      # seed: true
    stages:
      - local
    # seed:
    #   domain: is domain a thing I need??????
    #     sources:
    #       - table: TabsTable
    #         sources: [./tbd.json]
