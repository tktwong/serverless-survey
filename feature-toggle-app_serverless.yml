service: feature-api

resources:
  Resources:
    featuresTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-features-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  iamManagedPolicies:
    - 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
  environment:
    FEATURES_TABLE: ${self:resources.Resources.featuresTable.Properties.TableName}
    STAGE: ${opt:stage, self:provider.stage}

plugins:
  - serverless-jest-plugin
  - serverless-dynamodb-local

functions:
  updateFeature:
    handler: handler.updateFeature
    events:
      - http:
          path: features/{name}
          method: PUT
          cors: true
  deleteFeature:
    handler: handler.deleteFeature
    events:
      - http:
          path: features/{name}
          method: DELETE
          cors: true
  listFeatures:
    handler: handler.listFeatures
    events:
      - http:
          path: features
          method: GET
          cors: true
  createFeature:
    handler: handler.createFeature
    events:
      - http:
          path: features
          method: POST
          cors: true

custom:
  jest:
    runInBand: true
  dynamodb:
    stages:
      - test
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
