# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: generatepresignedurl
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: dotnetcore2.1
  region: eu-west-1
  environment: # Service wide environment variables
    BucketName: s3-file-uploads
    ObjectKey: test-output 
    RegionEndpoint: eu-west-1
  tags: # Tags that will be added to each of the deployment resources
    S3FileUpload: Generate upload and download presigned URLS
  usagePlan: # Optional usage plan configuration   
    throttle:
      burstLimit: 25
      rateLimit: 50

package:
  individually: true

functions:
  genPostPresignedURLHandler:
    handler: S3FileUpload::S3FileUpload.Handler::GenPostPresignedURLHandler
    events:
      - http:
          path: generate-post-presigned-url/{Filename}
          method: get
          request:
           parameters:
              paths:
                Filename: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          private: true
    tags:
        PostUrl: Creating URL to upload file. 

    # you can add packaging information here
    package:
      artifact: genPresignedURLHandler.zip
    #  exclude:
    #    - exclude-me.js
    #    - exclude-me-dir/**

  genPresignedURLHandler:
    handler: S3FileUpload::S3FileUpload.Handler::GenPresignedURLHandler
    events:
      - http:
          path: generate-presigned-url
          method: get
          request:
            parameters:
              querystrings:
                url: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          private: true
    tags:
        DownloadUrl: Creating URL to download file from S3 bucket. 

    # you can add packaging information here
    package:
      artifact: genPresignedURLHandler.zip
