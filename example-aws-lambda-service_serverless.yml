service: reviews-ivanmwi

provider:
  name: aws
  runtime: java8
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:BatchWriteItem
        - dynamodb:Scan
        - events:PutRule
      Resource:
        - "arn:aws:dynamodb:us-west-2:301700843494:table/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/.../index/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/.../index/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/..."
        - "arn:aws:dynamodb:us-west-2:301700843494:table/..."

package:
  artifact: build/distributions/package.zip

functions:
 putReview:
    handler: review.PutReviewHandler
    events:
      - http:
          path: /review/{userId}/{imdbId}
          method: put
          request:
            parameters:
              userId: true
              imdbId: true

 deleteReview:
    handler: review.DeleteReviewHandler
    events:
      - http:
          path: /review/{userId}/{imdbId}
          method: delete
          request:
            parameters:
              userId: true
              imdbId: true

 deletedReviewHistory:
    handler: review.DeletedReviewHandler
    events:
      - stream: arn:aws:dynamodb:us-west-2:301700843494:table/.../stream/2018-01-03T22:31:36.653

 listReviews:
    handler: review.ListReviewsHandler
    events:
      - http:
          path: /reviews/{userId}
          method: get
          request:
            parameters:
              paths:
                userId: true
              queryStrings:
                count: false
                paginationToken: false

 listRecommendations:
   handler: recommendation.ListRecommendationsHandler
   events:
     - http:
         path: /recommendations/{userId}
         method: get
         request:
         parameters:
           userId: true

# updateTopMovieTable:
#   handler: movie.UpdateTopMovieTableHandler
#   events:
#    - schedule:
#        rate: rate(5 minutes)
#        enabled: true
