service: CollectorFunctions

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-include-dependencies

custom:
  myStage: ${opt:stage, self:provider.stage}
  settings:
    dev:
      ITEMS_FIXES_TABLE: Fixes-dev
      ITEMS_DEVICES_TABLE: Devices-dev
      ITEMS_PILOTS_TABLE: Pilots-dev
    prod:
      ITEMS_FIXES_TABLE: Fixes-test
      ITEMS_DEVICES_TABLE: Devices-test
      ITEMS_PILOTS_TABLE: Pilots-test
    devjg:
      ITEMS_FIXES_TABLE: Fixes-dev-jg
      ITEMS_DEVICES_TABLE: Devices-dev-jg
      ITEMS_PILOTS_TABLE: Pilots-dev-jg

  serverless-offline:
    port: 3001

provider:
  name: aws
  runtime: nodejs10.x
  profile: agtjgdev
  region: ap-southeast-2
  #stage: dev
  environment: ${self:custom.settings.${self:custom.myStage}}
  timeout: 30

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.${self:custom.myStage}.ITEMS_FIXES_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.${self:custom.myStage}.ITEMS_DEVICES_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.${self:custom.myStage}.ITEMS_PILOTS_TABLE}"

functions:
  saveFix:
    handler: handler.saveFix
    events:
      - http:
          path: fix
          method: post
  saveDevice:
    handler: handler.saveDevice
    events:
      - http:
          path: device
          method: post

# resources:
#   Resources:
#     FixesTable:
#       Type: "AWS::DynamoDB::Table"
#       Properties:
#         BillingMode: "PAY_PER_REQUEST"
#         AttributeDefinitions:
#         - AttributeName: "trackerID"
#           AttributeType: "S"
#         - AttributeName: "fixTime"
#           AttributeType: "N"
#         - AttributeName: "insertTime"
#           AttributeType: "N"

#         KeySchema:
#         - AttributeName: "trackerID"
#           KeyType: "HASH"
#         - AttributeName: "fixTime"
#           KeyType: "RANGE"

#         GlobalSecondaryIndexes:
#         - IndexName: "insertTime-index"
#           KeySchema:
#             - AttributeName: "insertTime"
#               KeyType: "HASH"
#           Projection:
#             ProjectionType: "KEYS_ONLY"

#         TableName: ${self:custom.settings.${self:custom.myStage}.ITEMS_FIXES_TABLE}
#         #TableName: Fixes-dev
#         #StreamSpecification:
#         #  StreamViewType: "NEW_IMAGE"

#     DevicesTable:
#       Type: "AWS::DynamoDB::Table"
#       Properties:
#         BillingMode: "PAY_PER_REQUEST"
#         AttributeDefinitions:
#         - AttributeName: "trackerID"
#           AttributeType: "S"
#         - AttributeName: "lastUpdate"
#           AttributeType: "N"
#         - AttributeName: "gliderID"
#           AttributeType: "S"

#         KeySchema:
#         - AttributeName: "trackerID"
#           KeyType: "HASH"
#         - AttributeName: "lastUpdate"
#           KeyType: "RANGE"

#         GlobalSecondaryIndexes:
#         - IndexName: "gliderID-index"
#           KeySchema:
#             - AttributeName: "gliderID"
#               KeyType: "HASH"
#           Projection:
#             ProjectionType: "KEYS_ONLY"

#         TableName: ${self:custom.settings.${self:custom.myStage}.ITEMS_DEVICES_TABLE}
#         #TableName: Fixes-dev
#         #StreamSpecification:
#         #  StreamViewType: "NEW_IMAGE"
