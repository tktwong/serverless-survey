org: mdwebb
app: chess-centre-organisation
service: chess-player-api
frameworkVersion: '2'

custom:
  settings:
    PLAYERS_TABLE: players

plugins:
    - serverless-plugin-typescript
    - serverless-dynamodb-local
    - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  environment: ${self:custom.settings}
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.PLAYERS_TABLE}"

functions:
  createPlayer:
    handler: handler.createPlayer
    events:
    - http:
        path: /player
        method: post
  getPlayers:
    handler: handler.getPlayers
    events:
    - http:
        path: /players
        method: get
  getPlayer:
    handler: handler.getPlayer
    events:
    - http:
        path: /player/{id}
        method: get
  updatePost:
    handler: handler.updatePlayer
    events:
    - http:
        path: /player/{id}
        method: put

resources:
  Resources:
    PlayersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.PLAYERS_TABLE}
    