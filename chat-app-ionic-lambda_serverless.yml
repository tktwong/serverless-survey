service: myserverlessproject2

provider:
    name: aws
    runtime: nodejs12.x
    region: eu-west-1
    environment: 
        tableName: ${self:custom.tableName}
        chatTableName: ${self:custom.chatTableName}
    iamRoleStatements:
        - Effect: Allow
          Action: 
              - dynamodb:*
          Resource: '*'

custom: 
    tableName: WebsocketUsers
    chatTableName: WebsocketRooms

functions:
    websocket-connect: 
        handler: lambdas/websockets/connect.handler
        events: 
            - websocket: 
                  route: $connect
    websocket-disconnect: 
        handler: lambdas/websockets/disconnect.handler
        events: 
            - websocket: 
                  route: $disconnect
    websocket-default: 
        handler: lambdas/websockets/default.handler
        events: 
            - websocket: 
                  route: $default
    websocket-message: 
        handler: lambdas/websockets/message.handler
        events: 
            - websocket: 
                  route: message

resources: 
    Resources: 
        WebsocketUserTable: 
            Type: AWS::DynamoDB::Table 
            Properties: 
                TableName: ${self:custom.tableName}
                AttributeDefinitions: 
                    - AttributeName: ID
                      AttributeType: S 
                KeySchema: 
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        WebsocketRoomTable: 
            Type: AWS::DynamoDB::Table 
            Properties: 
                TableName: ${self:custom.chatTableName}
                AttributeDefinitions: 
                    - AttributeName: ID
                      AttributeType: S 
                KeySchema: 
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST