service: wishlist-backend

provider:
  name: aws
  runtime: nodejs14.x
  profile: private
  region: "eu-central-1"
  environment:
    DYNAMODB_GOOGLEID_INDEX: googleId-index
    USERS_TABLE: ${self:custom.usersTable}
    WISHLISTS_TABLE: ${self:custom.wishlistsTable}
    JWT_SECRET: "m*F@B9FHNct_yTW74rD4fh-BZ2oQ_swPbwRaRAJEutAerd8MzD"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [usersTable, Arn]
        - Fn::Join:
            - "/"
            - - Fn::GetAtt: ["usersTable", "Arn"]
              - "index/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [wishlistsTable, Arn]
        - Fn::Join:
            - "/"
            - - Fn::GetAtt: ["wishlistsTable", "Arn"]
              - "index/*"

custom:
  usersTable: ${self:service}-${self:provider.stage}-users
  wishlistsTable: ${self:service}-${self:provider.stage}-wishlists

functions:
  authorizer:
    handler: dist/functions/authorizer.handler

  user:
    handler: dist/functions/userFunctions.handler
    events:
      - http:
          path: user/authorize
          method: POST
      - http:
          path: user
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
      - http:
          path: user/{proxy+}
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  wish:
    handler: dist/functions/wishFunctions.handler
    events:
      - http:
          path: wish
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
      - http:
          path: wish/{proxy+}
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  wishlist:
    handler: dist/functions/wishlistFunctions.handler
    events:
      - http:
          path: wishlist
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
      - http:
          path: wishlist/{proxy+}
          method: any
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

resources:
  - ${file(resources/dynamodb.yml)}
