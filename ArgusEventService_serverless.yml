service: argus-event-service

provider:

  name: aws
  stage: dev
  region: eu-west-1

  apiKeys:
    - argus-event-service-testing-key
    - argus-event-service-app-dev

  environment:
    APP_BUCKET: argus-security-app

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - ${self:custom.bucket-arn}
        - ${self:custom.bucket-arn}/*

functions:

  findEvents:
    runtime: nodejs12.x
    handler: src/handler/findEvents.handler
    events:
      - http:
          path: findEvents
          method: get
          private: true
          authorizer:
            arn:  ${self:custom.authorizer-arn}

  getEvent:
    runtime: nodejs12.x
    handler: src/handler/getEvent.handler
    events:
      - http:
          path: event
          method: get
          private: true
          authorizer:
            arn:  ${self:custom.authorizer-arn}

  getEventImageUrl:
    runtime: nodejs12.x
    handler: src/handler/getEventImageUrl.handler
    events:
      - http:
          path: eventImageUrl
          method: get
          private: true
          authorizer:
            arn:  ${self:custom.authorizer-arn}

custom:
  bucket-arn: arn:aws:s3:::argus-security-app
  authorizer-arn: arn:aws:cognito-idp:eu-west-1:206386915763:userpool/eu-west-1_vMNp7XqR0

resources:
  Resources:

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: argus-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        EmailVerificationSubject: Verify your vs account
        Schema:
          - Name: name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: argus-user-pool-client
        GenerateSecret: False
        UserPoolId:
          Ref: CognitoUserPool