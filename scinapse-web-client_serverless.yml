service: pluto-web-client

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  role: WebClientRole
  environment: ${file(./env/${opt:stage}.yml)}
  logRetentionInDays: 30
  apiGateway:
    minimumCompressionSize: 0
    binaryMediaTypes:
      - '*/*'

package:
  individually: true

functions:
  render:
    handler: ${file(./env/${opt:stage}.yml):HANDLER}
    memorySize: 2048
    timeout: 60
    package:
      artifact: dist.zip
    events:
      - http:
          method: any
          path: /
      - http:
          method: any
          path: /{proxy+}
resources:
  Resources:
    APIProxyResourceParent:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        PathPart: api
        RestApiId:
          Ref: ApiGatewayRestApi
    APIProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId:
          Ref: APIProxyResourceParent
        PathPart: '{proxy+}'
        RestApiId:
          Ref: ApiGatewayRestApi
    APIProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        ResourceId:
          Ref: APIProxyResource
        RestApiId:
          Ref: ApiGatewayRestApi
        HttpMethod: ANY
        AuthorizationType: NONE
        RequestParameters:
         method.request.path.proxy: true
        Integration:
          IntegrationHttpMethod: any
          Type: HTTP_PROXY
          Uri: ${file(./env/${opt:stage}.yml):API_ENDPOINT}
          RequestParameters:
           integration.request.path.proxy: method.request.path.proxy
          IntegrationResponses:
            - StatusCode: 200
    BundleProxyResourceParent:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        PathPart: bundle
        RestApiId:
          Ref: ApiGatewayRestApi
    BundleProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId:
          Ref: BundleProxyResourceParent
        PathPart: '{proxy+}'
        RestApiId:
          Ref: ApiGatewayRestApi
    BundleProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        ResourceId:
          Ref: BundleProxyResource
        RestApiId:
          Ref: ApiGatewayRestApi
        HttpMethod: ANY
        AuthorizationType: NONE
        RequestParameters:
         method.request.path.proxy: true
        Integration:
          IntegrationHttpMethod: any
          Type: HTTP_PROXY
          Uri: 'https://bundle.scinapse.io/{proxy}'
          RequestParameters:
           integration.request.path.proxy: method.request.path.proxy
          IntegrationResponses:
            - StatusCode: 200
    WebClientRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - edgelambda.amazonaws.com
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: SiteMapS3Role
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: "arn:aws:s3:::scinapse-sitemap/*"
          - PolicyName: LambdaEdgeExecutionRole
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"
          - PolicyName: XRayRole
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "xray:PutTraceSegments"
                    - "xray:PutTelemetryRecords"
                  Resource: "*"
          - PolicyName: LambdaMetricPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - cloudwatch:PutMetricData
                  Resource: "*"
          - PolicyName: SSMPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - ssm:GetParameter
                  Resource: "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/scinapse-web-client/dev/branch-mapper"
