
service: example-app

app: example-app
org: lluchkaa

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  apiGateway:
    shouldStartNameWithService: true

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:PutItem"
      Resource:
        - arn:aws:dynamodb:#{AWS::Region}:${AWS::AccountId}:table/${self:custom.dynamodb.userTable}
        - arn:aws:dynamodb:#{AWS::Region}:${AWS::AccountId}:table/${self:custom.dynamodb.userTable}/index/pk

  environment:
    DYNAMODB_USER_TABLE: ${self:service}-user-${self:provider.stage}
    JWT_SECRET: ${param:JWT_SECRET}

functions:
  login:
    handler: src/functions/login.login
    events:
      - http:
          method: post
          cors: true
          path: /v1/user/login
          request:
            schema:
              application/json: ${file(src/schema/login_request.json)}
  createUser:
    handler: src/functions/createUser.createUser
    events:
      - http:
          method: post
          cors: true
          path: /v1/user
          request:
            schema:
              application/json: ${file(src/schema/create_user_request.json)}

plugins:
  - serverless-plugin-typescript
  - serverless-pseudo-parameters
  - serverless-mocha
  - serverless-offline

custom:
  dynamodb:
    userTable: ${self:service}-user-${self:provider.stage}
  serverless-mocha-plugin:
    testTemplate: templates/test-template.ejs
    functionTemplate: templates/function-template.ejs

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.dynamodb.userTable}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST