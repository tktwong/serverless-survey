service: list-views-api

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  stage: ${file(stages/${opt:stage, self:provider.stage}.yml)}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

provider:
  name: aws
  profile: ${opt:profile, self:custom.stage.profile}
  runtime: python3.6
  timeout: 30 # optional, in seconds, default is 6
  region: ${opt:region, self:custom.stage.region}
  stage: dev
  environment:
    IS_OFFLINE: ${self:custom.stage.environment.IS_OFFLINE}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: list_views/create.create
    events:
      - http:
          path: list_views
          method: post
          cors: true

  get:
    handler: list_views/get.get
    events:
      - http:
          path: list_views/{id}
          method: get
          cors: true

  delete:
    handler: list_views/delete.delete
    events:
      - http:
          path: list_views/{id}
          method: delete
          cors: true

  index:
    handler: list_views/get_all.get_all
    events:
      - http:
          path: list_views/
          method: get
          cors: true

  update:
    handler: list_views/update.update
    events:
      - http:
          path: list_views/{id}
          method: put
          cors: true


resources:
  Resources:
    ListViewsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: appId_sectionId
            AttributeType: S
          -
            AttributeName: listingType_listingId
            AttributeType: S
        KeySchema:
          -
            AttributeName:  appId_sectionId
            KeyType: HASH
          -
            AttributeName: listingType_listingId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
