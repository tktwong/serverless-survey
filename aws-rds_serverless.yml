service: rds-postgres

custom:
  defaultStage: dev
  region:
    dev: ap-northeast-1
    prod: ap-northeast-1
  profiles:
    dev: default
    prod: myProfile

provider:
  name: aws
  stage: ${opt:stage, self:custom.defaultStage}
  region: ${self:custom.region.${self:provider.stage}}
  profile: ${self:custom.profiles.${self:provider.stage}}

resources:
  Resources:
    # Virtual Private Cloud
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "172.32.0.0/16"
        EnableDnsSupport: True
        EnableDnsHostnames: True
        InstanceTenancy: 'default'
    SubnetA:  # 子網域 A
      DependsOn: VPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: "172.32.0.0/24"
    SubnetB:  # 子網域 B
      DependsOn: VPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: ${self:provider.region}c
        CidrBlock: "172.32.1.0/24"
    SubnetC:  # 子網域 C
      DependsOn: VPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: ${self:provider.region}c
        CidrBlock: "172.32.2.0/24"
    SecurityGroup:
      DependsOn: VPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Ingress for RDS Instance
        VpcId:
          Ref: VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
    RDSSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: "RDS Subnet Group"
        SubnetIds:
        - Ref: SubnetA
        - Ref: SubnetB
        - Ref: SubnetC
    InternetGateway:
      Type: "AWS::EC2::InternetGateway"
    VPCGatewayAttachment:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: VPC
        InternetGatewayId:
          Ref: InternetGateway
    RouteTable:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: VPC
    Route:
      Type: "AWS::EC2::Route"
      DependsOn: VPCGatewayAttachment
      Properties:
        RouteTableId:
          Ref: RouteTable
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: InternetGateway
    RDS:
      DependsOn: SecurityGroup
      Type: "AWS::RDS::DBInstance"
      Properties:
        Engine: "postgres"
        EngineVersion: "9.3.14"
        MultiAZ: False
        DBName: "postgres"
        DBInstanceIdentifier: "postgres"
        MasterUsername: "postgres"
        MasterUserPassword: "postgres123"
        DBInstanceClass: "db.t1.micro"
        PubliclyAccessible: True
        BackupRetentionPeriod: 0
        AutoMinorVersionUpgrade: False
        AllocatedStorage: 5
        VPCSecurityGroups:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
        DBSubnetGroupName:
          Ref: RDSSubnetGroup
