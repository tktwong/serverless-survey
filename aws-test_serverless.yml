service: aws-orders-test
provider:
  name: aws
  runtime: python2.7
  region: us-east-2 # hardcoded for now but in final implementation can be passed via environment variables
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
        - dynamodb:*
      Resource: "*"

functions:
  process-file:
    handler: main_handler.file_handler
    events:
      - s3:
          bucket: input-data-test-111620171510 # hardcoded for now but in final implementation can be passed via environment variables
          event: s3:ObjectCreated:*

  process-items:
    handler: main_handler.items_handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - raw
              - StreamArn

resources:
  Resources:
    raw:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: tracking_no
            AttributeType: S
        KeySchema:
          -
            AttributeName: tracking_no
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        TableName: "raw_orders" # hardcoded for now but in final implementation can be passed via environment variables

    mapped:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: sku
            AttributeType: N
        KeySchema:
          -
            AttributeName: sku
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "mapped_orders" # hardcoded for now but in final implementation can be passed via environment variables