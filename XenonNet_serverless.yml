service: ${env.SERVICE_NAME}
provider:
  name: aws
  runtime: nodejs10.x
  stage: ${env.STAGING}
  region: ${env.REGION}
  timeout: ${env.TIMEOUT}
  memorySize: ${env.LAMBDA_MEMORY}
  environment:
    STUFF: ${}
    SECURITYGR
  vpc:
    securityGroupIds:
      - Fn::Join:
          - ""
          - - "arn:aws:dynamodb:${}:${}:table/"
            - Ref: groupList

    #{ 'Fn::Split': [ ",", "${ssm:/pl-datastore_${opt:stage, 'production'}/network/lambda_security_group}" ] }
    subnetIds:
      - Fn::Join:
          - ""
          - - "arn:aws:dynamodb:${}:${}:table/"
            - Ref: groupList

      #{ 'Fn::Split': [ ",", "${ssm:/pl-datastore_${opt:stage, 'production'}/network/private_subnets}" ] }
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "dynamodb:*"
       Resource:
          - *
    -  Effect: "Allow"
       Action:
         - "s3:*"
       Resource:
          - *
functions:
  userApi:
    handler: src/handlers/user/index.handler
    events:
      - http:
          method: post
          path: /api/user/add-new-user

           path: /api/organisation/get-all-organisations

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-content-encoding
  - serverless-plugin-existing-s3
  - serverless-plugin-tracing

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  contentEncoding:
    minimumCompressionSize: 0

  serverless-offline:
    port: 3001

package:
  individually: true
