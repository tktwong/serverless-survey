# Welcome to Serverless!
#
# For full config options, check the docs:
#    docs.serverless.com

service: real-themes
frameworkVersion: '>=1.0.0 <2.0.0'

provider:
  name: aws
  stackName: real-${self:provider.stage}-themes
  stage: ${opt:stage, 'production'}  # defaults to production, as the expectation is that stages will rarely be used
  logRetentionInDays: 7

plugins:
  - serverless-pseudo-parameters
  - serverless-s3-deploy
  - serverless-plugin-git-variables
  - serverless-cloudfront-invalidate
  - serverless-stack-output

custom:

  assets:
    auto: true
    targets:
      - bucket:
          Ref: ThemesBucket
        files:
          - source: ./bucket/
            globs:
              - '*'
              - '**/*'

  cloudfrontInvalidate:
    distributionIdKey: CloudFrontThemesDistributionId
    items:
      - /themes.json
      - /versions/beta.json
      - /versions/production.json

  output:
    handler: output.handler

resources:
  Resources:

    ThemesBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        AccessControl: Private
        BucketName: ${self:provider.stackName}-#{AWS::AccountId}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256

    ThemesBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: ThemesBucket
        PolicyDocument:
          Statement:
            - Action:
                - 's3:GetObject'
              Effect: Allow
              Resource: !Join [ /, [ !GetAtt ThemesBucket.Arn, '*' ] ]
              Principal:
                CanonicalUser: !GetAtt ThemesCloudFrontOriginAccessIdentity.S3CanonicalUserId

    ThemesCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            TargetOriginId: ThemesCloudFrontDistributionOriginId
            ViewerProtocolPolicy: https-only
          DefaultRootObject: ''
          Enabled: true
          Origins:
            - DomainName: !GetAtt ThemesBucket.DomainName
              Id: ThemesCloudFrontDistributionOriginId
              S3OriginConfig:
                OriginAccessIdentity: !Join [ /, [ origin-access-identity, cloudfront, Ref: ThemesCloudFrontOriginAccessIdentity ] ]

    ThemesCloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: 'Origin Access Identity for Cloud Front formation of Themes bucket'

  Outputs:

    CloudFrontThemesDistributionId:
      Value:
        Ref: ThemesCloudFrontDistribution

    CloudFrontThemesDomainName:
      Value: !GetAtt ThemesCloudFrontDistribution.DomainName

    GitBranch:
      Value: ${git:branch}

    GitDescribe:
      Value: ${git:describeLight}

    GitIsDirty:
      Value: ${git:isDirty}

    S3ThemesBucketName:
      Value:
        Ref: ThemesBucket
