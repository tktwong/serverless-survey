service: upload-to-s3-and-postprocess

frameworkVersion: ">=1.1.0"

custom:
  bucket: minidropbox-serverless-dev-serverlessdeploymentbucket-twilio

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:DeleteObject
      Resource: "*"
    - Effect: "Allow"
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"

functions:
  postprocess:
    handler: handler.postprocess
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*

  twilio:
    handler: minidropbox/twilio.twil

  list:
    handler: minidropbox/list.list
    events:
      - http:
          path: minidropbox
          method: get
          cors: true   

  removeDB:
    handler: minidropbox/remove.remove
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectRemoved:* 

  delete:
    handler: minidropbox/delete.delete
    events:
      - http:
          path: minidropbox/{name}
          method: delete
          cors: true   
#  upload:
#    handler: minidropbox/upload.upload
#    events:
#      - s3:
#          bucket: ${self:custom.bucket}
#          event: s3:ObjectCreated:*
#          rules:
#            - suffix: .png

resources:
  Resources:
    MiniDropBoxDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
#      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'minidropbox'