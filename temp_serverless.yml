service: serverless-nestjs

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
   # TableName_user_ev: user-account-ev
   # TableName_user_ev_cards: user-account-cardDetails
   # TableName_user_cp : user-account-cp
   # TableName_cp_detail : cp-details
  iamRoleStatements:
    - Effect: Allow
      Action:
           - dynamodb:*
      Resource: '*' 

plugins:
  - serverless-offline
 # - '@hewmen/serverless-plugin-typescript'
 # - serverless-plugin-optimize
 # - serverless-offline
 # - serverless-plugin-warmup

custom:
  TableName_user              : User
  TableName_chargePoint       : ChargePoint
  TableName_paymentDetail     : Payment
  TableName_usageDetail       : TransactionHistory

package:
  exclude:
    - .git/**
    - src/**
    - test/**
    - e2e/**
    - nodemon.json
    - README.md

functions:
  index:
    handler: dist/index.handler
    events:
    - http:
        cors: true
        path: '/'
        method: any
    - http:
        cors: true
        path: '{proxy+}'
        method: any

resources:
    Resources:
          MyDynamoDbTable1:
                Type: AWS::DynamoDB::Table
                Properties:
                     TableName: ${self:custom.TableName_user}
                     AttributeDefinitions:
                         - AttributeName: ID
                           AttributeType: S
                     KeySchema:
                          -  AttributeName: ID
                             KeyType: HASH
                     BillingMode: PAY_PER_REQUEST
          MyDynamoDbTable2:
                Type: AWS::DynamoDB::Table
                Properties:
                     TableName: ${self:custom.TableName_chargePoint}
                     AttributeDefinitions:
                         - AttributeName: ID
                           AttributeType: S
                     KeySchema:
                          -  AttributeName: ID
                             KeyType: HASH
                     BillingMode: PAY_PER_REQUEST
          MyDynamoDbTable3:
                Type: AWS::DynamoDB::Table
                Properties:
                     TableName: ${self:custom.TableName_paymentDetail}
                     AttributeDefinitions:
                         - AttributeName: ID
                           AttributeType: S
                     KeySchema:
                          -  AttributeName: ID
                             KeyType: HASH
                     BillingMode: PAY_PER_REQUEST
          MyDynamoDbTable4:
                Type: AWS::DynamoDB::Table
                Properties:
                     TableName: ${self:custom.TableName_usageDetail}
                     AttributeDefinitions:
                         - AttributeName: ID
                           AttributeType: S
                     KeySchema:
                          -  AttributeName: ID
                             KeyType: HASH
                     BillingMode: PAY_PER_REQUEST
         