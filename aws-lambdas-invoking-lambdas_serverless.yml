service: aws-lambdas-invoking-lambdas

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  logRetentionInDays: 3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: '*'

plugins:
  - serverless-offline

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  # function available via API Gateway and internal use
  helloHTTP:
    handler: handler.helloHTTP
    events:
      - http:
          path: hello
          method: get
  # function only available within AWS
  hello:
    handler: handler.hello

  # Simulate a quick async response, for instance restfull api querying the DB
  quick:
    handler: handler.quick
    events:
      - http:
          path: quick/{id}
          method: get

  # Simulate a quick async response, for instance restfull api querying the DB
  synchronously:
    handler: handler.invokeSynchronously
    events:
      - http:
          path: synchronously/{x}/{y}
          method: get

  # Simulate a long async process
  asynchronously:
    handler: handler.invokeASynchronously
    events:
      - http:
          path: asynchronously/{id}
          method: get

  syncFunc:
    handler: handler.syncFunc

  asyncFunc:
    handler: handler.asyncFunc
    timeout: 120 # Timeout for this specific function.  Overrides the default set above.

#    Define function environment variables here
#    environment:
#      variable2: value2
#      s3: ${env:BUCKET}

# ----------------------------------------------------------------------------
# you can add CloudFormation resource templates here
#
# here are the resources for fetch and Ajax requests: in case of errors, prevent the CORS issue
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
