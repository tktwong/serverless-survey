service: pk-leaverequests-serverless

provider:
  name: aws
  stage: production
  runtime: nodejs8.10
  profile: pk-internal
  region: us-east-1
  environment:
    CLIENT_ID: ${ssm:/leave-requests/client-id}
    CLIENT_SECRET: ${ssm:/leave-requests/client-secret}
    VERIFICATION_TOKEN: ${ssm:/leave-requests/verification-token}
    SLACK_BOT_ACCESS_TOKEN: ${ssm:/leave-requests/slack-bot-access-token}
    SLACK_OAUTH_ACCESS_TOKEN: ${ssm:/leave-requests/slack-oauth-access-token}
    SLACK_SIGNING_SECRET: ${ssm:/leave-requests/slack-signing-secret}

    LEAVE_REQUESTS_DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    EVENT_REQUESTS_DYNAMODB_TABLE: eventrequests-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.LEAVE_REQUESTS_DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.EVENT_REQUESTS_DYNAMODB_TABLE}"


functions:
  # handle the slash command and present the dialog
  leave_request:
    handler: src/leave_requests/slash_command.handler
    events:
      ## Slash Commands
      - http:
          path: /leave/request
          method: post
    environment:
      SLACK_CHANNEL: ${ssm:/leave-requests/slack-channel}

  leave_reminder:
    handler: src/leave_requests/reminder.handle
    # events:
    #   - schedule: rate(1 hour)
  
  action_router:
    handler: src/action_router.handler
    events:
      - http:
          path: /actions
          method: post
    environment:
      LEAVE_SLACK_CHANNEL: ${ssm:/leave-requests/slack-channel}
      TRAVEL_SLACK_CHANNEL: ${ssm:/flight-requests/slack-channel}
      REMOTE_SLACK_CHANNEL: ${ssm:/remote-requests/slack-channel}
      EVENT_SLACK_CHANNEL: ${ssm:/event-requests/slack-channel}

  flight_request:
    handler: src/flight_requests/slash_command.handler
    events:
      ## Slash Commands
      - http:
          path: /flight/request
          method: post
    environment:
      SLACK_CHANNEL: ${ssm:/flight-requests/slack-channel}

  remote_work_request:
    handler: src/remote_work_requests/slash_command.handler
    events:
      ## Slash Commands
      - http:
          path: /remote_work/request
          method: post
    environment:
      SLACK_CHANNEL: ${ssm:/remote-requests/slack-channel}

  event_request:
    handler: src/event_requests/slash_command.handler
    events:
      ## Slash Commands
      - http:
          path: /event/request
          method: post
    environment:
      SLACK_CHANNEL: ${ssm:/event-requests/slack-channel}

resources:
  Resources:
    LeaveRequestsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.LEAVE_REQUESTS_DYNAMODB_TABLE}
    EventRequestsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.EVENT_REQUESTS_DYNAMODB_TABLE}