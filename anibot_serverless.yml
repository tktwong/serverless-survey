service: anibot
 
provider: # Required to tell serverless this is an aws project, modify as needed
  name: aws
  runtime: python3.8
  # Modify the following with real aws profile to deploy to aws
  # Add more attributes as needed to suit your aws environment, eg. region
  stage: prod
  profile: botprofile
  logRetentionInDays: 14
  environment:
    ANIBOT_USERNAME: theanibot
    ANIBOT_TOKEN: ${env:ANIBOT_TOKEN}
    ANIBOT_CLIENT_ID: ${env:ANIBOT_CLIENT_ID}
    ANIBOT_CLIENT_SECRET: ${env:ANIBOT_CLIENT_SECRET}
    USERS_TABLE_NAME: !Ref usersTable
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: !GetAtt usersTable.Arn

  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/POST/bot
        Condition:
          IpAddress:
            aws:SourceIp:
              - '149.154.160.0/20'
              - '91.108.4.0/22'
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/GET/auth

# Configure your lambda function(s) here
functions:
  bot:
    maximumRetryAttempts: 0
    handler: bot.handler
    events:
      - http:
          path: /bot
          method: post
          async: true
  
  auth:
    maximumRetryAttempts: 0
    handler: auth.handler
    events:
      - http:
          path: /auth
          method: get

package:
  exclude:
    - ./node_modules
    - ./local.py
    - setWebhook

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    slim: true
    pythonBin: python3

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: telegramId
            AttributeType: S
        KeySchema:
          - AttributeName: telegramId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
