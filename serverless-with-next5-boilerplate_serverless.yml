service:
  name: serverless-with-next

frameworkVersion: ">=1.26.1"

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-jest-plugin
  - serverless-domain-manager

# Enable auto-packing of external modules
# See https://serverless-stack.com/chapters/add-support-for-es6-es7-javascript.html
custom:
  serverless-offline:
    port: 3000 # We run our SLS endpoints on another port (Next app will run on 3001)
  webpackIncludeModules: true
  domains:
    enabled_development: false
    url_development: '' # Unused, just avoid SLS warning variable not found
    enabled_staging: true # TODO Pass this to false if you don't want to use a custom domain (custom domain is currently recommended because it fixes sub routes, but not really if you just wanna play around, see "Known issues")
    url_staging: 'swn.dev.vadorequest.fr'
    enabled_production: true
    url_production: 'swn.prod.vadorequest.fr' # TODO change
  memorySizes: # TODO Check how much is actually needed
    development: 512 # Unused, just avoid SLS warning variable not found
    staging: 512
  customDomain:
    enabled: ${self:custom.domains.enabled_${self:provider.stage}}
    domainName: ${self:custom.domains.url_${self:provider.stage}}
#    basePath: '' # This will be prefixed to all routes
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs6.10
  timeout: 30 # 30 seconds is the maximal allowed by API Gateway
  stage: ${opt:stage, 'development'}
  region: ${opt:region, 'us-east-1'}
  memorySize: ${self:custom.memorySizes.${self:provider.stage}}
  environment:
    NODE_ENV: ${self:provider.stage}

#package:
#  individually: true

functions:
  server:
    handler: src/functions/server/server.handler
    events:
      - http:
          method: GET
          path: /
      - http:
          method: GET
          path: /static/{any+}
      - http:
          method: GET
          path: /_next/{proxy+} # Catch Next specific routes
      - http:
          method: ANY
          path: /{any+} # Catch all unknown routes and redirect to main handler

  status:
    handler: src/functions/status/status.handler
    events:
      - http:
          method: get
          path: status

