service:
  name: rewards
# app and org for use with dashboard.serverless.com
#app: rewards-tracker
#org: Kannan.S.


plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline


provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    USER_TABLE: Reward-User-${self:provider.stage}
    REDEEM_TABLE: Reward-Redeem-${self:provider.stage}
    IS_OFFLINE: ${env:OFFLINE}
    DB_OFFLINE_URL: 'http://localhost:8000'
    IMAGES_S3_BUCKET: serverless-sk-reward-tracker-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300
    REWARDS_RUN_SCHEDULE: '1 hour'
  

custom:
  serverless-offline:
    port: 3003

  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true

  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

functions:
  #createUser:
  #  ${file(resources/function-createUser.yml)}

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  getAllUsers:
    ${file(resources/function-getAllUsers.yml)}

  getUser:
    ${file(resources/function-getUser.yml)}

  deleteUser:
    ${file(resources/function-deleteUser.yml)}

  redeemRewards:
    ${file(resources/function-redeem.yml)}

  getRewards:
    ${file(resources/function-getRewards.yml)}

  giveRewards:
      ${file(resources/function-giveRewards.yml)}

  getSignedURL:
      ${file(resources/function-getUploadURL.yml)}

resources:
  - ${file(resources/api-gateway.yml)}
  - ${file(resources/dynamodb-redeem.yml)}
  - ${file(resources/dynamodb-user.yml)}
  - ${file(resources/s3-bucket.yml)}
