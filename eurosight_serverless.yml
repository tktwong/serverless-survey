plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

service:
  name: eurosight

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  cfnRole: ${cf:${self:service}-iam.CloudformationDeploymentRoleOutput}
  websocketsApiRouteSelectionExpression: $request.body.action
  environment:
    TABLE_NAME: !Ref EurosightTable

functions:
  connect:
    handler: index.connect
    events:
      - websocket:
          route: $connect
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt EurosightTable.Arn

  disconnect:
    handler: index.disconnect
    events:
      - websocket: $disconnect
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn

  init:
    handler: index.init
    events:
      - websocket:
          route: init
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn

  refresh:
    handler: index.refresh
    events:
      - websocket: refresh
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: !GetAtt EurosightTable.Arn
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource: !Sub "arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:#{WebsocketsApi}/${self:provider.stage}/*"
    environment:
      ENDPOINT_URL: !Sub "https://#{WebsocketsApi}.execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}"

  makeAdmin:
    handler: index.makeAdmin
    events:
      - websocket: makeAdmin
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn

  enableVoting:
    handler: index.enableVoting
    events:
      - websocket: enableVoting
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn

  vote:
    handler: index.vote
    events:
      - websocket: vote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn

  countryPerformance:
    handler: index.countryPerformance
    events:
      - websocket: countryPerformance
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt EurosightTable.Arn

  processChange:
    handler: index.processChange
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [EurosightTable, StreamArn]
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
        Resource: !GetAtt EurosightTable.Arn
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource: !Sub "arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:#{WebsocketsApi}/${self:provider.stage}/*"
    environment:
      ENDPOINT_URL: !Sub "https://#{WebsocketsApi}.execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}"

resources:
  Resources:
    EurosightTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Type
            AttributeType: S
          - AttributeName: Key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: Type
            KeyType: HASH
          - AttributeName: Key
            KeyType: RANGE
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
