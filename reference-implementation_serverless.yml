service: alpha-lambda-reference

custom:
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  namespace: ${self:service}-${self:custom.stage}
  packageLimit: 6MB
  permissions: ${file(./serverless/permissions.yml)}
  alerts: ${file(./serverless/alerts.yml)}
  prune:
    automatic: true
    number: 3
  bootstrap:
    file: serverless/bootstrap/data.yml
    stack: ${self:custom.namespace}-bootstrap
    parameters:
      - ParameterKey: namespace
        ParameterValue: ${self:custom.namespace}
    exports:
      tableName:
        Fn::ImportValue: ${self:custom.namespace}-table-name
      tableArn:
        Fn::ImportValue: ${self:custom.namespace}-table-arn
      responseBucketName:
        Fn::ImportValue: ${self:custom.namespace}-response-bucket-name
      sendNotificationTasksQueueArn:
        Fn::ImportValue: ${self:custom.namespace}-send-notification-tasks-queue-arn
      sendNotificationTasksQueueUrl:
        Fn::ImportValue: ${self:custom.namespace}-send-notification-tasks-queue-url
      streamArn:
        Fn::ImportValue: ${self:custom.namespace}-stream-arn
      streamDlqUrl:
        Fn::ImportValue: ${self:custom.namespace}-stream-dlq-url
      streamDlqArn:
        Fn::ImportValue: ${self:custom.namespace}-stream-dlq-arn
      monitoringTopicArn:
        Fn::ImportValue: ${self:custom.namespace}-monitoring-topic-arn
      updateVoteCountTasksQueueArn:
        Fn::ImportValue: ${self:custom.namespace}-update-vote-count-tasks-queue-arn
      updateVoteCountTasksQueueUrl:
        Fn::ImportValue: ${self:custom.namespace}-update-vote-count-tasks-queue-url

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  logRetentionInDays: 30
  tracing: true
  iamRoleStatements:
    - ${self:custom.permissions.xRayWriter}
  access: ${file(./serverless/access.yml)}
  environment:
    AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
    AWS_XRAY_ENABLED: ${self:provider.tracing}
    NAMESPACE: ${self:custom.namespace}
    RESPONSE_BUCKET_NAME: ${self:custom.bootstrap.exports.responseBucketName}
    TABLE_NAME: ${self:custom.bootstrap.exports.tableName}
    STREAM_DLQ_URL: ${self:custom.bootstrap.exports.streamDlqUrl}

plugins:
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies
  - serverless-plugin-bootstrap
  - serverless-plugin-split-stacks
  - serverless-plugin-custom-roles
  - serverless-plugin-package-size
  - serverless-plugin-tracing
  - serverless-plugin-aws-alerts
  - serverless-plugin-lambda-account-access
  - serverless-prune-plugin

package:
  individually: true
  excludeDevDependencies: false
  include:
    - package.json
  exclude:
    - ./*
    - serverless/**

functions: ${file(./serverless/functions.yml)}
