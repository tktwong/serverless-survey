service: consorcio-service

plugins:
  - serverless-offline
  - serverless-dynamodb-fixtures
  - serverless-python-requirements

package:
  individually: true
  exclude:
    - node_modules/**
    - venv/**

custom:
  tables:
    dnaAnalyse: ${self:service.name}.dna-analyse.${self:provider.stage}
    dnaAnalyseStats: ${self:service.name}.dna-analyse-stats.${self:provider.stage}
  fixtures:
    - table: ${self:service.name}.dna-analyse-stats.${self:provider.stage}
      enable: true
      sources:
        - ./.data-fixtures/dna-analyse-stats.json

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  stage: dev
  environment:
    DNA_ANALYSE_TABLE_NAME: ${self:custom.tables.dnaAnalyse}
    DNA_ANALYSE_STATS_TABLE_NAME: ${self:custom.tables.dnaAnalyseStats}
    DNA_ANALYSE_QUEUE_URL:
      Ref: DnaAnalyseQueue
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        Fn::GetAtt: [DnaAnalyseQueue, Arn]
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt: [DnaAnalyseDynamodbTable, Arn]
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        Fn::GetAtt: [DnaAnalyseStatsDynamodbTable, Arn]

functions:
  dna_analyse_check:
    handler: dna_analyse.check
    module: src
    events:
      - http:
          path: mutant
          method: post
          cors: true
          authorizer:
             type: COGNITO_USER_POOLS
             authorizerId:
               Ref: ApiGatewayAuthorizer

  dna_analyse_process:
    handler: dna_analyse.process
    module: src
    events:
      - sqs:
          arn:
            Fn::GetAtt: [DnaAnalyseQueue, Arn]

  dna_stats_build:
    handler: dna_stats.build
    module: src
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - DnaAnalyseDynamodbTable
              - StreamArn

  dna_stats_get:
    handler: dna_stats.get
    module: src
    events:
      - http:
          path: stats
          method: get
          cors: true
          authorizer:
             type: COGNITO_USER_POOLS
             authorizerId:
               Ref: ApiGatewayAuthorizer

resources:
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  # SQS
  - ${file(resources/sqs-queue.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-tables.yml)}
