service: oc-logger-backend

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}

functions:
  oauth:
    handler: ./OAuth/oauth.invoke
    environment:
      CONSUMER_KEY: ${env:CONSUMER_KEY}
      CONSUMER_SECRET: ${env:CONSUMER_SECRET}

  getOAuthToken:
    handler: ./OAuth/GetRequestToken.invoke
    environment:
      OAUTH_CALLBACK: ${env:OAUTH_CALLBACK}
    events:
      - http:
          path: oauth/requestToken
          method: get

  getAccessToken:
    handler: ./OAuth/GetAccessToken.invoke
    events:
      - http:
          path: oauth/accessToken
          method: post

  getUser:
    handler: ./OpenCaching/GetUser.invoke
    environment:
      CONSUMER_KEY: ${env:CONSUMER_KEY}
    events:
      - http:
          path: oc/user
          method: post
  
  getGeoCache:
    handler: ./OpenCaching/GetGeoCache.invoke
    environment:
      CONSUMER_KEY: ${env:CONSUMER_KEY}
    events:
      - http:
          path: oc/geocache
          method: post

  submitLogBook:
    handler: ./OpenCaching/SubmitLogBook.invoke
    # environment:
    #   CONSUMER_KEY: ${env:CONSUMER_KEY}
    #   CONSUMER_KEY: ${env:CONSUMER_KEY}
    #   CONSUMER_SECRET: ${env:CONSUMER_SECRET}
    events:
      - http:
          path: oc/logbook
          method: post

