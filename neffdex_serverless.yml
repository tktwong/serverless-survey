service: neffdex-service

frameworkVersion: ">=1.1.0 <2.0.0"

package:
  individually: false

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-3
  timeout: 10
  tracing:
    lambda: true
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-dynamodb
    S3_BUCKET_FRONTEND: ${self:service}-${opt:stage, self:provider.stage}-frontend
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  neffdex-graphql:
    timeout: 10
    handler: dist/platform3/handlers.graphqlHandler
    description: GraphQL endpoint for neffdex.
    include:
      - dist/platform3/handlers.js
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true

resources:
  Resources:
    PokemonDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

    FrontendHostingBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:provider.environment.S3_BUCKET_FRONTEND}
        WebsiteConfiguration:
          IndexDocument: index.html

    FrontendHostingBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: FrontendHostingBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: [ "s3:GetObject" ]
              Resource:
                Fn::Join: ["", ["arn:aws:s3:::", { "Ref": "FrontendHostingBucket" }, "/*"]]
