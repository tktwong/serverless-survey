# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: blog

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:310281080482:table/blog-posts"

functions:
  addBlogPost:
    handler: handler.addBlogPost
    events:
      - http:
          path: blog-post
          method: post
          cors: true

  getAllBlogPosts:
    handler: handler.getAllBlogPosts
    events:
      - http:
          path: blog-post
          method: get
          cors: true

  getBlogPost:
    handler: handler.getBlogPost
    events:
      - http:
          path: blog-post/{id}
          method: get
          cors: true

  updateBlogPost:
    handler: handler.updateBlogPost
    events:
      - http:
          path: blog-post/{id}
          method: post
          cors: true
          
  deleteBlogPost:
    handler: handler.deleteBlogPost
    events:
      - http:
          path: blog-post/{id}
          method: delete
          cors: true

resources:
  Resources:

    ApiGatewayMethodBlogDashpostPost:
      Properties:
        AuthorizationType: AWS_IAM

    ApiGatewayMethodBlogDashpostIdVarDelete:
      Properties:
        AuthorizationType: AWS_IAM

    ApiGatewayMethodBlogDashpostIdVarPost:
      Properties:
        AuthorizationType: AWS_IAM
    
    #ApiGatewayMethodBlogDashpostPost:
    #  Properties:
    #    AuthorizationType: AWS_IAM
    #
    #ApiGatewayMethodBlogDashpostPost:
    #  Properties:
    #    AuthorizationType: AWS_IAM


             
plugins:
  - serverless-offline

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
