# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: 
  name: ${self:custom.serviceName}
  awsKmsKeyArn: ${self:custom.kmsKeyArn}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

package:
  individually: true

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  environment:
    LOG_LEVEL: debug

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

  iamRoleStatements:
    -
      Effect: Allow
      Action:
          - 'kms:Decrypt'
      Resource: ${self:custom.kmsKeyArn}
    -
      Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region}:${self:custom.accountId}:table/*"
    -
      Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.serviceName}-${opt:stage}-sample/*"

plugins:
  - serverless-webpack
  - serverless-aws-documentation
  - serverless-dynamodb-autoscaling

custom:
  serviceName: serverless-boilerplate
  accountId: ${env:${opt:stage}_AWS_ACCOUNT_ID}
  kmsKeyArn: ${env:${opt:stage}_AWS_KMS_KEY_ARN}
  serviceVersion: ${env:SERVICE_VERSION}

functions:
  sample:
    handler: src/handlers/sampleHandler/index.default
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /
          method: POST

  serviceStatus:
    handler: src/handlers/serviceStatus/index.default
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /
          method: GET
          authorizer: apiAuthorizer
    environment:
      serviceVersion: ${self:custom.serviceVersion}

  apiAuthorizer:
    handler: src/handlers/apiAuthorizer/index.default

#    you can add any of the following events
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
