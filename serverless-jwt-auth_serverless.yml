service: serverless-jwt-auth

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  env: ${file(env.${opt:STAGE, 'prod'}.yml), file(env.yml)}
  dynamodb: ${file(config/dynamodb-offline.yml)}

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:STAGE, self:custom.env.STAGE}
  region: ${self:custom.env.REGION}
  environment:
    JWT_SECRET: ${self:custom.env.JWT_SECRET}
    TABLENAME_USERS: ${self:service}-${self:provider.stage}-users
    TABLENAME_TASKS: ${self:service}-${self:provider.stage}-tasks
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      # DynamoDB tables to provide access to
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TABLENAME_USERS}"
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TABLENAME_TASKS}"

functions:
  - ${file(routes/users.yml)}
  - ${file(routes/tasks.yml)}

resources:
  Resources:
    - ${file(config/dynamodb.yml)}
