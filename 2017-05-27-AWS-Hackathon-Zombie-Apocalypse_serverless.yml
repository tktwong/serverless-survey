service: Zombie

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 512
  timeout: 30
  region: eu-west-1
  profile: default
  role: arn:aws:iam::505939746198:role/service-role/ApiRole

functions:
  authorizer:
    handler: functions/authorize.handler
    name: ${self:service}Authorizer-${opt:stage, self:provider.stage}
    description: Login for aws hackaton

  login:
    handler: functions/login.handler
    name: ${self:service}Login-${opt:stage, self:provider.stage}
    description: Login for aws hackaton
    events:
      - http:
          path: /login
          method: post
          cors:
            origins:
              - '*'
            headers:
              - AuthToken
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token

  me:
    handler: functions/me.handler
    name: ${self:service}Me-${opt:stage, self:provider.stage}
    description: Resolving user profile
    events:
      - http:
          path: /me
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 600
            identitySource: method.request.header.AuthToken
          cors:
            origins:
              - '*'
            headers:
              - AuthToken
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token

  getallmessages:
    handler: functions/get-all-messages.handler
    name: ${self:service}GetAllMessages-${opt:stage, self:provider.stage}
    description: Resolving all messages
    events:
      - http:
          path: /get-all-messages
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 600
            identitySource: method.request.header.AuthToken
          cors:
            origins:
              - '*'
            headers:
              - AuthToken
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
  updateuser:
      handler: functions/user_update.handler
      name: ${self:service}UserUpdate-${opt:stage, self:provider.stage}
      description: Updating user profile
      events:
        - http:
            path: /me
            method: post
            authorizer:
              name: authorizer
              resultTtlInSeconds: 600
              identitySource: method.request.header.AuthToken
            cors:
              origins:
                - '*'
              headers:
                - AuthToken
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token


  friendsgetall:
    handler: functions/friends-get-all.handler
    name: ${self:service}FriendsGetAll-${opt:stage, self:provider.stage}
    description: Returns your friend profiles
    events:
      - http:
          path: /friendsgetall
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 600
            identitySource: method.request.header.AuthToken
          cors:
            origins:
              - '*'
            headers:
              - AuthToken
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token

#  contactrequest:
#    handler: functions/contactrequest.handler
#    name: ${self:service}ContactRequest-${opt:stage, self:provider.stage}
#    description: Sends contact request to add as a friend
#    events:
#      - http:
#          path: /contact-request
#          method: post
#          authorizer:
#            name: authorizer
#            resultTtlInSeconds: 600
#            identitySource: method.request.header.AuthToken
#          cors:
#            origins:
#              - '*'
#            headers:
#              - AuthToken
#              - Content-Type
#              - X-Amz-Date
#              - Authorization
#              - X-Api-Key
#              - X-Amz-Security-Token

  contactgetrequests:
    handler: functions/contactgetrequests.handler
    name: ${self:service}ContactGetRequests-${opt:stage, self:provider.stage}
    description: Returns ids who wants to add you as a friend
    events:
      - http:
          path: /contact-get-requests
          method: get
          authorizer:
            name: authorizer
            resultTtlInSeconds: 600
            identitySource: method.request.header.AuthToken
          cors:
            origins:
              - '*'
            headers:
              - AuthToken
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token


package:
  individually: true
  exclude:
    - test/**
    - .git/**
    - .vscode/**
    - .idea/**
    - yarn.lock
    - node_modules/**/README.*
    - node_modules/**/test/**

plugins:
  - serverless-plugin-webpack
