service: BetOn

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: Prod
  region: us-east-1
  memorySize: 128
  timeout: 20
  role: arn:aws:iam::651931321754:role/AwsLambdaServerless
  tag: BetOn

functions:
  Authenticate:
    handler: src/routes/UserRoute.authenticate
    description: Authenticate user
    timeout: 25
    events:
      - http: 
          path: authenticate
          method: post
          cors: true

  GetUser:
    handler: src/routes/UserRoute.getAll
    description: Get All Users
    timeout: 25
    events:
      - http: 
          path: users
          method: get
          cors: true
  GetUserById:
    handler: src/routes/UserRoute.getById
    description: Get User By Id
    timeout: 25
    events:
      - http:
          path: users/{id}
          method: get 
          cors: true
  SaveUser:
    handler: src/routes/UserRoute.save
    description:  Save User
    events:
      - http: 
          path: users
          method: post
          cors: true
  DeleteUser:
    handler: src/routes/UserRoute.delete
    description:  Delete User
    events:
      - http: 
          method: delete
          path: users/{id}
          cors: true
      
  GetGame:
    handler: src/routes/GameRoute.getAll
    description: Get All Games
    timeout: 25
    events:
      - http: 
          path: games
          method: get
          cors: true
  GetGameById:
    handler: src/routes/GameRoute.getById
    description: Get Game By Id
    timeout: 25
    events:
      - http:
          path: games/{id}
          method: get 
          cors: true
  SaveGame:
    handler: src/routes/GameRoute.save
    description:  Save Game
    events:
      - http:
          path: games
          method: post
          cors: true
  DeleteGame:
    handler: src/routes/GameRoute.delete
    description:  Delete Game
    events:
      - http: 
          method: delete
          path: games/{id}
          cors: true

  GetGroup:
    handler: src/routes/GroupRoute.getAll
    description: Get All Groups
    timeout: 25
    events:
      - http: 
          path: groups
          method: get
          cors: true
  GetGroupById:
    handler: src/routes/GroupRoute.getById
    description: Get Group By Id
    timeout: 25
    events:
      - http:
          path: groups/{id}
          method: get 
          cors: true
  SaveGroup:
    handler: src/routes/GroupRoute.save
    description:  Save Group
    events:
      - http: 
          path: groups
          method: post
          cors: true
  DeleteGroup:
    handler: src/routes/GroupRoute.delete
    description:  Delete Group
    events:
      - http: 
          method: delete
          path: groups/{id}
          cors: true

  GetLeague:
    handler: src/routes/LeagueRoute.getAll
    description: Get All Leagues
    timeout: 25
    events:
      - http: 
          path: leagues
          method: get
          cors: true
  GetLeagueById:
    handler: src/routes/LeagueRoute.getById
    description: Get League By Id
    timeout: 25
    events:
      - http:
          path: leagues/{id}
          method: get 
          cors: true
  SaveLeague:
    handler: src/routes/LeagueRoute.save
    description:  Save League
    events:
      - http: 
          path: leagues
          method: post
          cors: true
  DeleteLeague:
    handler: src/routes/LeagueRoute.delete
    description:  Delete League
    events:
      - http: 
          method: delete
          path: leagues/{id}
          cors: true

  GetRound:
    handler: src/routes/RoundRoute.getAll
    description: Get All Rounds
    timeout: 25
    events:
      - http: 
          path: rounds
          method: get
          cors: true
  GetRoundById:
    handler: src/routes/RoundRoute.getById
    description: Get Round By Id
    timeout: 25
    events:
      - http:
          path: rounds/{id}
          method: get 
          cors: true
  SaveRound:
    handler: src/routes/RoundRoute.save
    description:  Save Round
    events:
      - http: 
          path: rounds
          method: post 
          cors: true
  DeleteRound:
    handler: src/routes/RoundRoute.delete
    description:  Delete Round
    events:
      - http: 
          method: delete
          path: rounds/{id}
          cors: true

  GetTeam:
    handler: src/routes/TeamRoute.getAll
    description: Get All Teams
    timeout: 25
    events:
      - http: 
          path: teams
          method: get
          cors: true
  GetTeamById:
    handler: src/routes/TeamRoute.getById
    description: Get Team By Id
    timeout: 25
    events:
      - http:
          path: teams/{id}
          method: get 
          cors: true
  SaveTeam:
    handler: src/routes/TeamRoute.save
    description:  Save Team
    events:
      - http:
          path: teams
          method: post
          cors: true
  DeleteTeam:
    handler: src/routes/TeamRoute.delete
    description:  Delete Team
    events:
      - http: 
          method: delete
          path: teams/{id}
          cors: true
