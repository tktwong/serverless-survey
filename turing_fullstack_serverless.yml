service: turingshop
custom:
  config: ${file(config.json)}
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true
    forceInclude:
      - mysql
      - mysql2
      - sequelize
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${self:custom.config.stage}
  region: ${self:custom.config.region}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: ${self:custom.config.NODE_ENV}
    DB_DATABASE: ${self:custom.config.DB_DATABASE}
    aws_accessKeyId: ${self:custom.config.aws_accessKeyId}
    aws_secretAccessKey: ${self:custom.config.aws_secretAccessKey}
    DB_HOST: ${self:custom.config.DB_HOST}
    DB_USER: ${self:custom.config.DB_USER}
    DB_PASSWORD: ${self:custom.config.DB_PASSWORD}
    DB_PORT: ${self:custom.config.DB_PORT}
    REDIS_PORT: ${self:custom.config.REDIS_PORT}
    REDIS_HOST: ${self:custom.config.REDIS_HOST}
    privateKey: ${self:custom.config.privateKey}
  vpc:
    securityGroupIds:
      - ${self:custom.config.securityGroupID}
    subnetIds:
      - subnet-4590d17b
      - subnet-5a0b3506
      - subnet-e4e611ea
      - subnet-bd88bada
      - subnet-e7033bc9
      - subnet-0ae52847
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: "*"
functions:
  products:
    handler: server.run
    events:
      - http:
          path: api/v1/products
          method: get
      - http:
          path: api/v1/product/last
          method: get
      - http:
          path: api/v1/products/all
          method: get
      - http:
          path: api/v1/products/hottest
          method: get
      - http:
          path: api/v1/product/{product_id}
          method: get
      - http:
          path: api/v1/product/{product_id}/details
          method: get
      - http:
          path: api/v1/products/inCategory/{category_id}
          method: get
      - http:
          path: api/v1/products/inDepartment/{department_id}
          method: get
      - http:
          path: api/v1/product/{product_id}/locations
          method: get
      - http:
          path: api/v1/product/{product_id}/reviews
          method: get
      - http:
          path: api/v1/product
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/product/{product_id}/reviews
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/products/search
          method: get
      - http:
          path: api/v1/product/{product_id}
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/product/{product_id}
          method: delete
      - http:
          path: api/v1/user/login
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/user/signup
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/user/resend-code
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/user/confirm
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/admin/product
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/admin/product/{id}
          method: get
      - http:
          path: api/v1/admin/products
          method: get
      - http:
          path: api/v1/departments
          method: get
      - http:
          path: api/v1/departments/{department_id}
          method: get
      - http:
          path: api/v1/product/attributes
          method: get
      - http:
          path: api/v1/categories/values/{attribute_id}
          method: get
  attributes:
    handler: server.run
    events:
      - http:
          path: api/v1/attributes
          method: get
      - http:
          path: api/v1/attributes/{attribute_id}
          method: get
      - http:
          path: api/v1/attributes/values/{attribute_id}
          method: get
      - http:
          path: api/v1/attributes/inProduct/{product_id}
          method: get
  categories:
    handler: server.run
    events:
      - http:
          path: api/v1/categories
          method: get
      - http:
          path: api/v1/categories/{category_id}
          method: get
      - http:
          path: api/v1/categories/inProduct/{product_id}
          method: get
      - http:
          path: api/v1/categories/inDepartment/{department_id}
          method: get
  orders:
    handler: server.run
    events:
      - http:
          path: api/v1/orders
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/orders/{order_id}
          method: get
      - http:
          path: api/v1/orders/inCustomer/{inCustomer}
          method: get
      - http:
          path: api/v1/orders/inCustomer
          method: get
      - http:
          path: api/v1/shortDetail/{order_id}
          method: get
      - http:
          path: api/v1/orders/{order_id}
          method: delete
      - http:
          path: api/v1/orders
          method: delete
  shoppingcart:
    handler: server.run
    events:
      - http:
          path: api/v1/shoppingcart/generateUniqueId
          method: get
      - http:
          path: api/v1/shoppingcart/add
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/shoppingcart/{cart_id}
          method: get
      - http:
          path: api/v1/shoppingcart/update/{item_id}
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/shoppingcart/empty/{item_id}
          method: delete
      - http:
          path: api/v1/shoppingcart/moveToCart/{item_id}
          method: get
      - http:
          path: api/v1/shoppingcart/totalAmount/{cart_id}
          method: get
      - http:
          path: api/v1/shoppingcart/getSavedItem/{cart_id}
          method: get
      - http:
          path: api/v1/shoppingcart/saveForLater/{item_id}
          method: get
  customers:
    handler: server.run
    events:
      - http:
          path: api/v1/customer
          method: get
      - http:
          path: api/v1/customers
          method: get
      - http:
          path: api/v1/customer
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/customer/login
          method: post
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/customer/shippingRegion
          method: get
      - http:
          path: api/v1/customer/{customer_id}
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/customer
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/customer/address
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
      - http:
          path: api/v1/customer/creditCard
          method: put
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: false
#resources:
#  Resources:
#    RDSDatabase:
#      Type: AWS::RDS::DBInstance
#      Properties:
#        Engine : mysql
#        MasterUsername: ${self:custom.config.DB_USER}
#        MasterUserPassword: ${self:custom.config.DB_PASSWORD}
#        DBInstanceClass : db.t2.micro
#        AllocatedStorage: '5'
#        PubliclyAccessible: true
#        Tags:
#          -
#            Key: "Name"
#            Value: ${self:custom.config.DB_DATABASE}

plugins:
  - serverless-offline
  - serverless-mocha-plugin
  - serverless-webpack