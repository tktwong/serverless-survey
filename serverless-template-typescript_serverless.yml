service: "template-typescript"

plugins:
  - serverless-webpack
  - "@kalarrs/serverless-project-utils"

provider:
  name: aws
  runtime: nodejs8.10
  profile: ${file(../serverless.yml):provider.profile}
  region: ${file(../serverless.yml):provider.region}
  stage: ${file(../serverless.yml):provider.stage}
  timeout: 10
  memorySize: 128
#  vpc:
#    securityGroupIds:
#      - sg-12345678
#    subnetIds:
#      - subnet-abcd1234 # (172.31.48.0/20) | us-west-2a
#      - subnet-efgh1234 # (172.31.16.0/20) | us-west-2b
#      - subnet-ijkl1234 # (172.31.80.0/20) | us-west-2c
  environment:
#    CHANGE_VALUE: ${env:CHANGE_VALUE, file(../serverless.yml):provider.environment.CHANGE_VALUE}

functions:
  handler:
    handler: src/handler.handler
#    layers:
#      #  If the layer is defined in this yaml:
#      #  Ref name is generated by TitleCasing the layer name & appending LambdaLayer
#      - {Ref: Node_modulesLambdaLayer}
#
#      #  If the layer is NOT defined in this yaml:
#      #  Use arn with name and version
#      - arn:aws:lambda:us-west-2:123456789012:layer:node_modules:1
#      - arn:aws:lambda:us-west-2:123456789012:layer:ffmpeg:1

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/{userId}
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - sqs: arn:aws:sqs:region:XXXXXX:MyFirstQueue
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

custom:
  user: ${file(../serverless.yml):custom.user}
  localDevPort: 5000
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true
