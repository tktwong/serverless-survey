service:
  name: patchat

provider:
  name: aws
  runtime: nodejs12.x
  websocketsApiName: patchat-api
  websocketsApiRouteSelectionExpression: $request.body.action
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  environment:
    CONN_TABLE: !Ref ConnectionsTable
    MSG_TABLE: !Ref MessagesTable
    BLOCKED_TABLE: !Ref BlockedUsersTable
    API_ENDPOINT:
      Fn::Join:
        - ''
        - 
          - !Ref WebsocketsApi
          - '.execute-api.'
          - ${self:provider.region}
          - '.amazonaws.com'
          - '/'
          - ${opt:stage, self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

package:
  individually: true

custom:
  ConnectionsTableArn: { "Fn::GetAtt": ["ConnectionsTable", "Arn"] }
  ConnectionsTableIndexArn: { "Fn::Join": [ "/", [ { "Fn::GetAtt": ["ConnectionsTable", "Arn"] }, "index", "*" ] ] }
  MessagesTableArn: { "Fn::GetAtt": ["MessagesTable", "Arn"] }
  BlockedUsersTableArn: { "Fn::GetAtt": ["BlockedUsersTable", "Arn"] }

functions:
  ConnectHandler:
    handler: connect.handler
    memorySize: 128
    events:
      - websocket: $connect
    package:
      artifact: dist/packages/connect.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource:
          - arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource:
          - ${self:custom.ConnectionsTableArn}
  DisconnectHandler:
    handler: disconnect.handler
    memorySize: 128
    events:
      - websocket: $disconnect
    package:
      artifact: dist/packages/disconnect.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource:
          - arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action: 
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.ConnectionsTableArn}
  MessageHandler:
    handler: sendMessage.handler
    memorySize: 128
    events:
      - websocket:
          route: sendmessage
    package:
      artifact: dist/packages/sendMessage.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource:
          - arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource:
          - ${self:custom.MessagesTableArn}
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.ConnectionsTableArn}
          - ${self:custom.ConnectionsTableIndexArn}
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource:
          - ${self:custom.BlockedUsersTableArn}
  GetMessagesHandler:
    handler: getMessages.handler
    memorySize: 128
    events:
      - websocket:
          route: getmessages
    package:
      artifact: dist/packages/getMessages.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource:
          - arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource:
          - ${self:custom.MessagesTableArn}
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.ConnectionsTableArn}
  DeleteMessageHandler:
    handler: deleteMessage.handler
    memorySize: 128
    package:
      artifact: dist/packages/deleteMessage.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - execute-api:ManageConnections
        Resource:
          - arn:aws:execute-api:*:*:*/@connections/*
      - Effect: Allow
        Action: 
          - dynamodb:Query
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.ConnectionsTableArn}
          - ${self:custom.ConnectionsTableIndexArn}
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.MessagesTableArn}
  ManageBlockedUsersHandler:
    handler: manageBlockedUsers.handler
    memorySize: 128
    package:
      artifact: dist/packages/manageBlockedUsers.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:DeleteItem
        Resource:
          - ${self:custom.BlockedUsersTableArn}

resources:
  Resources:
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: siteId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: siteIndex
            KeySchema:
              - AttributeName: siteId
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
        BillingMode: PAY_PER_REQUEST
    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: siteId
            AttributeType: S
          - AttributeName: msgTimestamp
            AttributeType: N
        KeySchema:
          - AttributeName: siteId
            KeyType: HASH
          - AttributeName: msgTimestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    BlockedUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST