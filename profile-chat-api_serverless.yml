service:
  name: profile-chat-api

plugins:
  - serverless-webpack
  - serverless-plugin-warmup
  - serverless-domain-manager
  - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-northeast-2
  state: dev
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'lambda:InvokeFunction'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'dynamodb:*'
      Resource: '*'

functions:
  App:
    handler: src/handlers/app.handler
    events:
      - http:
          path: /
          method: GET
          cors: true
          authorizer: aws_iam
  GetUserState:
    warmup: true
    handler: src/handlers/user-state/get.handler
    events:
      - http:
          path: /users/state
          method: GET
          cors: true
          authorizer: aws_iam
  UpdateUserState:
    warmup: true
    handler: src/handlers/user-state/update.handler
    events:
      - http:
          path: /users/state
          method: PUT
          cors: true
          authorizer: aws_iam
  GetMessageHistory:
    warmup: true
    handler: src/handlers/message/get.handler
    events:
      - http:
          path: /messages
          method: GET
          cors: true
          authorizer: aws_iam
  AppendNewMessage:
    warmup: true
    handler: src/handlers/message/append.handler
    events:
      - http:
          path: /messages
          method: POST
          cors: true
          authorizer: aws_iam
  GetMessageGroup:
    warmup: true
    handler: src/handlers/message-group/get.handler
    events:
      - http:
          path: /messages/group
          method: GET
          cors: true
          authorizer: aws_iam
  SearchMessageGroup:
    warmup: true
    handler: src/handlers/message-group/search.handler
    events:
      - http:
          path: /messages/group/search
          method: GET
          cors: true
          authorizer: aws_iam
  CreateNewMessageGroup:
    warmup: true
    handler: src/handlers/message-group/create.handler
    events:
      - http:
          path: /messages/group
          method: POST
          cors: true
          authorizer: aws_iam
  DeleteMessageGroup:
    warmup: true
    handler: src/handlers/message-group/delete.handler
    events:
      - http:
          path: /messages/group
          method: DELETE
          cors: true
          authorizer: aws_iam

custom:
  warmup:
    schedule: rate(5 minutes)
    cleanFolder: false
    memorySize: 128
    timeout: 30
    prewarm: true
  customDomain:
    domainName: profile-chat-api.anpaul0615.com
    stage: ${self:provider.stage}
    certificateName: '*.anpaul0615.com'
    createRoute53Record: true