service: url
frameworkVersion: '2'
provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DYNAMODB_URL_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    NODE_CONFIG_ENV: ${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_URL_TABLE}"
functions:
  api:
    handler: src/lambda.handler
    memorySize: 256
    timeout: 3
    events:
      - httpApi: '*'
resources:
  Resources:
    UrlsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: PK
            AttributeType: S
        KeySchema:
          -
            AttributeName: PK
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_URL_TABLE}
