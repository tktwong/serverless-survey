# NOTE: update this with your service name
service: lyrebird

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:497788934955:*"
    

functions:
  create:
    handler: functions/create.main
    events:
      - http:
          path: images
          method: post
          cors: true
          authorizer: aws_iam
  create-canvas:
    handler: functions/create-canvas.main
    events:
      - http:
          path: canvas
          method: post
          cors: true
          authorizer: aws_iam
  create-user:
    handler: functions/create-user.main
    events:
      - http:
          path: user
          method: post
          cors: true
          authorizer: aws_iam
  create-game:
    handler: functions/create-game.main
    events:
      - http:
          path: game
          method: post
          cors: true
          authorizer: aws_iam
  create-game-users:
    handler: functions/create-game-users.main
    events:
      - http:
          path: game-user
          method: post
          cors: true
          authorizer: aws_iam
  create-game-users-1:
    handler: functions/create-game-users-1.main
    events:
      - http:
          path: game-user-1
          method: post
          cors: true
          authorizer: aws_iam
  get: 
    handler: functions/get.main
    events:
      - http:
          path: images/{id}
          method: get
          cors: true
          authorizer: aws_iam 
  get-canvas:
    handler: functions/get-canvas.main
    events:
      - http:
          path: canvas/{id}
          method: get
          cors: true
          authorizer: aws_iam
  get-user: 
    handler: functions/get-user.main
    events:
      - http:
          path: user/{id}
          method: get
          cors: true
          authorizer: aws_iam 
  get-game:
    handler: functions/get-game.main
    events:
      - http:
          path: game/{id}
          method: get
          cors: true
          authorizer: aws_iam
  get-game-user:
    handler: functions/get-game-user.main
    events:
      - http:
          path: game-user/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: functions/list.main
    events: 
      - http:
          path: images
          method: get
          cors: true
          authorizer: aws_iam
  list-canvas:
    handler: functions/list-canvas.main
    events:
      - http:
          path: canvas
          method: get
          cors: true
          authorizer: aws_iam
  list-user:
    handler: functions/list-user.main
    events:
      - http:
          path: user
          method: get
          cors: true
          authorizer: aws_iam
  list-game-user:
    handler: functions/list-game-user.main
    events:
      - http:
          path: game-user
          method: get
          cors: true
          authorizer: aws_iam
  update: 
    handler: functions/update.main
    events:
      - http:
          path: images/{id}
          method: put
          cors: true
          authorizer: aws_iam 
  update-canvas: 
    handler: functions/update-canvas.main
    events:
      - http:
          path: canvas/{id}
          method: put
          cors: true
          authorizer: aws_iam
  update-user: 
    handler: functions/update-user.main
    events:
      - http:
          path: user/{id}
          method: put
          cors: true
          authorizer: aws_iam
  update-game: 
    handler: functions/update-game.main
    events:
      - http:
          path: game/{id}
          method: put
          cors: true
          authorizer: aws_iam
  update-game-user: 
    handler: functions/update-game-user.main
    events:
      - http:
          path: game-user/{id}
          method: put
          cors: true
          authorizer: aws_iam
  update-game-user1: 
    handler: functions/update-game-user1.main
    events:
      - http:
          path: game-user-1/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete: 
    handler: functions/delete.main
    events: 
      - http: 
          path: images/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  delete-canvas: 
    handler: functions/delete-canvas.main
    events: 
      - http: 
          path: canvas/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  delete-game: 
    handler: functions/delete-game.main
    events: 
      - http: 
          path: game/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  delete-game-user: 
    handler: functions/delete-game-users.main
    events: 
      - http: 
          path: game-user/{id}
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}