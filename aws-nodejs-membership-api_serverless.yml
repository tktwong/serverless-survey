service: aws-nodejs-membership-api

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 5
  endpointType: regional
  apiGateway:
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  environment:
    NODE_PATH: '/:/opt/node_modules'
    IS_OFFLINE: ${self:custom.isOffline}
    # MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    CONFIG_USER_TABLE: ${self:custom.UserTable.name}
    CONFIG_USER_TABLE_OFFLINE: ${self:custom.offlineTableName.membership}
    CONFIG_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-url}
    HASH_KEY_PREFIX_USER: ${file(resources/.config.yml):USER_KEY}
    SORT_KEY_USER_VALUE: ${file(resources/.config.yml):USER_RANGE}
    HASH_KEY_PREFIX_MEMBERSHIP: ${file(resources/.config.yml):MS_KEY}
    SORT_KEY_MEMBERSHIP_VALUE: ${file(resources/.config.yml):MS_RANGE}
    SORT_KEY_PREFIX_MEMBERSHIP_MEMBER: ${file(resources/.config.yml):MSM_RANGE}
    SORT_KEY_PREFIX_MEMBERSHIP_EVENT: ${file(resources/.config.yml):EVENT_RANGE}
  iamRoleStatements:
    - ${file(resources/iam/iamMembershipTable.yml):MembershipTableIAM}
    # - ${file(resources/iam/iamMailQueue.yml):MailQueueIAM}
custom:
  # authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  # MailQueue:
    # arn: ${cf:aige-notification-service-${self:provider.stage}.MailQueueArn}
    # url: ${cf:aige-notification-service-${self:provider.stage}.MailQueueUrl}
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name
  # Use  arn and name as references in Iam policy
  UserTable:
    arn: !GetAtt UserTable.Arn
    name: !Ref UserTable
  # can be deleted.........
  offlineTableName:
    membership: aige-membership-${self:provider.stage}
  endpoints:
    dynamodb-url: 'http://localhost:8000'
  isOffline: false
  #............... can be deleted
  dynamodb:
    start:
      migrate: true
      seed: true
    stages:
      - dev
    seed:
      domain:
        sources:
          - table:  ${self:custom.offlineTableName.membership}
            rawsources: [test/testdata/seeddata/aige-user.json]

functions:
  - ${file(resources/lambda/user/lambdas.yml)}
  - ${file(resources/lambda/membership/lambdas.yml)}
  - ${file(resources/lambda/event/lambdas.yml)}
  - ${file(resources/lambda/membershipMember/lambdas.yml)}

resources:
  Resources:
    UserTable: ${file(resources/dynamodb/user/dynamodb.yml):UserTable}

layers:
  MiddyDependencies:
    path: middy-layer
    description: Middy libraries
    package:
      include:
        - node_modules/**
package:
  exclude:
    - .dynamodb/**
    - .serverless/**
    - middy-layer/**
    - testdata/**
    - testqueries/**

plugins:
  - serverless-dynamodb-local
  - serverless-pseudo-parameters
  - serverless-offline # should be last in list
