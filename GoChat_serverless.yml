service: goChatServices

frameworkVersion: "=1.2.1"

provider:
  name: aws
  runtime: python2.7
  stage: dev
  region: ap-southeast-1
  cfLogs: true
  memorySize: 512
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Describetable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-1:*:*"

plugins:
  - serverless-wsgi

functions:
  api:
    handler: wsgi.handler
    events:
      - http:
          path: registerUser
          method: post
          integration: lambda-proxy
      - http:
          path: removeUser
          method: get
          integration: lambda-proxy
      - http:
          path: setOnlineStatus
          method: post
          integration: lambda-proxy
      - http:
          path: newMessage
          method: post
          integration: lambda-proxy
      - http:
          path: getNewMessages
          method: get
          integration: lambda-proxy
      - http:
          path: checkUser
          method: post
          integration: lambda-proxy
      - http:
          path: getUsers
          method: get
          integration: lambda-proxy

resources:
  Resources:
    goChatUsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: goChatUsers-${opt:stage}


custom:
  wsgi:
    app: api.app
