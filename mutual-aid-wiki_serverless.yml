service:
  name: lambdas
# app and org for use with dashboard.serverless.com
# app: mutual-aid-wiki
# org: tapjay

custom:
  tables:
    GROUPS_TABLE: ${self:provider.stage}-groups10
    ACTIVE_TOKENS: ${self:provider.stage}-active-tokens
    LOCATION_SEARCHES_TABLE: ${self:provider.stage}-location-search
  output:
    file: ../stack.json
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.tables.GROUPS_TABLE}
            sources:
              - ./migrations/${self:provider.stage}-seed.json
  serverless-offline:
    httpPort: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-stack-output

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'eu-west-2'}
  stage: ${opt:stage, 'local'}
  #profile: covid
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    STAGE: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    # Tables
    GROUPS_TABLE: ${self:custom.tables.GROUPS_TABLE}
    LOCATION_SEARCHES_TABLE: ${self:custom.tables.LOCATION_SEARCHES_TABLE}
    ACTIVE_TOKENS: ${self:custom.tables.ACTIVE_TOKENS}
    # Google
    GOOGLE_API_KEY: ${env:GOOGLE_API_KEY, file(env.json):GOOGLE_API_KEY}
    SPREADSHEET_ID: ${env:SPREADSHEET_ID, file(env.json):SPREADSHEET_ID}
    SHEET_ID: ${env:SHEET_ID, file(env.json):SHEET_ID}
    GOOGLE_PRIVATE_KEY: ${env:GOOGLE_PRIVATE_KEY, file(env.json):GOOGLE_PRIVATE_KEY}
    GOOGLE_CLIENT_EMAIL: ${env:GOOGLE_CLIENT_EMAIL, file(env.json):GOOGLE_CLIENT_EMAIL}
    # Airtable
    AIRTABLE_KEY: ${env:AIRTABLE_KEY, file(env.json):AIRTABLE_KEY}
    AIRTABLE_ATTACH_EMAIL_BASE: ${env:AIRTABLE_ATTACH_EMAIL_BASE, file(env.json):AIRTABLE_ATTACH_EMAIL_BASE}
    AIRTABLE_EXTERNAL_DATA_BASE: ${env:AIRTABLE_EXTERNAL_DATA_BASE, file(env.json):AIRTABLE_EXTERNAL_DATA_BASE}
    # other
    API_ENDPOINT: ${env:API_ENDPOINT, file(env.json):API_ENDPOINT}
    CLIENT_ENDPOINT: ${env:CLIENT_ENDPOINT, file(env.json):CLIENT_ENDPOINT}
    SEND_GRID_API_KEY: ${env:SEND_GRID_API_KEY, file(env.json):SEND_GRID_API_KEY}
    SLACK_API_TOKEN: ${env:SLACK_API_TOKEN, file(env.json):SLACK_API_TOKEN}
    JWT_SECRET: ${env:JWT_SECRET, file(env.json):JWT_SECRET}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - { 'Fn::GetAtt': ['ExportDB', 'Arn'] } #you will also see the logical IDs below where they are provisioned
        - { 'Fn::GetAtt': ['DynamoDbLocationSearches', 'Arn'] }
        - { 'Fn::GetAtt': ['DynamoDbActiveTokens', 'Arn'] }

functions:
  - ${file(./services/external-data/functions.yml)}
  - ${file(./services/groups/functions.yml)}
  - ${file(./services/google/functions.yml)}
  - ${file(./services/searches/functions.yml)}
  - ${file(./services/support/functions.yml)}
  - ${file(./services/info/functions.yml)}

resources:
  Resources:
    ExportDB:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tables.GROUPS_TABLE}
    DynamoDbLocationSearches:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tables.LOCATION_SEARCHES_TABLE}
    DynamoDbActiveTokens:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tables.ACTIVE_TOKENS}
