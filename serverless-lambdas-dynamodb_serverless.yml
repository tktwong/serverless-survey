service: sls-api-test
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-dynamodb-local
custom:
  tableName: "people-table-${self:provider.stage}"
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["PeopleDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

stage: ${opt:stage, 'dev'}
region: us-east-1
profile: default
memorySize: 256

package:
  exclude:
    - node_modules/**
    - image/**
    - postman/**

functions:
  listarPersonas:
    handler: src/controllers/PersonaController.listarPersonas
    description: "listar personas"
    events:
      - http:
          path: /swapi/personas
          method: GET
          cors: true

  crearPersona:
    handler: src/controllers/PersonaController.crearPersona
    description: "crear persona"
    events:
      - http:
          path: /swapi/personas
          method: POST
          cors: true
  
  eliminarPersona:
    handler: src/controllers/PersonaController.eliminarPersona
    description: "crear persona"
    events:
      - http:
          path: /swapi/personas/{id}
          method: DELETE
          cors: true

resources:
  - ${file(resources/dynamodb-table.yml)}
