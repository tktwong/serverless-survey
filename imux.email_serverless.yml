service: imux
plugins:
  - serverless-domain-manager
custom:
  prod:
    dev: false
    prod: true
  customDomain:
    domainName: ${env:DOMAIN, 'imux.email'}
    enabled: ${self:custom.prod.${self:custom.stage}}
  emails: ${env:EMAILS_BUCKET, '${self:service}-${self:custom.stage}-emails'}
  owner: ${env:OWNER_EMAIL}
  stage: ${opt:stage, '${self:provider.stage}'}
provider:
  name: aws
  runtime: go1.x
  environment:
    ACCOUNTS_TABLE: !Ref accounts
    DOMAIN: ${self:custom.customDomain.domainName}
    INTRO_TEMPLATE: !Ref intro
    ORDERS_TABLE: !Ref orders
    RECEIVE_RULE: !Ref receive
    RULESET_NAME: !Ref ruleset
    STRIPE_PRIVATE_KEY: ${env:STRIPE_PRIVATE_KEY}
    STRIPE_PUBLIC_KEY: ${env:STRIPE_PUBLIC_KEY}
    STRIPE_WEBHOOK_SECRET: ${env:STRIPE_WEBHOOK_SECRET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: !GetAtt accounts.Arn
    - Effect: Allow
      Action: s3:GetObject
      Resource: arn:aws:s3:::${self:custom.emails}/*
    - Effect: Allow
      Action: s3:ListBucket
      Resource: arn:aws:s3:::${self:custom.emails}
    - Effect: Allow
      Action: kms:Decrypt
      Resource: '*'
    - Effect: Allow
      Action: ses:SendBulkTemplatedEmail
      Resource: !Join ['', ['arn:aws:ses:${self:provider.region}:', !Ref AWS::AccountId, ':identity/${self:custom.customDomain.domainName}']]
package:
  artifact: imux.zip
functions:
  web:
    handler: imux
    events:
      - http: ANY /
      - http: ANY /{any+}
  forward:
    handler: imux
    events:
      - s3:
          bucket: ${self:custom.emails}
          event: s3:ObjectCreated:*
          existing: true
  accounts:
    handler: imux
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt accounts.StreamArn
resources:
  Resources:
    policy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.emails}
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: s3:PutObject
              Resource: arn:aws:s3:::${self:custom.emails}/*
              Sid: ${self:service}-${self:custom.stage}-AllowSESPuts
              Principal:
                Service: ses.amazonaws.com
              Condition:
                StringEquals:
                  aws:Referer: !Ref AWS::AccountId
    ruleset:
      Type: AWS::SES::ReceiptRuleSet
      Properties:
        RuleSetName: ${self:service}-${self:custom.stage}-ruleset
    help:
      Type: AWS::SES::ReceiptRule
      Properties:
        RuleSetName: !Ref ruleset
        Rule:
          Enabled: true
          Recipients:
            - help@imux.email
          Actions:
            - AddHeaderAction:
                HeaderName: To
                HeaderValue: ${self:custom.owner}
            - StopAction:
                Scope: RuleSet
    receive:
      Type: AWS::SES::ReceiptRule
      Properties:
        RuleSetName: !Ref ruleset
        After: !Ref help
        Rule:
          Enabled: true
          Recipients:
            - dummy@imux.email
          Actions:
            - S3Action:
                BucketName: ${self:custom.emails}
                KmsKeyArn: !Join ['', ['arn:aws:kms:${self:provider.region}:', !Ref AWS::AccountId, ':alias/aws/ses']]
    intro:
      Type: AWS::SES::Template
      Properties:
        Template:
          SubjectPart: Subscription Notification
          HtmlPart: |
            <p>
            Hello,
            </p>
            <p>
            You have been added as a recipient of shared emails via
            <a target="_blank" rel="noopener noreferrer" href="https://${self:custom.customDomain.domainName}">${self:custom.customDomain.domainName}</a>.
            <br>
            To ensure that you receive messages as reliably as possible,
            please add <b>{{id}}@${self:custom.customDomain.domainName}</b> to your address book.
            <br>
            If you believe that you should not have received this notification, click
            <a target="_blank" rel="noopener noreferrer" href="https://${self:custom.customDomain.domainName}/unsubscribe?id={{id}}&token={{token}}">here</a>
            to unsubscribe.
            </p>
            <p>
            This is an automated message, please do not reply.
            </p>
    accounts:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TimeToLiveSpecification:
          AttributeName: expires
          Enabled: true
    orders:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
