service: oinp-notifier

provider:
  name: aws
  runtime: nodejs12.x
  # Memory required to run headless Chrome
  memorySize: 1536
  stage: ${opt:stage, 'dev'}
  # Feel free to change the deployment region
  region: us-east-1
  environment:
    DDB_TABLE_NAME: ${self:custom.tableName}
    S3_BUCKET_NAME: ${self:custom.bucketName}
    OINP_TOPIC_ARN: !Ref OinpSnsTopic
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:PutItem
      Resource: !GetAtt DynamoDBTable.Arn
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: !Join ["/", [!GetAtt S3Bucket.Arn, "*"]]
    - Effect: Allow
      Action: s3:ListBucket
      Resource: !GetAtt S3Bucket.Arn
    - Effect: Allow
      Action: SNS:Publish
      Resource: !Ref OinpSnsTopic

custom:
  # DynamoDB table name
  tableName: ${self:service}-${self:provider.stage}
  # S3 bucket name (used to store screenshots)
  # [Action required] You need to change the bucket name to make it globally unique
  # For example, you can append some random characters to the end of it like this `${self:service}-${self:provider.stage}-ka2fs`
  bucketName: ${self:service}-${self:provider.stage}

functions:
  oinpNotifier:
    # Overwrite the default lambda timeout
    timeout: 30
    handler: index.handler
    # EventBridge triggers the lambda every minute
    events:
      - eventBridge:
          schedule: rate(1 minute)

# Extra AWS resources we need to provision
resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tableName}
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        BillingMode: PROVISIONED
        # This provisioned throughput is under AWS Free Tier
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    S3Bucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.bucketName}
        # Turn on AES256 encryption for data at rest in S3
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
    OinpSnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        # Use KMS to encrypt message
        KmsMasterKeyId: alias/aws/sns
        # You can extend this `Subscription` list to invite more people
        # subscribe to this topic even with different notification protocols
        Subscription:
          - Endpoint: nichenjie2013@gmail.com
            Protocol: email
          # - Endpoint: 6471234567
          #   Protocol: sms
        TopicName: oinp
