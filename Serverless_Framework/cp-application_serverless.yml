service: cp-backend

# Use serverless-webpack plugin to transpile ES6/ES7
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: ap-southeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role

  # Order Functions
  create-orders:
    handler: functions/backend/orders/create-orders.main
    events:
      - http:
          path: orders
          method: post
          cors: true

  delete-orders:
    handler: functions/backend/orders/delete-orders.main
    events:
      - http:
          path: orders/{id}
          method: delete
          cors: true

  get-orders:
    handler: functions/backend/orders/get-orders.main
    events:
      - http:
          path: orders/{id}
          method: get
          cors: true

  list-orders:
    handler: functions/backend/orders/list-orders.main
    events:
      - http:
          path: orders
          method: get
          cors: true

  query-orders:
    handler: functions/backend/orders/query-orders.main
    events:
      - http:
          path: orders/query
          method: get
          cors: true

  update-orders:
    handler: functions/backend/orders/update-orders.main
    events:
      - http:
          path: orders/{id}
          method: put
          cors: true

  # Return Functions
  create-returns:
    handler: functions/backend/returns/create-returns.main
    events:
      - http:
          path: returns
          method: post
          cors: true

  delete-returns:
    handler: functions/backend/returns/delete-returns.main
    events:
      - http:
          path: returns/{id}
          method: delete
          cors: true

  get-returns:
    handler: functions/backend/returns/get-returns.main
    events:
      - http:
          path: returns/{id}
          method: get
          cors: true

  list-returns:
    handler: functions/backend/returns/list-returns.main
    events:
      - http:
          path: returns
          method: get
          cors: true

  query-returns:
    handler: functions/backend/returns/query-returns.main
    events:
      - http:
          path: returns/query
          method: get
          cors: true

  update-returns:
    handler: functions/backend/returns/update-returns.main
    events:
      - http:
          path: returns/{id}
          method: put
          cors: true
