service: ${ file(./config.json):global.app_id }

plugins:
  - serverless-offline
  - serverless-plugin-scripts

provider:
  stage: ${ opt:stage }
  name: aws
  runtime: nodejs6.10
  region: ${ file(./config.json):global.aws_region }
  profile: ${ file(./env.yml):aws_profile }
  deploymentBucket:
    name: fgm-serverless-deployments
  role: arn:aws:iam::189318021596:role/FGM-Lambda-Role
  environment: ${ file(./env.yml):${ opt:stage }}

custom:
  s3BucketName: ${ file(./config.json):global.aws_s3_bucket }-${ self:provider.stage }
  serverless-offline:
    port: 4000
    prefix: dev-api
  scripts:
    commands:
      upload-assets: 'aws --profile ${ self:provider.profile } --region ${ self:provider.region } s3 cp --recursive --acl public-read ./dist/static s3://${ self:custom.s3BucketName }'

package:
  exclude:
    - ./**
  include:
    - dist/lambda/*

functions:
  webserver:
    handler: dist/lambda/server-bundle.awsServerlessProxy
    timeout: 3
    events:
      - http: GET /
      - http: GET /{proxy+}
  signup:
    handler: dist/lambda/functions-bundle.signup
    timeout: 10
    events:
      - http:
          path: /signup
          method: post
          cors: true
  donate:
    handler: dist/lambda/functions-bundle.donate
    timeout: 10
    events:
      - http:
          path: /donate
          method: post
          cors: true

resources:
  Resources:
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3BucketName}
        WebsiteConfiguration:
          IndexDocument: index.html
        VersioningConfiguration:
          Status: Enabled
