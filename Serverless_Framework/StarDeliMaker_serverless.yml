service: star-deli-maker

provider:
  name: aws
  region: ap-northeast-1
  runtime: provided
  deploymentBucket: sls-deps
  stage: ${opt:stage, 'stg'}
  release: beta
  environment:
    # Laravel environment variables
    APP_STORAGE: "/tmp"
    ENV: ${opt:stage, self:provider.stage}
    RELEASE_VERSION: ${opt:release, self:provider.release}
    BREF_BINARY_RESPONSES: 1
    SESSION_DOMAIN: ${self:custom.sessionDomain-${opt:release, self:provider.release}}

plugins:
  - ./vendor/bref/bref
  - serverless-domain-manager
  - serverless-s3-sync
package:
  exclude:
    - node_modules/**
    - public/storage
    - storage/**
    - tests/**

custom:
  s3Sync:
    - bucketName: ${self:custom.serviceName}-${opt:stage, self:provider.stage}-asset # required
      localDir: public # required
  serviceName-beta: star-deli-maker-beta
  serviceName-stable: star-deli-maker
  sessionDomain-beta: .somaseki.net
  sessionDomain-stable: .somaseki.net
  serviceName: ${self:custom.serviceName-${opt:release, self:provider.release}}
  domainEnabled-beta: false
  domainEnabled-stable: false
  domainName-prod: "somaseki.net" # domain name
  domainName-stg: "stg.somaseki.net"
  customDomain:
    domainName: ${self:custom.domainName-${opt:stage, self:provider.stage}}
    basePath: ""
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: true
    certificateName: "somaseki.net"
    endpointType: "edge"
    securityPolicy: tls_1_2
    enabled: ${self:custom.domainEnabled-${opt:release, self:provider.release}}

functions:
  website:
    handler: public/index.php
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-73-fpm}
    events:
      - http: "ANY /"
      - http: "ANY /{proxy+}"

  artisan:
    handler: artisan
    timeout: 120 # in seconds
    layers:
      - ${bref:layer.php-73} # PHP
      - ${bref:layer.console} # The "console" layer

resources:
  Resources:
    StaticContentS3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.serviceName}-${opt:stage, self:provider.stage}-asset
    # GatewayResponse:
    #   Type: "AWS::ApiGateway::GatewayResponse"
    #   Properties:
    #     ResponseParameters:
    #       gatewayresponse.header.WWW-Authenticate: "'Basic'"
    #     ResponseType: UNAUTHORIZED
    #     RestApiId:
    #       Ref: "ApiGatewayRestApi"
    #     StatusCode: "401"
