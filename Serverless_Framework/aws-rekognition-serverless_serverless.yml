# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: suzhiyam-image-recog # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  dynamodb_table: suzhiyam
  bucket: suzhiyam-image-recog
  region: eu-west-1
  stage: dev
  timeout: 240
  environment:
    dynamodb_table: suzhiyam 


#you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - s3:ListBucket
      - s3:PutObject
      - s3:GetObject
    Resource: "arn:aws:s3:::${self:provider.bucket}/*"
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:eu-west-1:697545129987:table/suzhiyam"
  - Effect: Allow
    Action: 
      - rekognition:CompareFaces
      - rekognition:IndexFaces
      - rekognition:DetectFaces
      - rekognition:DetectLabels
      - rekognition:ListCollections
      - rekognition:ListFaces
      - rekognition:SearchFaces
      - rekognition:SearchFacesByImage
    Resource: "*"
        
# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  handleTrainingData:
    handler: handler.handleTrainingData
    events:
      - http:
          path: handleTrainingData
          method: get
          'cors': true
  addImagesToFacesCollection:
     handler: handler.addImagesToFacesCollection
     events: 
      - http:
          path: addImagesToFacesCollection
          method: get
          cors: true
  searchFaceInCollections:
     handler: handler.searchFaceInCollection
     events: 
      - http:
          path: searchFaceInCollection
          method: get
          cors: true
  createFaceCollection:
     handler: handler.createFaceCollection
     events: 
      - http:
          path: createFaceCollection
          method: get
          cors: true

resources:
  Resources:
    suzhiyam:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.dynamodb_table}
plugins:
  - serverless-offline
