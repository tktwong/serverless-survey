service:
  name: tinypriv-aws-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  myStage: ${opt:stage, self:provider.stage}
  dynamodb:
    stages:
      - dev
      - testing
      - staging
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  environment:
    tables:
      dev: secrets-dev
      testing: secrets-staging
      staging: secrets-staging
      prod: secrets
    

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  stage: dev
  region: eu-central-1
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    TABLE_NAME: ${self:custom.environment.tables.${self:custom.myStage}}

functions:
  hello:
    handler: ./src/handler.hello
    events:
      - http:
          method: get
          path: hello
  postSecret:
    handler: ./src/handler.postSecret
    events:
      - http:
          method: post
          path: postSecret

resources:
  Resources:
    secrets:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.environment.tables.${self:custom.myStage}}
        AttributeDefinitions:
          - 
            AttributeName: key
            AttributeType: S
        KeySchema:
          -
            AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
