service: giv-backend
frameworkVersion: '2'

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  region: ap-northeast-1
  environment:
    FOO: bar
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: '*'

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      seed: true
    seed:
      dev:
        sources:
          - table: users
            sources: [./__mocks__/users.json]
          - table: invites
            sources: [./__mocks__/invites.json]
          - table: areas
            sources: [./__mocks__/areas.json]
          - table: skills
            sources: [./__mocks__/skills.json]

functions:
  api:
    handler: src.handler
    events:
      - http:
          path: '{any+}'
          method: ANY

resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: facebookId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: fb_index
            KeySchema:
              - AttributeName: facebookId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    invites:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: invites
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    areas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: areas
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    skills:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: skills
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    times:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: times
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    thanksCards:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: thanksCards
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    analyticsEvents:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: analyticsEvents
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
