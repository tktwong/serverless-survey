service: icecream-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  stage: dev
  region: us-east-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: <your issuer url here>
        audience: https://auth0-jwt-authorizer
package:
  artifact: target/${self:service}-${self:provider.stage}.jar
functions:
  ListFlavors:
    handler: com.serverless.ListFlavors
    events:
      - httpApi:
          path: /flavors
          method: get
  ListOrders:
    handler: com.serverless.ListOrders
    events:
      - httpApi:
          path: /orders
          method: get
          authorizer: serviceAuthorizer
  GetOrder:
    handler: com.serverless.GetOrder
    events:
      - httpApi:
          path: /orders/{id}
          method: get
          authorizer: serviceAuthorizer
  CreateOrder:
    handler: com.serverless.CreateOrder
    events:
      - httpApi:
          path: /orders
          method: post
          authorizer: serviceAuthorizer
  UpdateOrder:
    handler: com.serverless.UpdateOrder
    events:
      - httpApi:
          path: /orders/{id}
          method: put
          authorizer: serviceAuthorizer
  DeleteOrder:
    handler: com.serverless.DeleteOrder
    events:
      - httpApi:
          path: /orders/{id}
          method: delete     
          authorizer: serviceAuthorizer     
resources:
  Resources:
    ordersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: orders
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
