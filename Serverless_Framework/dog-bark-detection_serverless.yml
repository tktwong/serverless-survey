service: processor

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-southeast-2
  timeout: 600
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
    - Effect: Allow
      Action: 
        - sqs:GetQueueUrl
        - sqs:SendMessage
      Resource: "*"
  environment:
    QUEUE_NAME: ${self:custom.queue}

functions:
  process:
    handler: handler.process
    events:
      - s3: 
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .mp4
    layers:
      - {Ref: FfmpegLambdaLayer}

layers:
  ffmpeg:
    path: layer

custom:
  bucket: bark-detector-home-recordings
  queue: bark-detector
  table: bark-detector

resources:
  Resources:
    BarkDetectorQueue:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: ${self:custom.queue}
    BarkDetectorDynamo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.table}
        AttributeDefinitions:
          - AttributeName: deviceId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: deviceId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST