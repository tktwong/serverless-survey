service: ${env:APP_ID}-toggles-io-client

frameworkVersion: ">=1.2.0 <2.0.0"

plugins:
  - serverless-single-page-app-plugin

custom:
  s3Bucket: toggles-io-client.${env:STAGE}.${env:APP_ID}
  s3LocalPath: build

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${env:STAGE}
  region: ${env:REGION}

resources:
  Resources:
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.s3Bucket}/*
    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.s3Bucket}.s3-website.${self:provider.region}.amazonaws.com
              Id: WebApp
              CustomOriginConfig:
                HTTPPort: 80
                OriginProtocolPolicy: http-only
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: WebApp
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            CloudFrontDefaultCertificate: 'true'


  Outputs:
    WebAppS3BucketOutput:
      Value:
        'Fn::GetAtt': [ WebAppS3Bucket, DomainName ]
    WebAppCloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [ WebAppCloudFrontDistribution, DomainName ]
