# Much of the below related to deployment should be setup in a local
# `serverless-local.yml` file and not committed back to this repository.
# You may *copy* `serverless-local-example.yml` included in this repository
# and rename it to match the below custom directive—just make sure you
# don't commit your changes back to the master repository.
#

# For full config options, check the docs:
#    docs.serverless.com
#


# Pin to only deploy specified Serverless versions
# frameworkVersion: ">=1.0.0 <2.0.0"
frameworkVersion: "<2.0.0"

custom:
  config: ${file(serverless-local.yml)}
  apigwBinary:
    types:
      - '*/*'

service: ${self:custom.config.service}

provider:
  name: aws
  runtime: nodejs8.10
  # once ImageMagick library can be built for it: `runtime: nodejs10.x` will work
  stage: ${opt:stage, 'dev'}
  # memory size must be 128 or greater;
  # default AWS setting is 1024 (as of this writing); 
  # the less you use, the cheaper the rate—see https://aws.amazon.com/lambda/pricing/
  # 384 works for generating 300x300 images but not 600x600
  # 640 is good up through 900x900 (the maximum supported _letter generation_ size; though this can be changed in code)
  memorySize: 640
  timeout: 15
  versionFunctions: false

  region: ${opt:region, self:custom.config.region}
  endpointType: REGIONAL
  deploymentBucket:
    name: ${self:custom.config.deployment-bucket}

plugins:
  - serverless-webpack
  - serverless-apigw-binary

functions:

  image:
    handler: handler.image
    name: ${self:service}-image-${self:provider.stage}
    role: ${self:custom.config.iam-role}
    environment:
      BUCKET: ${self:custom.config.image-bucket}
    memorySize: 640
    timeout: 15
    events:
      - http:
          method: get
          path: img/{dir}/{file+}
          request:
            parameters:
              paths:
                dir: true
                file: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
