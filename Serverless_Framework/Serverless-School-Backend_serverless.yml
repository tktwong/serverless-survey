org: akinbamizacheus
service: abc

plugins:
  - serverless-python-requirements
  - serverless-wsgi
custom:
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.6
  stage: prod
  region: us-east-2
  profile: smartpy
  environment:
    ACCESS_KEY: ${env:ACCESS_KEY}
    SECRETE_KEY: ${env:SECRETE_KEY}
    BUCKET: ${env:BUCKET}
    REGION: ${env:REGION}
    EMAIL: ${env:EMAIL}
    PASSWORD: ${env:PASSWORD}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: 'arn:aws:s3:::abi-blog-images/*'

functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'


  login:
    handler: wsgi.handler
    events:
      - http:
          path: api/login
          method: post
          cors: true

  register:
    handler: wsgi.handler
    events:
      - http:
          path: api/register
          method: any
          cors: true


  logout:
    handler: wsgi.handler
    events:
      - http:
          path: api/logout/access
          method: post
          cors: true

  refresh_logout:
    handler: wsgi.handler
    events:
      - http:
          path: api/logout/refresh
          method: post
          cors: true


  refresh_token:
    handler: wsgi.handler
    events:
      - http:
          path: api/token/refresh
          method: post
          cors: true

  secrete:
    handler: wsgi.handler
    events:
      - http:
          path: api/secret
          method: get
          cors: true


  users:
    handler: wsgi.handler
    events:
      - http:
          path: api/users
          method: any
          cors: true

  user_detail:
    handler: wsgi.handler
    events:
      - http:
          path: api/users/{id}
          method: any
          cors: true

  posts:
    handler: wsgi.handler
    events:
      - http:
          path: api/posts
          method: any
          cors: true

  blog_image:
    handler: wsgi.handler
    events:
      - http:
          path: api/image/upload
          method: post
          cors: true

  contacts:
    handler: wsgi.handler
    events:
      - http:
          path: api/contacts
          method: any
          cors: true

  statistics:
    handler: wsgi.handler
    events:
      - http:
          path: api/statistics
          method: get
          cors: true

  subscriptions:
    handler: wsgi.handler
    events:
      - http:
          path: api/subscriptions
          method: any
          cors: true

  post_detail:
    handler: wsgi.handler
    events:
      - http:
          path: api/posts/{id}
          method: any
          cors: true

  testimonies:
    handler: wsgi.handler
    events:
      - http:
          path: api/testimonies
          method: any
          cors: true

  testimony_detail:
    handler: wsgi.handler
    events:
      - http:
          path: api/testimonies/{id}
          method: any
          cors: true

  # upload_image:
  #   handler: wsgi.handler
  #   events:
  #     - http:
  #       path: api/image/upload
  #       method: post
  #       cors: true

# Resources:
#   ResizedImages:
#     Type: AWS::S3::Bucket
#     Properties:
#       BucketName: abi-blog-images

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: abi-blog-images
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"
  

