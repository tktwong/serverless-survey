service: talktv

frameworkVersion: ">=1.1.0 <2.0.0"

package:
  exclude:
    - node_modules/**

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-stack-output

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-2
  stage: dev
  environment:
    PREFIX: ${self:service}-${opt:stage, self:provider.stage}
  logs:
    websocket: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - execute-api:ManageConnections
        - execute-api:Invoke
      Resource:
        - arn:aws:execute-api:${opt:region, self:provider.region}:*:**/@connections/*
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: 
        - Fn::GetAtt:
            - Connections
            - Arn
        - Fn::GetAtt:
            - Messages
            - Arn

custom:
  output:
    file: ./serverless-output.yml
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true

functions:
  OnConnectFunction:
    handler: api/on-connect.handler
    events:
      - websocket: 
          route: $connect

  OnDisconnectFunction:
    handler: api/on-disconnect.handler
    events:
      - websocket: 
          route: $disconnect

  OnSendFunction:
    handler: api/on-send.handler
    events:
      - websocket: 
          route: $default

  GetMessages:
    handler: api/get-messages.handler
    events:
      - http:
          path: api/messages/{channel}
          method: get

resources:
  Resources:
    SocketAPI:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${self:service}-socket-api
        ProtocolType: WEBSOCKET
        RouteSelectionExpression: "$request.body.message"

    Messages:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: ChannelId
            AttributeType: S
          - AttributeName: MessageId
            AttributeType: N
        KeySchema:
          - AttributeName: ChannelId
            KeyType: HASH
          - AttributeName: MessageId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PREFIX}-messages

    Connections:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ConnectionId
            AttributeType: S
        KeySchema:
          - AttributeName: ConnectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PREFIX}-connections
          
  Outputs:
    TableArn:
      Value: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PREFIX}
