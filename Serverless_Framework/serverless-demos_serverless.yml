service: FileUploader
package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    BUCKET_NAME: ${self:custom.bucketName}

plugins:
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  bucketName: cloud-gateway-uploads-bs

functions:

  UploadUrl:
    handler: lambdas/FileUploader/endpoints/GetPreSignedUrl.handler
    memorySize: 512
    timeout: 10
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:*
        Resource: 'arn:aws:s3:::${self:custom.bucketName}/*'
    events:
      - http:
          path: uploadurl
          method: POST
          cors: true

  UploadFileProperties:
    handler: lambdas/FileUploader/endpoints/UploadFileProperties.handler
    memorySize: 512
    timeout: 10
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:*
          - s3:PutObject
        Resource: 'arn:aws:s3:::${self:custom.bucketName}/*'
    events:
      - http:
          path: fileproperties
          method: POST
          cors: true

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
              - AllowedMethods:
                - GET
                - PUT
                - POST
                - HEAD
                AllowedOrigins:
                  - "*"
                AllowedHeaders:
                  - "*"

