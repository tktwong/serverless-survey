service: serverless-url-shortener

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${file(config.json):STAGE}
  region: ${file(config.json):REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::${file(config.json):BUCKET}/*"

functions:
  store:
    handler: api/store.handle
    events:
      - http:
          path: /
          method: post
          cors: true

resources:
  Resources:
    UrlShortenerS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${file(config.json):BUCKET}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
    UrlShortenerS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${file(config.json):BUCKET}
        PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            Effect: Allow
            Resource:
            - arn:aws:s3:::${file(config.json):BUCKET}/*
            Principal: "*"
    UrlShortenerCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${file(config.json):BUCKET}.s3-website-${file(config.json):REGION}.amazonaws.com
              Id: nmsttk-url-shortener
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: 'true'
          Aliases:  
            - "${file(config.json):DOMAIN}"
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: nmsttk-url-shortener
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            # custom SSL
            SslSupportMethod: 'sni-only'
            AcmCertificateArn: ${file(config.json):CERT_ARN}
            # Cloudfront SSL
            # CloudFrontDefaultCertificate: 'true'
