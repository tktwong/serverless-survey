# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: infrastructure # NOTE: update this with your service name


# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-central-1
  environment:
    ORDERS_TABLE_NAME: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: 
         - "Fn::GetAtt": [ Table, Arn ]
         - "Fn::Join": [ "/", [ "Fn::GetAtt": [ Table, Arn ], "index", "*" ] ]

custom:
  stage: ${opt:stage, self:provider.stage}
  environment: ${file(../../env.yml):${self:custom.stage}, file(../../env.yml):default}
  region: ${opt:region, self:provider.region}
  tableName: ${self:custom.stage}-backend

plugins:
  - serverless-export-env
  - serverless-iam-roles-per-function
  
functions:
  CreateAccount:
    handler: handler.createAccount
    events:
      - http:
          method: post
          path: /
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Resource:
          - "Fn::GetAtt": [ CognitoUserPoolAccountsUserPool, Arn ]
        Action:
          - cognito-idp:SignUp
          - cognito-idp:AdminDeleteUser
      - Effect: Allow
        Resource:
          - "Fn::GetAtt": [ Table, Arn ]
          - "Fn::Join": [ "/", [ "Fn::GetAtt": [ Table, Arn ], "index", "*" ] ]
        Action:
          - dynamodb:*

    environment:
      USER_POOL_ID:
        Ref: CognitoUserPoolAccountsUserPool
      USER_POOL_CLIENT_ID:
        Ref: AccountsUserPoolClient
      TABLE_NAME: ${self:custom.tableName}

  AutoVerifyAccount:
    handler: handler.accountVerifyHandler
    events:
      - cognitoUserPool:
          pool: AccountsUserPool
          trigger: PreSignUp

  EventHandler:
    handler: handler.eventhandler
    events:

    - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - Table
              - StreamArn
      
resources:
  # DynamoDB
  - ${file(resources/table.yml)}
  # Event Stream
  - ${file(resources/event-stream.yml)}
  - Outputs:
      TableNameArn:
        Value:
          Fn::GetAtt:
            - Table
            - Arn
        Export:
          Name: ${self:custom.stage}-table-arn
      TableName:
        Value: ${self:custom.tableName}
        Export:
          Name: ${self:custom.stage}-table-name
    # Cognito
  - ${file(resources/user-pool-accounts.yml)}
  - Outputs:
      AccountsUserPool:
        Value:
          Fn::GetAtt:
            - CognitoUserPoolAccountsUserPool
            - Arn
        Export:
          Name: ${self:custom.stage}-accounts-user-pool