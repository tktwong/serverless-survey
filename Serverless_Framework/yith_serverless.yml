service: yith

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  registry: https://registry.npmjs.org/
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "apigateway:POST"
      Resource:
        - "arn:aws:s3:::${self:service}*"
        - "arn:aws:apigateway:*"

package:
  exclude:
    - src

functions:
  githubAuthorizer:
    handler: lib/authorizer/index.handler
  packageGet:
    handler: lib/package/get/index.handler
    events:
      - http:
          path: "registry/{id}"
          method: get
          request:
            template:
              application/json: >
                {
                  "id": "$input.params('id')",
                  "registry": "${self:provider.registry}",
                  "bucket": "${self:service}-${opt:stage}",
                  "region": "${self:provider.region}"
                }
  packagePut:
    handler: lib/package/put/index.handler
    events:
      - http:
          path: "registry/{id}"
          method: put
          authorizer: githubAuthorizer
          request:
            template:
              application/json: >
                {
                  "id": "$input.params('id')",
                  "body": "$util.escapeJavaScript($input.json('$'))",
                  "registry": "${self:provider.registry}",
                  "bucket": "${self:service}-${opt:stage}",
                  "region": "${self:provider.region}"
                }
  userPut:
    handler: lib/user/put/index.handler
    events:
      - http:
          path: "registry/-/user/{id}"
          method: put
          statusCode: 201
          request:
            template:
              application/json: >
                {
                  "id": "$input.params('id')",
                  "body": "$util.escapeJavaScript($input.json('$'))"
                }

resources:
  Resources:
    PackageStorage:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:service}-${opt:stage}
