service: api-gateway-template
package:
  exclude:
    - node_modules/@emplify/db-emplify/migrations/**
    - node_modules/@emplify/db-emplify/dev-seeds/**
    - node_modules/@emplify/db-emplify/env-seeds/**
    - node_modules/@emplify/db-emplify/validation-seeds/**

frameworkVersion: ">=1.1.0 <2.0.0"
custom: ${file(../.serverless.env.yml)}
provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  environment:
    LOG_LEVEL: info
    STAGE: ${opt:stage}
    ENVIRONMENT: ${opt:stage}

    # try to load from .serverless.env.yml and if not then fall back to local env var
    DB_HOST: ${env:DB_HOST, self:custom.global.${opt:stage}.DB_HOST}
    DB_PORT: ${env:DB_PORT, self:custom.global.${opt:stage}.DB_PORT}
    DB_USER: ${env:DB_USER, self:custom.global.${opt:stage}.DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD, self:custom.global.${opt:stage}.DB_PASSWORD}
    DB_NAME: emplify

    # auth0
    AUTH0_CLIENT_ID: ${env:AUTH0_CLIENT_ID, self:custom.global.${opt:stage}.AUTH0_CLIENT_ID}
    AUTH0_CLIENT_SECRET: ${env:AUTH0_CLIENT_SECRET, self:custom.global.${opt:stage}.AUTH0_CLIENT_SECRET}
    AUTH0_ISSUER: ${env:AUTH0_ISSUER, self:custom.global.${opt:stage}.AUTH0_ISSUER}

    # bugsnag
    BUGSNAG_API_KEY: ${env:BUGSNAG_API_KEY, self:custom.global.${opt:stage}.BUGSNAG_API_KEY}

    # cors
    ALLOW_ORIGIN: ${env:ALLOW_ORIGIN, self:custom.global.${opt:stage}.ALLOW_ORIGIN}

plugins:
  - serverless-offline

functions:
  auth:
    handler: handler.authHandler
  currentTime:
    description: Returns current time response upon GET request
    handler: handler.getPing
    events:
      - http:
          path: /ping
          method: get
          authorizer: auth
          cors: true
