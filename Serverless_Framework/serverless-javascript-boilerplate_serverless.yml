service: initialize-serverless

frameworkVersion: '2'

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    blockPublicAccess: true
    maxPreviousDeploymentArtifacts: 1
    serverSideEncryption: AES256

resources:
  Description: CloudFormation stack for ${self:service}-${self:provider.region}-${self:provider.stage}
  Resources:
    CloudFormationStackRole: ${file(./sls/CloudFormationStackRole.yml)}
    SlsDeployAccessKey: ${file(./sls/SlsDeployAccessKey.yml)}
    SlsDeployUser: ${file(./sls/SlsDeployUser.yml)}
  Outputs:
    CloudFormationStackRoleArn:
      Description: CloudFormation stack role generated by the template
      Value: !GetAtt CloudFormationStackRole.Arn
    SlsDeployUserAccessKeyId:
      Description: IAM credentials to be used to deploy serverless artifacts to AWS
      Value: !Ref SlsDeployAccessKey
    SlsDeployUserSecretAccessKey:
      Description: IAM credentials to be used to deploy serverless artifacts to AWS
      Value: !GetAtt SlsDeployAccessKey.SecretAccessKey
