service: s3-player

custom:
  host_zone: ''
  custom_domain: ''
  certificate_arn: ''

provider:
  name: aws
  runtime: nodejs6.10
  stage: stg
  region: ap-northeast-2
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:Put*"
        - "s3:GetObject"
      Resource: "*"

functions:
  play:
    handler: src/app.play
    timeout: 15
    events:
      - http:
          path: play
          method: get
          cors: true
          private: false
  list:
    handler: src/app.list
    environment:
      domain: ${self:custom.custom_domain}
    timeout: 15
    events:
      - http:
          path: list
          method: get
          cors: true
          private: false
resources:
  Resources:
    PlayLogGroup:
      Properties:
        RetentionInDays: "1"
    myDomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        CertificateArn: ${self:custom.certificate_arn}
        DomainName: ${self:custom.custom_domain}
    myMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        BasePath: ${self:provider.stage}
        DomainName:
          Ref: myDomainName
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${self:provider.stage}
    myDNSRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${self:custom.host_zone}
        Comment: DNS name for s3 player.
        Name: ${self:custom.custom_domain}
        Type: CNAME
        TTL: 300
        ResourceRecords:
          - Fn::GetAtt:
            - myDomainName
            - DistributionDomainName
