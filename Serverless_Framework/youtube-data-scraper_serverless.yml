service: youtube-data-scraper

plugins:
  - serverless-plugin-typescript

package:
  include:
    - src/handlers/scrape-videos/search_filter

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1

  environment:
    GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}
    SCRAPE_VIDEOS_REQUEST_QUEUE_URL: !Ref ScrapeVideosRequestQueue
    STORE_VIDEOS_QUEUE_URL: !Ref StoreVideosQueue
    SEARCH_FILTER_FILENAME: search_filter
    RDS_ENDPOINT: !GetAtt YoutubeDataScraperRDSCluster.Endpoint.Address
    RDS_PORT: !GetAtt YoutubeDataScraperRDSCluster.Endpoint.Port
    RDS_USERNAME: ${env:RDS_USERNAME}
    RDS_PASSWORD: ${env:RDS_PASSWORD}
    RDS_DB_NAME: mydb

  iamRoleStatements:
  - Effect: Allow
    Action:
      - sqs:SendMessage
      - sqs:SendMessageBatch
    Resource: 
    - !Join
        - ':'
        - - 'arn:aws:sqs'
          - !Ref AWS::Region
          - !Ref AWS::AccountId
          - ${self:service}-scrape-videos-request
    - !Join
        - ':'
        - - 'arn:aws:sqs'
          - !Ref AWS::Region
          - !Ref AWS::AccountId
          - ${self:service}-store-videos

functions:
  scrape-playlist-ids:
    handler: src/handlers/api/scrape-playlist-ids/index.handler
    events:
      - http:
          path: scrape
          method: get
          request:
            parameters:
              querystrings:
                channel: true

  scrape-videos:
    handler: src/handlers/scrape-videos/index.handler
    events:
      - sqs:
          arn: !GetAtt ScrapeVideosRequestQueue.Arn
          batchSize: 1

  store-videos:
    vpc: ${self:custom.defaultVpc}
    handler: src/handlers/store-videos/index.handler
    events:
      - sqs:
          arn: !GetAtt StoreVideosQueue.Arn
          batchSize: 10

  videos-get:
    vpc: ${self:custom.defaultVpc}
    handler: src/handlers/api/videos-get/index.handler
    events:
      - http:
          path: videos
          method: get

  video-get:
    vpc: ${self:custom.defaultVpc}
    handler: src/handlers/api/video-get/index.handler
    events:
      - http:
          path: video/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  video-delete:
    vpc: ${self:custom.defaultVpc}
    handler: src/handlers/api/video-delete/index.handler
    events:
      - http:
          path: video/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true

  videos-search:
    vpc: ${self:custom.defaultVpc}
    handler: src/handlers/api/videos-search/index.handler
    events:
      - http:
          path: videos/search
          method: get
          request:
            parameters:
              querystrings:
                q: true

  
custom: 
  defaultVpc: # default sg and subnets; don't want to spend on spinning another up! allows access from stack (lambdas) to RDS
    securityGroupIds:
      - sg-26858a60
    subnetIds:
      - subnet-5961663f # eu-west-1a
      - subnet-2c9b8c64 # eu-west-1b
      - subnet-96b3f2cc # eu-west-1c          
resources:
  - ${file(resources/sqs.yml)}
  - ${file(resources/apigateway.yml)}
  - ${file(resources/rds.yml)}
