service: guide-to-step-functions

plugins:
  - serverless-step-functions

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-2'}

functions:
  hello:
    handler: handler.hello
  add:
    handler: handler.add
  double:
    handler: handler.double
  doubleBigNumber:
    handler: handler.doubleBigNumber

stepFunctions:
  stateMachines:
    hello:
      name: hello
      definition:
        Comment: hello world example
        StartAt: SayHello
        States:
          SayHello:
            Type: Task
            Resource: !GetAtt hello.Arn
            End: true
    function-chaining:
      name: function-chaining
      definition:
        Comment: example to demonstrate function chaining
        StartAt: Add
        States:
          Add:
            Type: Task
            Resource: !GetAtt add.Arn
            Next: Double
          Double:
            Type: Task
            Resource: !GetAtt double.Arn
            End: true
            Retry:
              - ErrorEquals: [NumberIsTooBig]
                MaxAttempts: 0
              - ErrorEquals: [States.ALL]
                MaxAttempts: 3
            Catch:
              # - ErrorEquals: [NumberIsTooBig]
              #   Next: DefaultResponse
              - ErrorEquals: [NumberIsTooBig]
                Next: DoubleBigNumber
          DoubleBigNumber:
            Type: Task
            Resource: !GetAtt doubleBigNumber.Arn
            End: true
          # DefaultResponse:
          #   Type: Pass
          #   Result: 42
          #   End: true
    function-branching:
      name: function-branching
      definition:
        Comment: example to demonstrate function chaining
        StartAt: Add
        States:
          Add:
            Type: Task
            Resource: !GetAtt add.Arn
            Next: IsBigNumber
          IsBigNumber:
            Type: Choice
            Choices:
              - Variable: $
                NumericGreaterThan: 50
                Next: DoubleBigNumber
            Default: Double
          Double:
            Type: Task
            Resource: !GetAtt double.Arn
            End: true
          DoubleBigNumber:
            Type: Task
            Resource: !GetAtt doubleBigNumber.Arn
            End: true
    parallel-tasks:
      name: parallel-tasks
      definition:
        Comment: parallel tasks demonstration
        StartAt: Parallel
        States:
          Parallel:
            Type: Parallel
            End: true
            Branches:
              - StartAt: Add
                States:
                  Add:
                    Type: Task
                    Resource: !GetAtt add.Arn
                    Next: Double
                  Double:
                    Type: Task
                    Resource: !GetAtt double.Arn
                    End: true
                    Retry:
                      - ErrorEquals: [NumberIsTooBig]
                        MaxAttempts: 0
                      - ErrorEquals: [States.ALL]
                        MaxAttempts: 3
                    Catch:
                      - ErrorEquals: [NumberIsTooBig]
                        Next: DoubleBigNumber
                  DoubleBigNumber:
                    Type: Task
                    Resource: !GetAtt doubleBigNumber.Arn
                    End: true
