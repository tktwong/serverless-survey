service: lambda-serverless-flask

plugins:
  - serverless-python-requirements
  - serverless-wsgi

package:
  exclude:
    - node_modules/**
    - '!node_modules/node-fetch/**'
    - .serverless/**
    - tests/**

custom:
  tableName: 'users-table-${self:provider.stage}'
  wsgi:
    app: custom_platform.app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: false

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource:
    - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
