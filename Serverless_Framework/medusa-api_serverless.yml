service: medusa-rest-api 

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1

  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}-*"


functions:
  createCustomer:
    handler: api/customers/create.main
    events:
      - http:
          path: customer
          method: post
          cors: true
  listCustomers:
    handler: api/customers/list.main
    events:
      - http:
          path: customer
          method: get
          cors: true
  getCustomer:
    handler: api/customers/get.main
    events:
      - http:
          path: customer/{id}
          method: get
          cors: true
  updateCustomer:
    handler: api/customers/update.main
    events:
      - http:
          path: customer/{id}
          method: put
          cors: true
  deleteCustomer:
    handler: api/customers/delete.main
    events:
      - http:
          path: customer/{id}
          method: delete
          cors: true

  createProject:
    handler: api/projects/create.main
    events:
      - http:
          path: project
          method: post
          cors: true
          getCustomer:
  getProject:
    handler: api/projects/get.main
    events:
      - http:
          path: project/{id}
          method: get
          cors: true
  listProjects:
    handler: api/projects/list.main
    events:
      - http:
          path: project
          method: get
          cors: true

resources:
  Resources:
    CustomersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - 
            AttributeName: id
            AttributeType: S
        KeySchema:
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}-customers
    ProjectsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - 
            AttributeName: id
            AttributeType: S
        KeySchema:
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}-projects

        
plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

package:
  exclude:
    - node_modules/**/*
  include:
    - api/*
    - calls/*