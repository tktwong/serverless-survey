service: turbotrax-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in createCategory.js
  # this is for track categories db
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createCategory:
    handler: createCategory.main
    events:
      - http:
          path: turbotrax/category
          method: post
          cors: true
          authorizer: aws_iam
  getCategory:
    # Defines an HTTP API endpoint that calls the main function in getCategory.js
    # - path: url path is /notes/{id}
    # - method: GET request
    handler: getCategory.main
    events:
      - http:
          path: turbotrax/category/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listCategory:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: listCategory.main
    events:
      - http:
          path: turbotrax/category
          method: get
          cors: true
          authorizer: aws_iam
  updateCategory:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: updateCategory.main
    events:
      - http:
          path: turbotrax/category/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteCategory:
    # Defines an HTTP API endpoint that calls the main function in delete.js
    # - path: url path is /notes/{id}
    # - method: DELETE request
    handler: deleteCategory.main
    events:
      - http:
          path: turbotrax/category/{id}
          method: delete
          cors: true
          authorizer: aws_iam


  # Defines an HTTP API endpoint that calls the main function in createTrack.js
  # this is for track data db
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createTrack:
    handler: createTrack.main
    events:
      - http:
          path: turbotrax/track
          method: post
          cors: true
          authorizer: aws_iam
  getTrack:
    # Defines an HTTP API endpoint that calls the main function in getTrack.js
    # - path: url path is /notes/{id}
    # - method: GET request
    handler: getTrack.main
    events:
      - http:
          path: turbotrax/track/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listTrack:
    # Defines an HTTP API endpoint that calls the main function in listTrack.js
    # - path: url path is /notes
    # - method: GET request
    handler: listTrack.main
    events:
      - http:
          path: turbotrax/track
          method: get
          cors: true
          authorizer: aws_iam
  updateTrack:
    # Defines an HTTP API endpoint that calls the main function in updateTrack.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: updateTrack.main
    events:
      - http:
          path: turbotrax/track/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteTrack:
    # Defines an HTTP API endpoint that calls the main function in deleteTrack.js
    # - path: url path is /notes/{id}
    # - method: DELETE request
    handler: deleteTrack.main
    events:
      - http:
          path: turbotrax/track/{id}
          method: delete
          cors: true
          authorizer: aws_iam
# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
