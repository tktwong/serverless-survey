# NOTE: update this with your service name
service: aws-auth

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: ap-southeast-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}
environment:
  AWS_ACCESS_KEY_ID: ${env:AWS_ACC_KEY_ID}
  AWS_SECRET: ${env:AWS_SECRET}
  AWS_USER_POOL_ID: ${env:AWS_USER_POOL_ID}
  AWS_CLIENT_ID: ${env:AWS_CLIENT_ID}
  AWS_REGION: ${env:AWS_REGION}
  COGNITO_USER_POOL_ID: ${env:COGNITO_USER_POOL_ID}
  TEST: ${env:TEST}
  HOME: ${env:HOME}
custom:
  serverless-offline:
    port: 8000

functions:
  logout:
    handler: ./services/auth/logoutHandler.logout
    events:
      - http:
          path: logout
          method: post
          cors: true
  data:
    handler: ./services/data/dataHandler.data
    events:
      - http:
          path: data
          method: get
          cors: true
          authorizer: authorizerFunc

  authorizerFunc:
    handler: ./services/authorizer/checkAuth.auth

  login:
    handler: ./services/auth/loginHandler.login
    events:
      - http:
          path: login
          method: post
          cors: true
  register:
    handler: ./services/auth/registerHandler.register
    events:
      - http:
          path: register
          method: post
          cors: true
