# name of the serverless service
service: radon-function-lib

# version of serverless framework to use
frameworkVersion: '2'

# configure the AWS provider
provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: eu-north-1

package:
  # allows for individual dependencies for each function
  individually: true

functions:

  snyk_test:
    module: functions/snyk_test
    handler: snyk_test.handler
    timeout: 29
    events:
      - http:
          path: snyk-test
          method: post
    # uncomment to use environment
    # variable to provide the token
    # environment:
      # SNYK_API_KEY: ${env:SNYK_API_KEY}

  secrets_scanner:
    module: functions/secrets_scanner
    handler: secrets_scanner.handler
    runtime: python3.6
    timeout: 10
    events:
      - http:
          path: secrets-scanner
          method: post

  observatory:
    module: functions/observatory
    handler: observatory.handler
    timeout: 10
    events:
      - http:
          path: observatory
          method: post

  tls_cert_checker:
    module: functions/tls_cert_checker
    handler: tls_cert_checker.handler
    timeout: 10
    events:
      - http:
          path: tls-cert-checker
          method: post
  
  have_i_been_pwned:
    module: functions/have_i_been_pwned
    handler: haveibeenpwned.handler
    timeout: 10
    events:
      - http:
          path: breached-email-check
          method: post

  black_linter:
    module: functions/black_linter
    handler: blacklinter.handler
    timeout: 10
    events:
      - http:
          path: blacked-repo
          method: post

  schemathesis:
    module: functions/schemathesis
    handler: scheme_test.handler
    timeout: 10
    environment:
      API_URL: 'tests/openapi.json'
      BASE_URL: 'cloudstash.io'
    events:
      - schedule:
          rate: cron(15 10 * * ? *)
          enabled: true

custom:
  pythonRequirements:
    # if not building from linux, use docker to build python dependencies
    dockerizePip: non-linux

plugins:
  - serverless-python-requirements
  - serverless-offline