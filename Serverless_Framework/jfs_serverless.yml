service: lambda-facebook-oauth

plugins:
  - serverless-offline
  - serverless-webpack

custom:
  webpackIncludeModules: true
  stage: "${opt:stage, self:provider.stage}"

provider:
  name: aws
  region: us-west-2
  runtime: nodejs6.10
  memorySize: 1536
  timeout: 10
  versionFunctions: false

functions:
  root:
    handler: jfs.root
    events: 
      - http:
          path: /
          method: get
          cors: true
  auth:
    handler: auth.facebook
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/auth/facebook
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  register:
    handler: jfs.register
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/register
          method: post
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  search:
    handler: jfs.search
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/search
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  getUser:
    handler: jfs.getUser
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/user/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  facebookFriends:
    handler: jfs.facebookFriends
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/friends
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  influence:
    handler: jfs.influence
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/influence
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  leaderboard:
    handler: jfs.leaderboard
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/leaderboard
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}
  reports:
    handler: jfs.reports
    events: 
      - http:
          path: prelaunch/tenant/{tenantId}/reports
          method: get
          cors: true
          request:
            parameters:
              paths:
                tenantId: true
    environment: ${file(env.yaml):${self:custom.stage}}