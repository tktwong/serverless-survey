# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: eb7-sls-helper-test
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  profile: ${opt:profile, 'prod'}
  apiKeys:
    - name: ${self:provider.stage}-${self:service} 
  deploymentBucket:
    name: eb7-serverless
    maxPreviousDeploymentArtifacts: 10
  deploymentPrefix: ${self:service} 
  tags:
    ebot7:application-name: Lambda
    ebot7:application-role: lambda
    ebot7:business-unit: Project X
    ebot7:customer: e-bot7
    ebot7:environment: staging
    ebot7:managed-by: serverless
    ebot7:project: Integrations
    ebot7:scaling-type: linear
  stackTags:
    ebot7:application-name: Lambda
    ebot7:application-role: lambda
    ebot7:business-unit: Project X
    ebot7:customer: e-bot7
    ebot7:environment: staging
    ebot7:managed-by: serverless
    ebot7:project: Integrations
    ebot7:scaling-type: linear

plugins:
 - serverless-manifest-plugin
 - serverless-domain-manager

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: users/create
          method: get
          privat: true
  bye:
    handler: handler.hello
    events:
      - http:
          path: users/create
          method: post 
          privat: true

custom:
  logLevel:
    prod: ERROR
  domains:
    prod: lambda.e-bot7.de
    qa: qa-lambda.e-bot7.de
    dev: dev-lambda.e-bot7.de
  customDomain:
    basePath: "${self:service}"
    domainName: ${self:custom.domains.${self:provider.stage}}
    stage: "${self:provider.stage}"
    createRoute53Record: true
  newmanCollection: 7531220-7f7958bb-fe01-4825-a45f-29536dac1b7c
  newmanEnvironment:
    prod: 515064e2-b387-40b2-8ea7-6a52947691b7
    qa: 85e87674-b652-4b09-8cff-4e8cfa700555
    dev: 5b484da9-ffc5-4d08-824c-24360765267b

