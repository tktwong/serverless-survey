service:
  name: starter-ts

plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpack:
    webpackConfig: config/webpack.config.js
    packagePath: .package.json
    includeModules: false
    excludeFiles: src/__tests__
    packager: npm
    forceExclude:
      - aws-sdk
  serverless-offline:
    port: ${opt:apiport, '6969'}
  dynamodb:
    seed:
      hello:
        sources:
          - table: ${self:provider.stage}-hello
            sources: [./config/seed_hello.json]
    migration:
      dir: ./data/migrations
    start:
      port: ${opt:ddbport, '6970'}
      inMemory: true
      migrate: true
      seed: true
    stages: ${self:provider.stage}
  param: ${file(./config/params.yml)}

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 10 # seconds
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  stackName: ${self:provider.stage}-${self:service.name}
  logRetentionInDays: 7
  iamRoleStatements: ${file(./aws/iam_statements.yml)}
  tags:
    project: ${self:provider.stage}-${self:service.name}
  apiKeys:
    - ${self:provider.stage}-${self:service.name}
  apiGateway:
    apiKeySourceType: HEADER
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    SENTRY_DSN: ${self:custom.param.${self:provider.stage}.sentryDSN}

layers:
  dependencies:
    name: ${self:provider.stage}-${self:service.name}
    description: Starter typescript project dependencies.
    package:
      artifact: dependencies.zip
    compatibleRuntimes:
      - nodejs12.x
    licenseInfo: MIT

functions:
  helloFunction:
    name: hello_function_ts
    handler: src/functions/hello.handler
    description: Basic sample function.
    events:
      - http:
          path: /test
          method: get
          request:
            parameters:
              queryStrings:
                message: false
              paths:
                message: false
          cors: true
          private: true
    layers:
      - !Ref DependenciesLambdaLayer

resources:
  - ${file(./aws/dynamodb_hello.yml)}
  - ${file(./aws/lambda_dlq.yml)}
