service: tflambdaIMG

provider:
  name: aws
  region: eu-west-1
  runtime: python3.6
  stage: dev
  credentials:
    accessKeyId: 
    secretAccessKey: 

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
       Fn::Join:
         - ""
         - - "arn:aws:s3:::"
           - ${self:provider.environment.BUCKET}
           - "/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - lambda:InvokeFunction 
        - lambda:GetLayerVersion
        - sagemaker:UpdateEndpoint
        - sagemaker:CreateModel
        - sagemaker:CreateEndpointConfig
        - sagemaker:DescribeEndpoint
        - sagemaker:CreateTrainingJob
        - sagemaker:InvokeEndpoint
      Resource:
        - arn:aws:dynamodb:eu-west-1:*:*
        - arn:aws:lambda:eu-west-1:*:* 
        - arn:aws:iam::014011337545:user/serverless
        - arn:aws:sagemaker:eu-west-1:014011337545:endpoint/carpartsclassifierv1
        - arn:aws:sagemaker:eu-west-1:014011337545:endpoint/carpartsclassifierv2

  environment:
    BUCKET: serverless-ml-2

functions:
  infer:
    handler: infer.inferHandler
    environment:
      ENDPOINT_NAME: CarPartsClassifierV1
    layers:
      #- arn:aws:lambda:eu-west-1:282784146513:layer:tf_serving_api_flat:2
      - arn:aws:lambda:eu-west-1:347034527139:layer:tf_keras_pillow:1
    timeout: 30
    events:
      - http:
          path: infer
          method: post
          
  inferqueue:
    handler: inferqueue.inferqueueHandler
    timeout: 30
    events:
      - http:
          path: inferqueue
          method: post

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true
    zip: true
    slim: true
    noDeploy:
      - boto3
      - botocore
      - docutils
      - jmespath
      - pip
      - python-dateutil
      - s3transfer
      - setuptools
      - six
      - tensorboard

package:
  exclude:
    - "*.gz"

resources:
  Resources:
    SageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET}
