service: syd-com-prog-api

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'submission-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["SubmissionsDynamoDBTable", "Arn" ]}
  environment:
    SUBMISSIONS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getSubmission:
    handler: index.handler
    events:
      - http: 'GET /subs/{proxy+}'
  submitCode:
    handler: index.handler
    events:
      - http: 'POST /subs'

resources:
  Resources:
    SubmissionsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: playerId
            AttributeType: S
          -
            AttributeName: challengeId
            AttributeType: N
        KeySchema:
          -
            AttributeName: playerId
            KeyType: HASH
          -
            AttributeName: challengeId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}