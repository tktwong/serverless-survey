

service: access

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-2'}
  stackName: "${self:custom.project}-${self:service}-${self:provider.stage}"
  deploymentBucket:
    name: ${self:custom.deploymentBucket} #com.serverless.${self:provider.region}.deploys
    serverSideEncryption: AES256
  deploymentPrefix: serverless
  stackTags:
    project: ${self:custom.project}
  tags:
    project: ${self:custom.project}

custom: ${file(./config.yml)}
  
resources:
  Resources:
    # IAM
    ServerlessUser:
      Type: AWS::IAM::User
      Properties:
        LoginProfile:
          Password: ${self:custom.password}
        UserName: ${self:custom.username}
    ServerlessUserPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: S3ReadPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action:
                - s3:ListBucketByTags
                - s3:GetLifecycleConfiguration
                - s3:GetBucketTagging
                - s3:GetInventoryConfiguration
                - s3:GetObjectVersionTagging
                - s3:ListBucketVersions
                - s3:GetBucketLogging
                - s3:ListBucket
                - s3:GetAccelerateConfiguration
                - s3:GetBucketPolicy
                - s3:GetObjectAcl
                - s3:GetEncryptionConfiguration
                - s3:GetBucketRequestPayment
                - s3:GetObjectVersionAcl
                - s3:GetObjectTagging
                - s3:GetMetricsConfiguration
                - s3:HeadBucket
                - s3:GetBucketPublicAccessBlock
                - s3:GetBucketPolicyStatus
                - s3:ListBucketMultipartUploads
                - s3:GetBucketWebsite
                - s3:GetBucketVersioning
                - s3:GetBucketAcl
                - s3:GetBucketNotification
                - s3:GetReplicationConfiguration
                - s3:ListMultipartUploadParts
                - s3:GetAccountPublicAccessBlock
                - s3:ListAllMyBuckets
                - s3:GetBucketCORS
                - s3:GetAnalyticsConfiguration
                - s3:GetBucketLocation
              Resource: "*"
        Users:
          - Ref: ServerlessUser
      DependsOn: ServerlessUser