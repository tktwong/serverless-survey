service: spike-backend
# Create an optimized package for our functions
package:
  individually: true
plugins:
  - serverless-functions-base-path
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-bundle # Package our functions with Webpack
  - serverless-dotenv-plugin # Load .env as environment variables
custom:
    functionsBasePath: src/handlers
    tableNames:
      authTable: 'auth'
      hiveTable: 'hive'
    endpoints:
      dynamodb-url: 'http://localhost:8080'
    serverless-offline:
      port: 3001
    dynamodb:
      start:
        migrate: true
        port: 8080
      stages:
        - dev
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  # These environment variables are made available to our functions
  # under process.env.
  environment:
    authTable: auth
    hiveTable: hive
    CONFIG_AUTH_TABLE: ${self:custom.tableNames.authTable}
    CONFIG_HIVE_TABLE: ${self:custom.tableNames.hiveTable}
    CONFIG_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb-url}
  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:table/*"
resources:
  Resources: 
    ${file(./db-tables.yml)}
functions:
  ${file(./lambda-routes.yml)}