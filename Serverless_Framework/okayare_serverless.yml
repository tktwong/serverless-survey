# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: okayare # NOTE: update this with your service name

custom:
  myStage: ${opt:stage, self:provider.stage}

  serverless-offline:
    httpsProtocol: "httpsLocalhostCert"
    port: 5000

  secrets: ${file(doNotCommit/secrets_${self:custom.myStage}.json)}
  firebase_admin_service_account: ${file(doNotCommit/okayare-firebaseadmin-serviceaccount-creds-${self:custom.myStage}.json)}

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  stage: dev
  runtime: nodejs8.10
  apiName: okayare-api
  environment:
    TEST_VALUE: ${self:custom.secrets.TEST_VALUE}
    MONGO_ACCESS_URI: ${self:custom.secrets.MONGO_ACCESS_URI}
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    CLIENT_ID: ${self:custom.secrets.CLIENT_ID}
    CLIENT_SECRET: ${self:custom.secrets.CLIENT_SECRET}
    FB_ADMIN_SA_PROJECT_ID: ${self:custom.firebase_admin_service_account.project_id}
    FB_ADMIN_SA_PRIVATE_KEY: ${self:custom.firebase_admin_service_account.private_key}
    FB_ADMIN_SA_DB_NAME: ${self:custom.firebase_admin_service_account.project_id}
    FB_ADMIN_SA_CLIENT_EMAIL: ${self:custom.firebase_admin_service_account.client_email}


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**


functions:
  verify-token:
    handler: handlers/auth.verifyToken

  tokensignin:
    handler: handlers/auth.tokensignin
    events:
      - http:
          path: tokensignin
          method: post
          cors:
            origins:
              - https://www.okayare.com
            headers:
              - Content-Type

  status:
    handler: handler.status
    events:
      - http:
          path: status
          method: get
          cors: true

  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors:
            origins:
              - https://www.okayare.com
            headers:
              - Content-Type
              - Authorization
          authorizer:
            name: verify-token
            identitySource: method.request.header.Authorization

  graphql:
    handler: graphql.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors:
            origins:
              - https://www.okayare.com
            headers:
              - Content-Type
              - Authorization
          authorizer:
            name: verify-token
            identitySource: method.request.header.Authorization

  graphqlPlayground:
    handler: graphql.graphqlHandler
    events:
      - http:
          path: graphql
          method: get
          cors:
            origins:
              - https://www.okayare.com
            headers:
              - Content-Type
              - Authorization
          authorizer:
            name: verify-token
            identitySource: method.request.header.Authorization


plugins:
- serverless-offline            # adding the plugin to be able to run the offline emulation
