
service: shame-service


provider:
  name: aws
  runtime: nodejs8.10

  stage: dev
  region: eu-central-1
  profile: serverless
  tracing: true
  environment:
    DYNAMODB_TABLE: Shame-${opt:stage, self:provider.stage}
    CONNECTIONS_TABLE: Connections-${opt:stage, self:provider.stage}
    FILES_S3_BUCKET: serverless-shame-2019-${opt:stage, self:provider.stage}
    SIGNED_URL_EXPIRATION: 300

  iamRoleStatements:

    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CONNECTIONS_TABLE}"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:provider.environment.FILES_S3_BUCKET}/*"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

custom:
  serverless-offline:
    port: 4000

plugins:
  - serverless-offline
  - serverless-plugin-tracing

functions:
  connectHandler:
    handler: functions/websockets/connect.handler
    events:
      - websocket:
          route: $connect

  disconnectHandler:
    handler: functions/websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect

  dynamoDbStream:
    environment:
      STAGE: ${self:provider.stage  }
      API_ID:
        Ref: WebsocketsApi
    handler: functions/dynamoStream.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ ShamesDynamoDBTable, StreamArn ]

  get-shames:
    handler: functions/getAll.handler
    deploymentSettings:
      type: Linear10PercentEvery1Minute
      alias: Live
    events:
      - http:
          method: get
          path: shames
          cors: true

  create:
    handler: functions/create.handler
    events:
      - http:
          method: post
          path: shames
          cors: true
          authorizer:
              arn: "arn:aws:cognito-idp:eu-central-1:913036176028:userpool/eu-central-1_yGyVX47DQ"

resources:
  Resources:
    ShamesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

    WebSocketConnectionsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CONNECTIONS_TABLE}

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: MyPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref AttachmentsBucket
                  - /*
        Bucket: !Ref AttachmentsBucket

    AttachmentsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:provider.environment.FILES_S3_BUCKET}
        # Set the CORS policy
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

