custom: 
  service: ${file(env.yml):service}
  provider: ${file(env.yml):provider}
  customDomain:
    domainName: ${file(env.yml):customDomain.${opt:stage, 'dev'}DomainName}
    certificateName: ${file(env.yml):customDomain.${opt:stage, 'dev'}CertificateName}
    basePath: ${file(env.yml):customDomain.${opt:stage, 'dev'}BasePath}
    stage: ${opt:stage, 'dev'}
    createRoute53Record: ${file(env.yml):customDomain.${opt:stage, 'dev'}CreateRoute53Record}

service: ${self:custom.service}

frameworkVersion: ">=1.23.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  memorySize: 128
  profile: ${self:custom.provider.awsProfile} # aws named profile
  stage: ${opt:stage, 'dev'} # `sls deploy --stage production` if --stage is provided, else use dev
  stackTags: # Optional CF stack tags
    Name: ${self:custom.provider.awsTagName}
  environment:
    GOOGLE_SITE_VERIFICATION: ${self:custom.provider.${opt:stage, 'dev'}GoogleSiteVerification}
    DYNAMODB_REGION: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}Region}
    DYNAMODB_ENDPOINT: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}Endpoint}
    DYNAMODB_AWS_ACCESS_KEY_ID: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}AwsAccessKeyId}
    DYNAMODB_AWS_SECRET_ACCESS_KEY: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}AwsSecretAccessKey}

functions:
  renderHomePage:
    handler: html/handler.render
    tags:
      Name: ${self:custom.provider.awsTagName}
    events:
      - http:
          path: '/'
          method: get
          cors: true
  renderHtml:
    handler: html/handler.render
    tags:
      Name: ${self:custom.provider.awsTagName}
    events:
      - http:
          path: '{proxy+}'
          method: get
          cors: true

resources:
  Resources:
    DriversTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: DriversTable
        AttributeDefinitions:
          - AttributeName: something
            AttributeType: S
          - AttributeName: somethingElse
            AttributeType: S
        KeySchema:
          - AttributeName: something
            KeyType: HASH
          - AttributeName: somethingElse
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}RCU}
          WriteCapacityUnits: ${self:custom.dynamodbConfig.${opt:stage, 'dev'}WCU}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-aws-documentation
  - serverless-domain-manager