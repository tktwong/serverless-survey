service: cloudwatch-alarm-to-slack

custom:
  config: ${file(./config.yml)}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ec2:DescribeInstances"
        - "codebuild:BatchGetProjects"
        - "ecs:DescribeClusters"
        - "ecs:ListTagsForResource"
        - "codepipeline:GetPipeline"
      Resource: "*"
  environment:
    slack_path: ${self:custom.config.slack_path}
    tag_name: cloudwatch-alarm-to-slack-isenabled

package:
  exclude:
    - README.md
    - config.yml

layers:
  cloudWatchAlarmToSlack:
    path: layer

functions:
  ec2:
    handler: events/ec2.handler
    environment:
      template_path: 'templates/events/ec2.tpl'
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.ec2"
            detail-type:
              - "EC2 Instance State-change Notification"
            detail:
              state:
                #- pending
                - running
                #- shutting-dwon
                - stopped
                #- stopping
                #- terminated
  codebuild:
    handler: events/codebuild.handler
    environment:
      template_path: 'templates/events/codebuild.tpl'
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.codebuild"
            detail-type:
              - "CodeBuild Build State Change"
            detail:
              build-status:
                - FAILED
                - IN_PROGRESS
                - STOPPED
                - SUCCEEDED
  ecs:
    handler: events/ecs.handler
    layers:
      - {Ref: CloudWatchAlarmToSlackLambdaLayer}
    environment:
      template_path: 'templates/events/ecs.tpl'
      emoji_running: ":runner::runner:"
      emoji_stopped: ":skull_and_crossbones:"
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.ecs"
            detail-type:
              - "ECS Task State Change"
  codepipeline:
    handler: events/codepipeline.handler
    layers:
      - {Ref: CloudWatchAlarmToSlackLambdaLayer}
    environment:
      template_path: 'templates/events/codepipeline.tpl'
      emoji_started: ':seedling:'
      emoji_succeeded: ':rainbow::rainbow::rainbow:'
      emoji_failed: ":sweat_drops:"
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.codepipeline"
            detail-type:
              - "CodePipeline Pipeline Execution State Change"
            detail:
              state:
                - CANCELED
                - FAILED
                - RESUMED
                - STARTED
                - SUCCEEDED
                - SUPERSEDED
