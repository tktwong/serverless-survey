service: nerodia
package:
  individually: false

provider:
  name: aws
  stage: prod
  runtime: python3.6
  region: us-east-1

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []

resources:
  Resources:
    NerodiaRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /nerodia/
        RoleName: NerodiaRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: murdPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: "Allow"
                  Action:
                    - logs:*
                    - execute-api:*
                    - apigateway:Get
                    - api:*
                    - dynamodb:*
                  Resource: "*"
  
functions:
  nerodia_webapp:
    name: nerodia_webapp
    handler: nerodia_aws.lambda_handler
    memorySize: 128
    timeout: 30
    role:
      Fn::GetAtt:
        - NerodiaRole
        - Arn    
    events:
      - http:
          path: /webapp
          method: get
      - http:
          path: /webapp
          method: post

  nerodia_heartbeat:
    name: nerodia_heartbeat
    handler: nerodia_aws.lambda_handler
    memorySize: 128
    timeout: 30
    role:
      Fn::GetAtt:
        - NerodiaRole
        - Arn    
    events:
      - http:
          path: /heartbeat
          method: post
