# NOTE: update this with your service name
service: minions-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-2:*:*"
    - Effect: Allow
      Action:
        - ses:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

functions:
  makeReservation:
    handler: services/reservations-api/makeReservation.main
    events:
      - http:
          path: reservation
          method: put
          cors: true
  getImage:
    handler: services/minions-api/getImage.main
    events:
      - http:
          path: image/{id}
          method: get
          cors: true
  listMinions:
    handler: services/minions-api/listMinions.main
    events:
      - http:
          path: list
          method: get
          cors: true
  sendEmail:
    handler: services/email-api/sendEmail.main
    events:
      - http:
          path: confirmation
          method: post
          cors: true

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}