service:
  name: algolia-search-users

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*-${self:provider.stage}"
  environment:
    USERS_INDEX_NAME: "${env:USERS_INDEX_NAME}"
    ALGOLIA_APPLICATION_ID: "${env:ALGOLIA_APPLICATION_ID}"
    ALGOLIA_SEARCH_ONLY_API_KEY: "${env:ALGOLIA_SEARCH_ONLY_API_KEY}"
    ALGOLIA_ADMIN_API_KEY: "${env:ALGOLIA_ADMIN_API_KEY}"

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
  seed:
    handler: handler.seed
    timeout: 30
    environment:
      USERS_DB_NAME: "algolia-search-users-${self:provider.stage}"
  index:
    handler: handler.index
    timeout: 30
    environment:
      USERS_DB_NAME: "algolia-search-users-${self:provider.stage}"
  securedApiKey:
    handler: handler.securedApiKey
    events:
      - http:
          method: post
          path: api-key
          cors:
            origin: "http://localhost:3000"
            allowCredentials: true

resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "algolia-search-users-${self:provider.stage}"
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
