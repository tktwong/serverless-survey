service: premiergeek-api # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
      PROJECT_ID: ${file(./server/secrets/firebase.json):project_id}
      CLIENT_ID: ${file(./server/secrets/firebase.json):client_id}
#      PRIVATE_KEY: ${file(./server/secrets/firebase.json):private_key}
      CLIENT_EMAIL: ${file(./server/secrets/firebase.json):client_email}
      FOOTBALL_DATA_ID: "5aab4c2c6c8a4af188e5be626459fb78"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rds:*"
        - "s3:ListBucket"
      Resource: "*"
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packagerOptions:
          scripts:
            - npm rebuild grpc --target=8.1.0 --target_arch=x64 --target_platform=linux --target_libc=glibc
plugins:
  - serverless-webpack
  - serverless-offline
package:
  exclude:
    - client/**
functions:
  fixtures:
    handler: server/fixtures.main
    events:
     - http:
         path: fixtures/{id}
         method: get
         cors: true
         authorizer: aws_iam
  bets:
    handler: server/bets.placeBet
    events:
      - http:
           path: bet
           method: post
           cors: true
           authorizer: aws_iam
  users:
    handler: server/users.setUser
    events:
      - http:
          path: users
          method: post
          cors: true
          authorizer: aws_iam
  results:
    handler: server/results.main
    events:
     - http:
         path: results
         method: get
         cors: true
         authorizer: aws_iam
  matchZone:
     handler: server/matchZone.main
     events:
      - http:
          path: matchZone
          method: get
          cors: true
          authorizer: aws_iam
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
         gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
         gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
