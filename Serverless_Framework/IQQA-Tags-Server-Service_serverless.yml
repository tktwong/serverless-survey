service: ${self:custom.saasName}-${self:custom.model}


provider:
  name: aws
  region: us-east-2
  stage: DEV
  runtime: nodejs10.x
  role: arn:aws:iam::556332110707:role/LambdaBasicPrivileges
  environment: ${self:custom.environments.${opt:stage, 'DEV'}}

custom:
  saasName: 'iqqa'
  pathToHandler: "compiled/src"
  pathToJSFile: "src"
  accessKeyId: ${ssm:concise-accessKeyId~true}
  secretAccessKey: ${ssm:concise-secretAccessKey~true}
  region: ${ssm:concise-region~true}
  model: 'tags'
  createdAt: 'createdAt'
  updatedAt: 'updatedAt'
  indexA: ''
  indexB: ''
  indexC: ''
  environments:
    DEV:
      saasName: ${self:custom.saasName}
      stage: 'DEV'
      model: ${self:custom.model}
      accessKeyId: ${self:custom.accessKeyId}
      secretAccessKey: ${self:custom.secretAccessKey}
      region: ${self:custom.region}
      createdAt: ${self:custom.createdAt}
      updatedAt: ${self:custom.updatedAt}
      indexA: ${self:custom.indexA}
      indexB: ${self:custom.indexB}
      indexC: ${self:custom.indexC}
    PROD:
      saasName: ${self:custom.saasName}
      stage: 'PROD'
      model: ${self:custom.model}
      accessKeyId: ${self:custom.accessKeyId}
      secretAccessKey: ${self:custom.secretAccessKey}
      region: ${self:custom.region}
      createdAt: ${self:custom.createdAt}
      updatedAt: ${self:custom.updatedAt}
      indexA: ${self:custom.indexA}
      indexB: ${self:custom.indexB}
      indexC: ${self:custom.indexC}



plugins:
  - serverless-plugin-include-dependencies


package:
  individually: true
  exclude:
    - "*.*"
    - "src/**"
    - "compiled/**"
    - "correctModuleNames.js"
  include:
    - "*.js"



functions:

  read:
    handler: ${self:custom.pathToHandler}/read.handler
    package:
      include:
      - "${self:custom.pathToJSFile}/read.js"
    events:
      - http:
          path: read
          method: get
          cors: true
    tags:
      type: api


  update:
    timeout: 180 # optional, in seconds, default is 6
    handler: ${self:custom.pathToHandler}/update.handler
    package:
      include:
      - "${self:custom.pathToJSFile}/update"
    events:
      - http:
          path: update
          method: put
          cors: true
    tags:
      type: api


  delete:
    timeout: 180 # optional, in seconds, default is 6
    handler: ${self:custom.pathToHandler}/delete.handler
    package:
      include:
      - "${self:custom.pathToJSFile}/delete.js"
    events:
      - http:
          path: delete
          method: delete
          cors: true
    tags:
      type: api
