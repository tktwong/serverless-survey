# serverless.yml

service: ${self:custom.config.service}

plugins:
  - serverless-python-requirements
 

package:
  exclude:
    - .**/**
    - ./**
    - .**/*~
    - ./*~
  include:
    - import.py

custom:
  pythonRequirements:
    dockerizePip: non-linux
    fileName: requirements.txt
    useStaticCache: true
  config: ${file(${env:CONFIG_FILE, 'config.yml'})}



provider:
  name: aws
  runtime: python3.6
  region: us-west-1
  # timeout should be changed when we go live
  timeout: 300
  environment:
    CREDENTIAL: ${self:custom.config.credential}
    CERTIFICATE_ARN: ${self:custom.config.certificate_arn}
    EMAIL_ADDRESS: ${self:custom.config.email_address}
    RENEWAL_GRACEPERIOD: ${self:custom.config.renewal_graceperiod, '10'}
    S3_URI: ${self:custom.config.s3_uri}
  deploymentBucket: ${self:custom.config.deployment_bucket}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "acm:DescribeCertificate"
         - "acm:ImportCertificate"
       Resource: ${self:custom.config.certificate_arn}
    -  Effect: "Allow"
       Action:
         - "s3:PutObject"
       Resource: arn:aws:s3:::${self:custom.config.s3_uri}/*


      
functions:
  import:
    handler: import.serverless_handler
    events:
      - schedule: rate(1 day)
