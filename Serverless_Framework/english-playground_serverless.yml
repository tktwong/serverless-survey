service: english-playground

plugins:
  - serverless-offline
  - serverless-dynamodb-local

package:
  exclude:
    - .git/**
    - src/**
    - test/**
    - nodemon.json

custom:
  vocabulary_table: "vocabulary"
  users_table: "users"

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    REGION: ${file(.env.yml):${opt:stage, 'dev'}.REGION}
    DYNAMO_ENDPOINT: ${file(.env.yml):${opt:stage, 'dev'}.DYNAMO_ENDPOINT}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

functions:
  index:
    handler: dist/index.handler
    events:
    - http:
        cors: true
        path: '/'
        method: any
    - http:
        cors: true
        path: '/users'
        method: any  
    - http:
        cors: true
        path: '/users/login'
        method: any    
    - http:
        cors: true
        path: '{proxy+}'
        method: any
        authorizer: auth
  auth:
    handler: dist/auth/authorizer.handler
    cors: true
    integration: lambda

resources:
  Resources:
    VocabularyDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.vocabulary_table}

    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.users_table}       