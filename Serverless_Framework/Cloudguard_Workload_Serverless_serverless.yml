#Define Service Name and Provider
service: 
  name: CPWorkloadTask
provider:
  name: aws
  runtime: python3.7
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - "sns:Publish"
        - 's3:ListBucket'
        - 's3:PutObject'
        
      Resource:
        - !Ref SNSTopic

#Define function and Environment Variables
functions:
  CPWorkloadTask:
    handler: main.lambda_handler
    events:
    - http:
        path: main.lambda_handler
        method: ANY 
        integration: lambda
        request:
            template:
              text/xhtml: '{ "stage" : "$context.stage" }'
              application/json: '{ "httpMethod" : "$context.httpMethod" }'
    environment:
      SNS_ARN: !Ref SNSTopic
      

#Define SNS Topic        
resources:
  Resources:
    SNSTopic:
       Type: AWS::SNS::Topic
       Properties:
         DisplayName: CPWorkloadTask
         TopicName: CPWorkloadTask
         Subscription:
           - Protocol: Email
             Endpoint : 

#DefinePlugins
plugins:
  - serverless-cloudguard-plugin

#Define Custom Parameters
custom:
 pythonRequirements:
   dockerizePip: non-linux
 cloudguard:
    fsp:
      Enabled: true
    proact:
      Enabled: true
      StoreJobReport: true
      Features:
        PermissiveRole:
          Enabled: true
  
