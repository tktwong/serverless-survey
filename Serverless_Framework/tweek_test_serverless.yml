service: user
frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  # credentials:
  #   accessKeyId:
  #   secretAccessKey:
# you can overwrite defaults here

Description: This stack creates an IAM role that can be used by Serverless Framework Pro for use in deployments.
Resources:
  SFProRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::802587217904:root
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: "ServerlessEnterprise-J9V12zhcN0QFTVqq1c"
      Path: /
      RoleName: SFProRole-default
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  ReporterFunction:
    Type: Custom::SFProReporter
    Properties:
      ServiceToken: "arn:aws:lambda:us-east-1:802587217904:function:event-gateway-dashboard-backend-prod-saveIamRoleToProfile"
      OrgId: J9V12zhcN0QFTVqq1c
      RoleArn: arn:aws:iam::579258516853:role/SFProRole-default
      ProfileName: tweek_test
Outputs:
  SFProRoleArn:
    Description: "ARN for the IAM Role used by SF Pro"
    Value: arn:aws:iam::579258516853:role/SFProRole-default
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: The ID for the VPC in which the EC2 instance will be launched.

  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: The ID for the Subnet in which the EC2 instance will be launched.

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  createUser:
    handler: index.register
    events:
      - http:
          path: user
          method: post
          cors: true
  userlogin:
    handler: index.login
    memorySize: 128
    description: Login a user in the system.
    events:
      - http:
          path: user/login
          method: post
          cors: true
  upload:
    handler: index.uploadImage
    memorySize: 128
    description: uploadImage a image from a user.
    events:
      - http:
          path: user/upload
          method: post
          cors: true
          headers: # <-- Specify allowed headers
            - Authorization
