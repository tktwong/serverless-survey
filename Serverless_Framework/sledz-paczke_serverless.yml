service: sledz-paczke

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  profile: ${self:custom.myProfile.${self:custom.myStage}}
  region: ${self:custom.myRegion.${self:custom.myStage}}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - Ref: snsFanoutTopic
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - "*"
    - Effect: Allow
      Action: # TODO not all permissions are needed
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamoTableName}"
  
custom:
  myStage: ${opt:stage, self:provider.stage}
  myProfile:
    dev: default
    prod: default
  myRegion:
    dev: eu-west-1
    prod: eu-west-1

  snsFanoutTopicName: fanout-topic
  dynamoTableName: ${self:service}-${self:custom.myStage}

functions:
  checkPackage:
    handler: src/checkPackage/lambda.main
    description: Checks package info on website 
    memorySize: 128
    timeout: 25
    environment:
      dynamoTableName: ${self:custom.dynamoTableName}
    events:
      - sns: 
          arn: !Ref snsFanoutTopic
          topicName:  ${self:custom.snsFanoutTopicName}
  
  activePackages:
    handler: src/activePackages/lambda.main
    description: Fetch list of packages from DB and send them to SNS
    memorySize: 128
    timeout: 5
    environment:
      snsFanoutTopicArn: !Ref snsFanoutTopic
      dynamoTableName: ${self:custom.dynamoTableName}
    events:
      - schedule: cron(*/15 7-22 ? * MON-SAT *)

  sendSms:
    handler: src/sendSms/lambda.main
    description: Sends SMS message about with package update
    memorySize: 128
    timeout: 5
    environment:
      phoneNumber: ${file(secret.yml):phoneNumber}
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn: !GetAtt DynamoDbTable.StreamArn

resources:
  Resources:
    snsFanoutTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: "SledzPaczke fan-out topic"
        TopicName: ${self:custom.snsFanoutTopicName}
    
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: packageId
            AttributeType: S
        KeySchema:
          - AttributeName: packageId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamoTableName}
        StreamSpecification:
          StreamViewType: NEW_IMAGE