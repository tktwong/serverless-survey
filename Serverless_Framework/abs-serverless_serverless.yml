service: abs-serverless

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createResource:
    handler: src/resource/create.main
    events:
      - http:
          path: resources
          method: post
          cors: true
          authorizer: aws_iam
  updateResource:
    handler: src/resource/update.main
    events:
      - http:
          path: resources/{category}/{resourceId}
          method: patch
          cors: true
          authorizer: aws_iam
  deleteResource:
    handler: src/resource/delete.main
    events:
      - http:
          path: resources/{category}/{resourceId}
          method: delete
          cors: true
          authorizer: aws_iam
  getResource:
    handler: src/resource/get.main
    events: 
      - http:
          path: resources/{category}/{resourceId}
          method: get
          cors: true
  listResource:
    handler: src/resource/list.main
    events: 
      - http:
          path: resources/{category}
          method: get
          cors: true
          request:
            parameters:
              paths:
                category: false

# event functions
  createEvent:
    handler: src/event/create.main
    events:
      - http:
          path: events
          method: post
          cors: true
          authorizer: aws_iam
  listEvent:
    handler: src/event/list.main
    events:
      - http:
          path: events
          method: get
          cors: true
  getEvent:
    handler: src/event/get.main
    events:
      - http:
          path: events/{eventId}
          method: get
          cors: true
  updateEvent:
    handler: src/event/update.main
    events:
      - http:
          path: events/{eventId}
          method: patch
          cors: true
          authorizer: aws_iam
  deleteEvent:
    handler: src/event/delete.main
    events:
      - http:
          path: events/{eventId}
          method: delete
          cors: true
          authorizer: aws_iam        

# consultation functions
  createConsultation:
    handler: src/consultation/create.main
    events:
      - http:
          path: consultations
          method: post
          cors: true
  listConsultation:
    handler: src/consultation/list.main
    events:
      - http:
          path: consultations
          method: get
          cors: true
  updateConsultation:
    handler: src/consultation/update.main
    events:
      - http:
          path: consultations/{consultationId}
          method: patch
          cors: true
          authorizer: aws_iam   
  deleteConsultation:
    handler: src/consultation/delete.main
    events:
      - http:
          path: consultations/{consultationId}
          method: delete
          cors: true
          authorizer: aws_iam       

# commoninfo functions
  createCommonInfo:
    handler: src/commoninfo/create.main
    events:
      - http:
          path: commoninfos
          method: post
          cors: true
          authorizer: aws_iam   
  updateCommonInfo:
    handler: src/commoninfo/update.main
    events:
      - http:
          path: commoninfos/{commonInfoId}
          method: patch
          cors: true
          authorizer: aws_iam 
  listCommonInfo:
    handler: src/commoninfo/list.main
    events:
      - http:
          path: commoninfos
          method: get
          cors: true 
# news functions   
  createNews:
    handler: src/news/create.main
    events:
      - http:
          path: news
          method: post
          cors: true
          authorizer: aws_iam    
  updateNews:
    handler: src/news/update.main
    events:
      - http:
          path: news/{newsId}
          method: patch
          cors: true
          authorizer: aws_iam
  listNews:
    handler: src/news/list.main
    events:
      - http:
          path: news
          method: get
          cors: true 
  getNews:
    handler: src/news/get.main
    events:
      - http:
          path: news/{newsId}  
          method: get
          cors: true
  deleteNews:
    handler: src/news/delete.main
    events:
      - http:
          path: news/{newsId}
          method: delete
          cors: true
          authorizer: aws_iam 
  #other services
  search:
    handler: src/service/search.main
    events:
      - http:
          path: search
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                text: true
