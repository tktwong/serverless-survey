service: authorize
useDotenv: true
provider:
  name: openwhisk
  ignore_certs: true

functions:
  authorize-github:
    handler: authorize.github
    annotations:
      web-export: true
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  get-private-repo:
    handler: private_repo.privateRepo
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /get-private-repo
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  get-private-repo-refresh:
    handler: private_repo.privateRepoRefresh
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /get-private-repo-refresh
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  get-owned-repo:
    handler: private_repo.ownedRepo
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /get-owned-repo
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  get-profile:
    handler: private_repo.profile
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /get-profile
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm              
  sell-repo:
    handler: sell_repo.sell_repo
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: POST /sell_repo
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  unlist-repo:
    handler: sell_repo.unlist_repo
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: POST /unlist_repo
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  for-sale-repo:
    handler: sell_repo.for_sale_repo
    parameters:
      github_client_id: ${env:github_client_id}
      github_client_secret: ${env:github_client_secret}
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /for_sale_repo
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  paypal-auth:
    handler: paypal.authorize_paypal
    annotations:
      web-export: true
    parameters:
      paypal_client_id: ${env:paypal_client_id}
      paypal_client_secret: ${env:paypal_client_secret}
      frontend_url: ${env:frontend_url}
  save-paypal:
    handler: paypal.save_paypal
    parameters:
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: POST /save_paypal
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  get-paypal:
    handler: paypal.get_paypal
    parameters:
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: GET /get_paypal
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  delete-paypal:
    handler: paypal.disconnect_paypal
    parameters:
      token_pass: ${env:token_pass}
      frontend_url: ${env:frontend_url}
    events: 
      - http: POST /delete_paypal
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  buy-paypal:
    handler: manage_access.buy_paypal
    parameters:
      token_pass: ${env:token_pass}
      return_url: ${env:return_url}
      cancel_url: ${env:cancel_url}
      paypal_client_id: ${env:paypal_client_id}
      paypal_client_secret: ${env:paypal_client_secret}
      frontend_url: ${env:frontend_url}
    events: 
      - http: POST /buy_paypal
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm
  manage-access:
    handler: manage_access.manage_access
    annotations:
      web-export: true
    parameters:
      token_pass: ${env:token_pass}
      return_url: ${env:return_url}
      cancel_url: ${env:cancel_url}
      paypal_client_id: ${env:paypal_client_id}
      paypal_client_secret: ${env:paypal_client_secret}
      frontend_url: ${env:frontend_url}
    bind:
      - service:
          name: cloudantnosqldb
          instance: Cloudant-vm        
plugins:
  - serverless-openwhisk
  - serverless-dotenv-plugin
