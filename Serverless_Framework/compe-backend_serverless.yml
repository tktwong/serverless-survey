service: livescore

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpackIncludeModules: true

  dynamodb:
    start:
      migrate: true
      seed: true
      inMemory: true

    seed:
      livescore:
        sources:
          - table: ${self:provider.environment.COMPETITIONS_TABLE}
            sources: [./seeds/competitions.json]
          - table: ${self:provider.environment.ENTRIES_TABLE}
            sources: [./seeds/entries.json]
          - table: ${self:provider.environment.ROUNDS_TABLE}
            sources: [./seeds/rounds.json]
          - table: ${self:provider.environment.ROUND_ENTRIES_TABLE}
            sources: [./seeds/round_entries.json]
          - table: ${self:provider.environment.HOLES_TABLE}
            sources: [./seeds/holes.json]

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    APP_STAGE: ${opt:stage, self:provider.stage}
    COMPETITIONS_TABLE:  ${self:service}-competitions-${opt:stage, self:provider.stage}
    ENTRIES_TABLE:  ${self:service}-entries-${opt:stage, self:provider.stage}
    ROUNDS_TABLE:  ${self:service}-rounds-${opt:stage, self:provider.stage}
    ROUND_ENTRIES_TABLE:  ${self:service}-round_entries-${opt:stage, self:provider.stage}
    HOLES_TABLE:  ${self:service}-holes-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.COMPETITIONS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ROUNDS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ROUND_ENTRIES_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.HOLES_TABLE}"
functions:
  CompetitionGet:
    handler: src/resources/competitions/get.handler
    events:
      - http:
          path: competitions/{id}
          method: get
          cors: true

  EntryUpdate:
    handler: src/resources/entries/update.handler
    events:
      - http:
          path: entries/{id}
          method: put
          cors: true

  RoundEntryUpdate:
    handler: src/resources/round_entries/update.handler
    events:
      - http:
          path: round_entries/{id}
          method: put
          cors: true

resources:
  Resources:
    CompetitionsDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.COMPETITIONS_TABLE}

    EntriesDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: competition_id
            AttributeType: S
          - AttributeName: entry_number
            AttributeType: S
        KeySchema:
          - AttributeName: competition_id
            KeyType: HASH
          - AttributeName: entry_number
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ENTRIES_TABLE}

    RoundsDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: competition_id
            AttributeType: S
          - AttributeName: play_order
            AttributeType: N
        KeySchema:
          - AttributeName: competition_id
            KeyType: HASH
          - AttributeName: play_order
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ROUNDS_TABLE}

    RoundEntriesDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: competition_id
            AttributeType: S
          - AttributeName: round_entry_number
            AttributeType: S
        KeySchema:
          - AttributeName: competition_id
            KeyType: HASH
          - AttributeName: round_entry_number
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ROUND_ENTRIES_TABLE}

    HolesDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
        - AttributeName: competition_id
          AttributeType: S
        - AttributeName: hole_num
          AttributeType: N
        KeySchema:
        - AttributeName: competition_id
          KeyType: HASH
        - AttributeName: hole_num
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.HOLES_TABLE}

