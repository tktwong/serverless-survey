service: profile-service

provider:
  name: aws
  stage: ${opt:stage, 'local'}
  region: us-east-1
  runtime: nodejs10.x

  iamRoleStatements:
    - Effect: "Allow"
      Action: s3:GetObject
      Resource: arn:aws:s3:::*/*

  environment:
    mongoUri: ${self:custom.mongoUri.${self:provider.stage}}
    zaloAppId: ${self:custom.zaloAppId.${self:provider.stage}}
    zaloAppSecret: ${self:custom.zaloAppSecret.${self:provider.stage}}



plugins:
  - serverless-plugin-typescript
  - serverless-offline
  
package:
  include:
  exclude:

functions:
  socialLoginZalo:
    handler: profile/handler.socialLoginZalo
    events:
      - http:
          path: /login/zalo
          method: post
  socialLoginFacebook:
    handler: profile/handler.socialLoginFacebook
    events:
      - http:
          path: /login/facebook
          method: post
  getProfileInformation:
    handler: profile/handler.getProfileInformation
    events:
      - http:
          path: /profile/me
          method: get

custom:
  mongoUri:
    local: mongodb://localhost:27017/profile_db
    dev: ${ssm:/renthouse/profile/dev/mongoUri}
  zaloAppId:
    local: '3928719008799234603'
    dev: ${ssm:/renthouse/profile/dev/zaloAppId}
  zaloAppSecret: 
    local: NOd14FV61WA3MrJlLZkA
    dev: ${ssm:/renthouse/profile/dev/zaloAppSecret}
