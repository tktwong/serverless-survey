service: slac-rest-api-with-dynamodb

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
#       - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: loans/create.create
    events:
      - http:
          path: loans
          method: post
          cors: true

  list:
    handler: loans/list.list
    events:
      - http:
          path: loans
          method: get
          cors: true

  get:
    handler: loans/get.get
    events:
      - http:
          path: loans/{id}
          method: get
          cors: true

# update:
#   handler: loans/update.update
#   events:
#     - http:
#         path: loans/{id}
#         method: put
#         cors: true

  delete:
    handler: loans/delete.delete
    events:
      - http:
          path: loans/{id}
          method: delete
          cors: true

#Cloud Formation resource definition
resources:
  Resources:
    LoansDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
