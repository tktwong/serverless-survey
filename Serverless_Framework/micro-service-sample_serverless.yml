service: series-service # NOTE: update this with your service name

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-aws-documentation
  - serverless-aws-alias
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-aws-models

include: 
  - config/*

custom:
  webpackIncludeModules: true
  stage: ${opt:stage, self:provider.stage}
  
  tablePrefix:
    develop: DEVELOP
    release: RELEASE
    prod: PROD
  stageVariables:
    environment: ${self:custom.stage}
    version: ${self:custom.stage}
  documentation:
    summary: Series Service APIs
    description: Incudes services for Series
    resources:
      - path: /
        description: A no op.
  dynamodb:
      start:
        migrate: true
  serverless-offline:
    babelOptions:
      presets: ["es2015", "stage-2"]

provider:
  name: aws
  runtime: nodejs6.10
  stage: develop
  region: us-east-1
  role: arn:aws:iam::${file(./env.yml):${self:custom.stage}.ACCOUNT_ID}:role/${file(./env.yml):${self:custom.stage}.ROLENAME}


package:
  individually: true

functions:
  saveSeries: ${file(/config/functions.yml):saveSeries}
  getSeries: ${file(/config/functions.yml):getSeries}
  updateSeries: ${file(/config/functions.yml):updateSeries}
  deleteSeries: ${file(/config/functions.yml):deleteSeries}
    
resources:
  Description: "Stack for Series"
  Resources:
    SeriesDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: site
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: site
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: '${self:custom.tablePrefix.${self:custom.stage}}.CONTENT.SERIES'

