app: fun-done-learn
service: flask-api

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1
  memorySize: 128
  iamRoleStatements:
      - Effect: Allow
        Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:BatchGetItem"
            - "dynamodb:BatchWriteItem"
            - "dynamodb:Scan"
            - "dynamodb:Query"
        Resource:
            - "arn:aws:dynamodb:ap-norteast-1:*:*"

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-offline
functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http:
          path: ANY /
          cors:
            origin: "*"
            headers: "*"
      - http:
          path: 'ANY {proxy+}'
          cors:
            origin: "*"
            headers: "*"
custom:
  wsgi:
    app: app.main.app
    packRequirements: false
  pythonRequirements:
    usePipenv: false

resources: # CloudFormation template syntax from here on.
  Resources:
    sessions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sessions
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    activities:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: activities
        AttributeDefinitions:
          - AttributeName: session_token
            AttributeType: S
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: session_token
            KeyType: HASH
          - AttributeName: token
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    placements:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: placements
        AttributeDefinitions:
          - AttributeName: session_token
            AttributeType: S
          - AttributeName: activity_token
            AttributeType: S
        KeySchema:
          - AttributeName: session_token
            KeyType: HASH
          - AttributeName: activity_token
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    notes:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notes
        AttributeDefinitions:
          - AttributeName: session_token
            AttributeType: S
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: session_token
            KeyType: HASH
          - AttributeName: token
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    connections:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: connections
        AttributeDefinitions:
          - AttributeName: session_token
            AttributeType: S
          - AttributeName: connection_id
            AttributeType: S
          - AttributeName: expired_at
        KeySchema:
          - AttributeName: session_token
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: expired_at
          Enabled: true
