service: frontend
plugins:
  - serverless-apigw-binary
  - serverless-offline
  - serverless-domain-manager
  - serverless-certificate-creator
provider:
  name: aws
  profile: georgi-sls
  region: eu-central-1
  runtime: nodejs12.x
  memorySize: 192
  timeout: 10
package:
  exclude:
    - ./**
  include:
    - "node_modules/aws-serverless-express/**"
    - "node_modules/binary-case/**"
    - "node_modules/type-is/**"
    - "node_modules/media-typer/**"
    - "node_modules/mime-types/**"
    - "node_modules/mime-db/**"
    - "dist/**"
    - "lambda.js"

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: sls.georgi.io
    staging: staging.sls.georgi.io
  apigwBinary:
    types:
      - "*/*"
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: "${self:custom.stage}"
    certificateName: ${self:custom.customDomain.domainName}
    basePath: ''
    createRoute53Record: true
    region: eu-central-1
  #    certificateArn: ${self:custom.certificates.${self:custom.stage}}
  customCertificate:
    certificateName: ${self:custom.customDomain.domainName}
    hostedZoneNames: 'sls.georgi.io.'
    enabled: true
    region: us-east-1
    rewriteRecords: false

functions:
  api:
    handler: lambda.handler
    events:
      - http: GET {proxy+}
      - http: GET /
