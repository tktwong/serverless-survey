service: sls-eservice
frameworkVersion: "=1.32.0"

provider:
  name: aws
  runtime: python3.6
  memorySize: 128
  timeout: 30
  deploymentBucket:
    name: serverless.nikita.${self:provider.region}.deploys
    serverSideEncryption: AES256
  stage: ${opt:stage, 'stage'}
  region: eu-west-1

  vpc:
    securityGroupIds:
    - ${file(application-${self:provider.stage}.yml):sg-id}
    subnetIds: ${file(application-${self:provider.stage}.yml):subnet-ids}

  environment:
    PASSWORD_SSM_PATH: /${self:service}/DB_PASSWORD
    DB_URL: ${file(application-${self:provider.stage}.yml):connection-string}
    MAILGUN_API_KEY: ${file(application-${self:provider.stage}.yml):mailgun-api-key}
    MAILGUN_API_URL: ${file(application-${self:provider.stage}.yml):mailgun-api-url}
    MAILGUN_API_FROM: ${file(application-${self:provider.stage}.yml):mailgun-api-from}
    SPARKPOST_API_KEY: ${file(application-${self:provider.stage}.yml):sparkpost-api-key}
    SPARKPOST_API_FROM: ${file(application-${self:provider.stage}.yml):sparkpost-api-from}
    SPARKPOST_API_IS_SANDBOX: ${file(application-${self:provider.stage}.yml):sparkpost-api-is-sandbox}

  iamRoleStatements:
  - Effect: "Allow"
    Action:
    - "ssm:getParameter"
    Resource: "arn:aws:ssm:*:*:parameter/${self:service}/*"


package:
  include:
  - 'apps/**/*.py'
  - 'sql/**/*.sql'
  - '*.py'
  - 'api_docs/**/*'
  - 'rds-combined-ca-bundle.pem'
  exclude:
  - '*'
  - '*/**'

#  individually: true

functions:
  eservice:
    handler: esentrypoint.handler
    events:

    - http:
        path: /api-docs/{asset}
        method: get
        cors: true
    - http:
        path: /emails
        method: post
        cors: true
    - http:
        path: /email/{email_id}
        method: get
        cors: true
    - http:
        path: /email/{email_id}/send
        method: post
        cors: true
    - http:
        path: /mailgun/receive
        method: post
        cors: true
    - http:
        path: /sparkpost/receive
        method: post
        cors: true



custom:
  pythonRequirements:
    dockerizePip: true
    dockerFile: Dockerfile
    vendor: ./libs
    noDeploy:
    - pytest
    - boto3

plugins:
  - serverless-python-requirements
