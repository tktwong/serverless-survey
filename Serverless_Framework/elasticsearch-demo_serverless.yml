# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: elasticsearchdemo-aws

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7
  timeout: 300

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::elasticsearchdemo-data/*"

# you can define service wide environment variables here
# See README.md for information on generating these values.
  environment:
    AWS_ACCESS_KEY_ES: AQECAHg+V4P6zdFfnDAbKl4DwuKbxzktrbjPUJ71feb7JuOUxgAAAHIwcAYJKoZIhvcNAQcGoGMwYQIBADBcBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDCWdCrsyqNnOPxoN8gIBEIAvkeVQAHlHa6frSoQ0NzNntnhNru1f6iSiBFv1Ut90bi3L4Q7WB3EFPHPJYIRZN6w=
    AWS_SECRET_KEY_ES: AQECAHg+V4P6zdFfnDAbKl4DwuKbxzktrbjPUJ71feb7JuOUxgAAAIcwgYQGCSqGSIb3DQEHBqB3MHUCAQAwcAYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAwOllg0IU8UfQmfy3ICARCAQ0oSs9nHW8y9OjGR2cvVZuokqJSJPEyBSwtD/OjQ1jQd1rg6DkALm9bhKXlCWgq+itmI7wLfdSahM/KLb3XTkhCAQ4s=

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  upload:
    handler: handler.upload
    events:
      - s3:
          bucket: elasticsearchdemo-data
          event: s3:ObjectCreated:*
  aggregate:
    handler: handler.aggregate
    events:
      - http:
          path: aggregate
          method: post
  initialize:
    handler: handler.initialize
    events:
      - http:
          path: initialize
          method: get

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    ElasticsearchDomain:
      Type: "AWS::Elasticsearch::Domain"
      Properties:
        DomainName: "elasticsearch-demo"
        ElasticsearchClusterConfig:
          InstanceCount: "1"
          InstanceType: "t2.small.elasticsearch"
        EBSOptions:
          EBSEnabled: true
          Iops: 0
          VolumeSize: 20
          VolumeType: "gp2"
        ElasticsearchVersion: 1.5
        AccessPolicies:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                AWS: "*"
              Action: "es:*"
              Resource: "arn:aws:es:us-east-1:500402628989:domain/elasticsearch-demo/*"
