service: pathmaker-reparto-squadriglia-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-aws-documentation

custom:
  documentation:
    api:
      info:
        version: '1'
        title: PathMaker REST API - Reparto & Squadriglia
        description: PathMaker REST API - Reparto & Squadriglia
        contact:
          name: Matteo Giaccone
          url: https://www.pathmaker.it
          email: drjackdevelopment@gmail.com
        license:
          name: plugins from Anomaly Innovations
      tags:
        -
          name: Reparto
          description: Reparto API Endpoints - CRUD Operations for Reparto Members Administration
        -
          name: Squadriglie
          description: Squadriglie API Endpoints - CRUD Operations to handle 'Squadriglia'

    models:
      -
        name: RepartoMemberResponseSchema
        description: Schema for Reparto Member Response Template
        contentType: "application/json"
        schema:
          type: object
          properties:
            burocrazia:
              type: object
              properties:
                autorizzazione:
                  type: object
                  properties:
                    consegnato:
                      type: string
                    dataConsegnata:
                      type: string
                    documento:
                      type: string
                fogliCensimento:
                  type: object
                  properties:
                    consegnato:
                      type: string
                    dataConsegnata:
                      type: string
                    documento:
                      type: string
                privacy:
                  type: object
                  properties:
                    consegnato:
                      type: string
                    dataConsegnata:
                      type: string
                    documento:
                      type: string
                schedaSanitaria:
                  type: object
                  properties:
                    consegnato:
                      type: string
                    dataConsegnata:
                      type: string
                    documento:
                      type: string
                tesseraSanitaria:
                  type: object
                  properties:
                    consegnato:
                      type: string
                    dataConsegnata:
                      type: string
                    documento:
                      type: string
                updateBurocrazia:
                  type: integer
                censimento:
                  type: string
            censcode:
              type: string
            nome:
              type: string
            cognome:
              type: string
            mamma:
              type: object
              properties:
                cellMamma:
                  type: string
                mailMamma:
                  type: string
                nomeMamma:
                  type: string
                updateMamma:
                  type: integer
            papa:
              type: object
              properties:
                cellPapa:
                  type: string
                mailPapa:
                  type: string
                nomePapa:
                  type: string
                updatePapa:
                  type: integer
            mensili:
              type: object
              properties:
                ottobre:
                  type: string
                novembre:
                  type: string
                dicembre:
                  type: string
                gennaio:
                  type: string
                febbraio:
                  type: string
                marzo:
                  type: string
                aprile:
                  type: string
                maggio:
                  type: string
                campoExtra:
                  type: string
                accontoEstivo:
                  type: string
                saldoEstivo:
                  type: string
                updateMensili:
                  type: integer
            recapiti:
              type: object
              properties:
                casa:
                  type: string
                cellulare:
                  type: string
                indirizzo:
                  type: string
                nascita:
                  type: string
                updateRecapiti:
                  type: integer
            sentiero:
              type: object
              properties:
                anno:
                  type: string
                camminaPer:
                  type: string
                competenze:
                  type: array
                  items:
                    type: object
                    properties:
                      nomeComp:
                        type: string
                      annoComp:
                        type: string
                incarico:
                  type: string
                lavoraPer:
                  type: string
                noteSentiero:
                  type: string
                obiettivi:
                  type: array
                  items:
                    type: object
                    properties:
                      nomeObiettivo:
                        type: string
                squadriglia:
                  type: string
                updateSentiero:
                  type: integer
            updatedAt:
              type: integer
                  
      -
        name: SquadrigliaResponseSchema
        description: Schema for Squadriglia Response Template
        contentType: "application/json"
        schema:
          type: object
          properties:
            genere:
              type: string
            imgSquad:
              type: string
            lavoraPer:
              type: string
            note:
              type: string
            squadriglia:
              type: string
            updatedAt:
              type: integer
      -
        name: CreateSquadrigliaRequestModel
        description: "REQUEST - Create Squadriglia Model"
        contentType: "application/json"
        schema:
          type: object
          properties:
            genere:
              type: string
            imgSquad:
              type: string
            lavoraPer:
              type: string
            note:
              type: string
            squadriglia:
              type: string
          required:
            - squadriglia
            - genere
      -
        name: ErrorResponse
        description: "Generic Error Response Schema"
        contentType: "application/json"
        schema:
          type: object
          properties:
            body:
              type: object
            statusCode:
              type: number
      -
        name: AuthErrorResponse
        description: "ERROR - Authorization Token Missing"
        contentType: "application/json"
        schema:
          type: object
          properties:
            message:
              type: string
      -
        name: GeneralRepartoMemberResponse
        description: "GET Reparto Member Response Schema"
        contentType: "application/json"
        schema:
          type: object
          properties:
            body:
              $ref: "{{model: RepartoMemberResponseSchema}}"
            statusCode:
              type: string
      -
        name: ScanRepartoResponse
        description: "Scan Response Schema, Array of 'Reparto Member' Objects"
        contentType: "application/json"
        schema:
          type: array
          items:
            $ref: "{{model: RepartoMemberResponseSchema}}"
      -
        name: CreateRepartoMemberRequestModel
        description: "REQUEST - Create Reparto Member Model"
        contentType: "application/json"
        schema:
          type: object
          properties:
            censcode:
              type: string
            nome:
              type: string
            cognome:
              type: string
            mamma:
              type: object
              properties:
                cellMamma:
                  type: string
                mailMamma:
                  type: string
                nomeMamma:
                  type: string
            papa:
              type: object
              properties:
                cellPapa:
                  type: string
                mailPapa:
                  type: string
                nomePapa:
                  type: string
            recapiti:
              type: object
              properties:
                casa:
                  type: string
                cellulare:
                  type: string
                indirizzo:
                  type: string
                nascita:
                  type: string
            sentiero:
              type: object
              properties:
                anno:
                  type: string
                camminaPer:
                  type: string
                incarico:
                  type: string
                lavoraPer:
                  type: string
                noteSentiero:
                  type: string
                squadriglia:
                  type: string
              required:
                - squadriglia
          required:
            - nome
            - cognome
            - censcode
      -
        name: UpdateRepartoMemberModel
        description: "REQUEST BODY - Update Reparto Member Model - Nome e Cognome"
        contentType: "application/json"
        schema:
          type: object
          properties:
            nome:
              type: string
            cognome:
              type: string
          required:
            - nome
            - cognome
      -
        name: UpdateRepartoMemberMensiliModel
        description: "REQUEST BODY - Update Reparto Member Model - Mensili"
        contentType: "application/json"
        schema:
          type: object
          properties:
            ottobre:
              type: string
            novembre:
              type: string
            dicembre:
              type: string
            gennaio:
              type: string
            febbraio:
              type: string
            marzo:
              type: string
            aprile:
              type: string
            maggio:
              type: string
            campoExtra:
              type: string
            accontoEstivo:
              type: string
            saldoEstivo:
              type: string
      -
        name: UpdateRepartoMemberSentieroModel
        description: "REQUEST BODY - Update Reparto Member Model - Sentiero"
        contentType: "application/json"
        schema:
          type: object
          properties:
            anno:
              type: string
            camminaPer:
              type: string
            incarico:
              type: string
            lavoraPer:
              type: string
            noteSentiero:
              type: string
            squadriglia:
              type: string
          required:
            - squadriglia
      -
        name: UpdateRepartoMemberRecapitiModel
        description: "REQUEST BODY - Update Reparto Member Model - Recapiti"
        contentType: "application/json"
        schema:
          type: object
          properties:
            casa:
              type: string
            cellulare:
              type: string
            indirizzo:
              type: string
            nascita:
              type: string
      -
        name: UpdateRepartoMemberMammaModel
        description: "REQUEST BODY - Update Reparto Member Model - Mamma"
        contentType: "application/json"
        schema:
          type: object
          properties:
            cellMamma:
              type: string
            mailMamma:
              type: string
            nomeMamma:
              type: string
      -
        name: UpdateRepartoMemberPapaModel
        description: "REQUEST BODY - Update Reparto Member Model - Papa"
        contentType: "application/json"
        schema:
          type: object
          properties:
            cellPapa:
              type: string
            mailPapa:
              type: string
            nomePapa:
              type: string
      -
        name: UpdateRepartoMemberBurocraziaModel
        description: "REQUEST BODY - Update Reparto Member Model - Burocrazia"
        contentType: "application/json"
        schema:
          type: object
          properties:
            censimentoAutorizzazione:
              type: object
              properties:
                consegnato:
                  type: string
                dataConsegna:
                  type: string
                documento:
                  type: string
            censimentoDocumento:
              type: object
              properties:
                consegnato:
                  type: string
                dataConsegna:
                  type: string
                documento:
                  type: string
            privacyDocumento:
              type: object
              properties:
                consegnato:
                  type: string
                dataConsegna:
                  type: string
                documento:
                  type: string
            ssDocumento:
              type: object
              properties:
                consegnato:
                  type: string
                dataConsegna:
                  type: string
                documento:
                  type: string
            tsDocumento:
              type: object
              properties:
                consegnato:
                  type: string
                dataConsegna:
                  type: string
                documento:
                  type: string
            censimento:
              type: string
      -
        name: AddRepartoMemberObiettivoModel
        description: "REQUEST BODY - Update Reparto Member Model - Add Obiettivo"
        contentType: "application/json"
        schema:
          type: object
          properties:
            nomeObiettivo:
              type: string
            noteObiettivo:
              type: string
          required:
            - nomeObiettivo
      -
        name: DeleteRepartoMemberObiettivoModel
        description: "REQUEST BODY - Update Reparto Member Model - Add Obiettivo"
        contentType: "application/json"
        schema:
          type: object
          properties:
            obIndex:
              type: string
          required:
            - obIndex
      -
        name: AddRepartoMemberCompetenzaModel
        description: "REQUEST BODY - Update Reparto Member Model - Delete Obiettivo"
        contentType: "application/json"
        schema:
          type: object
          properties:
            nomeCompetenza:
              type: string
            anno:
              type: string
          required:
            - nomeCompetenza
            - anno
      -
        name: DeleteRepartoMemberCompetenzaModel
        description: "REQUEST BODY - Update Reparto Member Model - Delete Competenza"
        contentType: "application/json"
        schema:
          type: object
          properties:
            compIndex:
              type: string
          required:
            - compIndex
      -
        name: SquadrigliaResponse
        description: "REQUEST - Create Squadriglia Model"
        contentType: "application/json"
        schema:
          type: object
          properties:
            body: 
              $ref: "{{model: SquadrigliaResponseSchema}}"
            statusCode:
              type: string
      -
        name: ScanSquadrigliaResponse
        description: "LIST - Squadriglia Scan Response Schema"
        contentType: "application/json"
        schema:
          type: array
          items:
            $ref: "{{model: SquadrigliaResponseSchema}}"
      -
        name: UpdateSquadrigliaModel
        description: "REQUEST BODY - Update Squadriglia Model"
        contentType: "application/json"
        schema:
          type: object
          properties:
            genere:
              type: string
            lavoraPer:
              type: string
            note:
              type: string
            imgSquad:
              type: string

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: eu-central-1

  environment:
    tableNameReparto: PathMaker_Reparto
    tableNameSquadriglie: PathMaker_Squadriglie

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:280343356630:table/*"

functions:

#APIS FOR REPARTO TABLE
  createMember:
    handler: createMember.main #OK!
    events:
      - http:
          path: reparto 
          method: post
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "CREATE REPARTO MEMBER - Request Body needed"
            tags:
              - "Reparto"
            description: "POST Method, Create new Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers.'\n''Squadriglia' must be equal to existing one.'\n''Censcode' is required and cannot be changed in future"
            requestModels:
              "application/json": CreateRepartoMemberRequestModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"


  getMember:
    handler: getMember.main #OK!
    events:
      - http:
          path: reparto/{censcode}
          method: get
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "GET REPARTO MEMBER"
            tags:
              - "Reparto"
            description: "GET Method, get specific CENSCODE Reparto Member"
            requestBody:
              description: "No Body needed for this API Call.'\n'Returns entire Reparto Member information"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to get"
                required: true
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updateMainMember:
    handler: updateMember.main #OK!
    events:
      - http:
          path: reparto/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Nome & Cognome - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Nome & Cognome of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"
          

  updateMensiliMember:
    handler: updateMember.mensili #OK!
    events:
      - http:
          path: reparto/mensili/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Mensili - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Mensili of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberMensiliModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updateSentieroMember:
    handler: updateMember.sentiero #OK!
    events:
      - http:
          path: reparto/sentiero/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Sentiero - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Sentiero of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberSentieroModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updateRecapitiMember:
    handler: updateMember.recapiti #OK!
    events:
      - http:
          path: reparto/recapiti/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Recapiti - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Recapiti of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberRecapitiModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updateMammaMember:
    handler: updateMember.mamma #OK!
    events:
      - http:
          path: reparto/mamma/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Mamma - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Mamma of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberMammaModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updatePapaMember:
    handler: updateMember.papa #OK!
    events:
      - http:
          path: reparto/papa/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Papa - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Papa of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberPapaModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  updateBurocraziaMember:
    handler: updateMember.burocrazia #OK!
    events:
      - http:
          path: reparto/burocrazia/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Burocrazia - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Update Burocrazia of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": UpdateRepartoMemberBurocraziaModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  deleteMember:
    handler: deleteMember.main #OK!
    events:
      - http:
          path: reparto/{censcode}
          method: delete
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "DELETE REPARTO MEMBER"
            tags:
              - "Reparto"
            description: "DELETE Method, deletes Reparto Member"
            requestBody:
              description: "No Body needed for this API Call"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to delete"
                required: true
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  scanMember:
    handler: scanMember.main #OK!
    events:
      - http:
          path: reparto/scan
          method: get
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "SCAN REPARTO MEMBERS"
            tags:
              - "Reparto"
            description: "GET Method for each DynamoDB Table element, gets all Reparto Members in array form"
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ScanRepartoResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  #scanMemberSquad:
  #  handler: scanMember.memberSquad #OK!
  #  events:
  #    - http:
  #        path: reparto/scan/squad
  #        method: get
  #        cors: true
  #        authorizer: aws_iam

  addMemberObiettivo:
    handler: updateMember.addObiettivo
    events:
      - http:
          path: reparto/sentiero/addobiettivo/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Add Obiettivo - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Add Obiettivo of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": AddRepartoMemberObiettivoModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  addMemberCompetenza:
    handler: updateMember.addCompetenza
    events:
      - http:
          path: reparto/sentiero/addcompetenza/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE REPARTO MEMBER - Add Competenza - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Add Competenza of Reparto Member in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": AddRepartoMemberCompetenzaModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  deleteMemberObiettivo:
    handler: updateMember.deleteObiettivo
    events:
      - http:
          path: reparto/sentiero/deleteobiettivo/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "DELETE OBIETTIVO - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Delete Obiettivo of Reparto Member in DynamoDB Table"
            requestBody:
              description: "obIndex -> Progressive number associated with 'obiettivo'"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": DeleteRepartoMemberObiettivoModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  deleteMemberCompetenza:
    handler: updateMember.deleteCompetenza
    events:
      - http:
          path: reparto/sentiero/deletecompetenza/{censcode}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "DELETE COMPETENZA - Request Body needed"
            tags:
              - "Reparto"
            description: "PUT Method, Delete Competenza of Reparto Member in DynamoDB Table"
            requestBody:
              description: "compIndex -> Progressive number associated with 'competenza'"
            pathParams:
              -
                name: "censcode"
                description: "CENSCODE of the Reparto Member you want to update"
                required: true
            requestModels:
              "application/json": DeleteRepartoMemberCompetenzaModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "GeneralRepartoMemberResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"
          



#APIS FOR SQUADRIGLIA TABLE
  createSquadriglia:
    handler: createSquadriglia.main #OK!
    events:
      - http:
          path: squadriglie
          method: post
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "CREATE SQUADRIGLIA - Request Body needed"
            tags:
              - "Squadriglie"
            description: "POST Method, creates New Squadriglia"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            requestModels:
              "application/json": CreateSquadrigliaRequestModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "SquadrigliaResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"
          
  getSquadriglia:
    handler: getSquadriglia.main #OK!
    events:
      - http:
          path: squadriglie/{squadriglia}
          method: get
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "GET SQUADRIGLIA"
            tags:
              - "Squadriglie"
            description: "GET Method, get specific Squadriglia informations"
            requestBody:
              description: "No Body needed for this API Call"
            pathParams:
              -
                name: "id"
                description: "SQUADRIGLIA you want to get"
                required: true
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "SquadrigliaResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"
  
  updateSquadriglia:
    handler: updateSquadriglia.main #OK!
    events:
      - http:
          path: squadriglie/{squadriglia}
          method: put
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "UPDATE SQUADRIGLIA - Request Body needed"
            tags:
              - "Squadriglie"
            description: "PUT Method, Update Squadriglia in DynamoDB Table"
            requestBody:
              description: "All fields must be filled during the API call, otherwise previous values are set by default as below.'\n'- 'N/A' for strings'\n'- '00' for numbers"
            pathParams:
              -
                name: "squadriglia"
                description: "SQUADRIGLIA you want to update"
                required: true
            requestModels:
              "application/json": CreateSquadrigliaRequestModel
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "SquadrigliaResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  deleteSquadriglia:
    handler: deleteSquadriglia.main #OK!
    events:
      - http:
          path: squadriglie/{squadriglia}
          method: delete
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "DELETE SQUADRIGLIA"
            tags:
              - "Squadriglie"
            description: "DELETE Method, deletes Squadriglia"
            requestBody:
              description: "No Body needed for this API Call"
            pathParams:
              -
                name: "squadriglia"
                description: "SQUADRIGLIA you want to delete"
                required: true
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "SquadrigliaResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

  scanSquadriglie:
    handler: scanSquadriglie.main #OK!
    events:
      - http:
          path: squadriglie/scan
          method: get
          cors: true
          authorizer: aws_iam
          documentation:
            summary: "SCAN SQUADRIGLIE"
            tags:
              - "Squadriglie"
            description: "GET Method for each DynamoDB Table element, gets all Squadriglia in array form"
            methodResponses:
            -
              statusCode: "200"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ScanSquadrigliaResponse"
            -
              statusCode: "403"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "AuthErrorResponse"
            -
              statusCode: "500"
              responseHeaders:
                -
                  name: "Access-Control-Allow-Origin"
                  description: "\"*\""
                  type: "string"
                -
                  name: "Access-Control-Allow-Credentials"
                  description: "true"
                  type: "string"
              responseModels:
                "application/json": "ErrorResponse"

resources:
  - ${file(resources/api-gateway-errors.yml)}