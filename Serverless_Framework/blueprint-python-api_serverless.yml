service: blueprint-python-api

plugins:
  - serverless-python-requirements
  # - serverless-iam-roles-per-function

custom:
  pythonRequirements:
    dockerizePip: non-linux
    # useDownloadCache: false
    # useStaticCache: false
    # slim: true
    individually: true
    # fileName: requirements.txt
    # zip: true
    # slim: true
    noDeploy:
      - numpy
      - opencv-python-headless
      - boto3
  serverless-iam-roles-per-function:
    defaultInherit: true


package:
  individually: true
  # Exclude files to decrease packaging size. If you don't do this
  # it will get stuck on 'excluding dependencies' on deploy
  exclude:
    - venv/**
    - node_modules/**

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
        - s3:*
      Resource: 
        - "arn:aws:dynamodb:us-east-1:*:*"
        - "arn:aws:s3:::blueprint-mockupgenerator-logo-upload/*"
        - "arn:aws:s3:::blueprint-mockupgenerator-logo-upload"
    

functions:
  getMockup:
    handler: getMockup.main
    module: getMockup
    package:
      include:
        - getMockup/*
    events:
      - http:
          path: getMockup
          method: get
  
  getEvent:
    handler: getEvent.main
    module: getEvent
    package:
      include:
        - getEvent/*
    events:
      - http:
          path: getEvent
          method: get


  test:
    handler: test.main
    layers: arn:aws:lambda:us-east-1:584821610629:layer:image-layer:3
    module: test
    package:
      include:
        - test/*
    events:
      - http:
          path: test
          method: get
  
  runMockGen:
    handler: runMockGen.main
    layers: arn:aws:lambda:us-east-1:584821610629:layer:image-layer:3
    module: runMockGen
    iamRoleStatementsInherit: true
    package:
      include:
        - runMockGen/*
    events:
      - http:
          path: gen
          method: get
          cors: true
          authorizer: aws_iam


resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}

    # - Effect: Allow
    #   Action:
    #     - "s3:PutObject"
    #     - "s3:GetObject"
    #   Resource: "arn:aws:s3:::blueprint-mockupgenerator-logo-upload/*"