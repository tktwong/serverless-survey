# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: menkui-api
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.8
  region: ap-northeast-1
  profile: yadayuki
  deploymentBucket:
    name: ${cf:${self:custom.prefix}-${self:custom.stage}-s3.ServerlessBucket}
  environment: 
    IMAGE_BUCKET_NAME: ${self:custom.prefix}-${self:custom.stage}-serverless-image
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::${cf:${self:custom.prefix}-${self:custom.stage}-s3.ServerlessImageBucket}"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::${cf:${self:custom.prefix}-${self:custom.stage}-s3.ServerlessImageBucket}/*"
   
plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-wsgi

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: ANY {proxy+}
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
custom:
  stage: ${opt:stage,self:provider.stage}
  prefix: menkui
  wsgi:
    app: api.app