# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: reloby-app-api

# Use serverless-webpack plugin to transpile ES6/ES7
plugins:
  - serverless-webpack

# Enable auto-packing of external modules
custom:
  webpackIncludeModules: true

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: us-west-2

  # 'iamRoleStatement' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

# you can overwrite defaults here
#  stage: dev
#  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /cities
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate the api via Cognito User Pool. Update the 'arn'
  #     with your own User Pool ARN
  create:
    handler: create.main
    events:
      - http:
          path: cities
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:240930616989:userpool/us-west-2_WHakSYYqu

  get:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /cities/{id}
    # - method: GET request
    handler: get.main
    events:
      - http:
          path: cities/{id}
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:240930616989:userpool/us-west-2_WHakSYYqu

  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /cities
    # - method: GET request
    handler: list.main
    events:
      - http:
          path: cities
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:240930616989:userpool/us-west-2_WHakSYYqu

  update:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: update.main
    events:
      - http:
          path: cities/{id}
          method: put
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:240930616989:userpool/us-west-2_WHakSYYqu

  delete:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: delete.main
    events:
      - http:
          path: cities/{id}
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-west-2:240930616989:userpool/us-west-2_WHakSYYqu
