# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-nodejs # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
plugins:
  - serverless-offline
  - serverless-plugin-existing-s3

provider:
  name: aws
  stage: dev
  region: us-east-1
  profile: default
  runtime: nodejs6.10
  memorySize: 256
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
       Fn::Join:
        - ""
        - - "*"
# you can add statements to the Lambda function's IAM Role here


# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  cool:
    handler: handler.cool

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - s3:
          bucket: nylnda-testing-s3
#          bucket: nylndamedia-dev-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: texts/
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here

#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
