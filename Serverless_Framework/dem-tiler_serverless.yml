service: dem-tiler

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'production'}
  region: ${opt:region, 'us-east-1'}
  httpApi:
    cors: true

  deploymentBucket: ${opt:bucket}

  apiGateway:
    binaryMediaTypes:
      - '*/*'
    minimumCompressionSize: 1

  # Add other buckets here if needed
  iamRoleStatements:
  -  Effect: "Allow"
     Action:
       - "s3:GetObject"
       - "s3:HeadObject"
     Resource:
       - "arn:aws:s3:::*"

package:
  artifact: package.zip

functions:
  app:
    handler: dem_tiler.handlers.app.app
    memorySize: 2048
    timeout: 10
    layers:
      # geolayer
      # https://github.com/lambgeo/geo-layer
      - arn:aws:lambda:${self:provider.region}:524387336408:layer:gdal24-py37-geolayer:1
      # tippecanoe-lambda
      # https://github.com/kylebarron/tippecanoe-lambda
      - arn:aws:lambda:${self:provider.region}:961053664803:layer:tippecanoe-lambda:1
    environment:
      CACHE_CONTROL: ${opt:cache-control, 'max-age=3600'}
      CPL_TMPDIR: /tmp
      GDAL_CACHEMAX: 25%
      GDAL_DATA: /opt/share/gdal
      GDAL_DISABLE_READDIR_ON_OPEN: EMPTY_DIR
      GDAL_HTTP_MERGE_CONSECUTIVE_RANGES: YES
      GDAL_HTTP_MULTIPLEX: YES
      GDAL_HTTP_VERSION: 2
      MAX_THREADS: 10
      MOSAIC_DEF_BUCKET: ${opt:bucket}
      PROJ_LIB: /opt/share/proj
      PYTHONWARNINGS: ignore
      VSI_CACHE: TRUE
      VSI_CACHE_SIZE: 536870912
    events:
      - httpApi:
          path: /{proxy+}
          method: '*'
