service: streams

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    EPHEMERAL_ACTIVE_STREAMS: ephemeral-active-streams-${opt:stage, self:provider.stage} # ephemeral list of streams
    AGGREGATED_STREAMS_STATUS: aggregated-streams-status-${opt:stage, self:provider.stage} # aggregated, not super up to date stream statuses
    MAX_ALLOWED_STREAMS: 3 # max number of streams user is allowed to open
    STREAM_EXPIRY: 60 # in seconds
  defaults:
    stage: dev
    region: eu-west-1

package:
  individually: true
  exclude:
    - lib/**
    - functions/**

custom:
  webpackIncludeModules: true,
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      sharedDb: true
    migration:
      dir: offline/dynamodbSchema

functions:
  open-stream:
    handler: src/functions/open-stream/index.run
    events:
      - http:
          method: POST
          path: v1/open-stream

  ping-stream:
    handler: src/functions/ping-stream/index.run
    events:
      - http:
          method: POST
          path: v1/ping-stream

  close-stream:
    handler: src/functions/close-stream/index.run
    events:
      - http:
          method: POST
          path: v1/close-stream

resources:
  Resources:
    AggregatedStreamsStatusTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.AGGREGATED_STREAMS_STATUS}

    EphemeralActiveStreamsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: stream_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: stream_id
            KeyType: HASH
        GlobalSecondaryIndexes:
            - IndexName: user_id
              KeySchema:
                - AttributeName: user_id
                  KeyType: HASH
              Projection:
                ProjectionType: ALL
              ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.EPHEMERAL_ACTIVE_STREAMS}