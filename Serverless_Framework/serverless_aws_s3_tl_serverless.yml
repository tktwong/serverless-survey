service: hw
frameworkVersion: '1'

plugins:
  - serverless-python-requirements

custom:
  tableName: 'users-table-${self:provider.stage}'
  s3bucketName: 'ak-sls-bucket3'
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.8
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:GetBucketNotification"
        - "s3:PutBucketNotification"
      Resource: arn:aws:s3:::${self:custom.s3bucketName}/*
  environment:
      USERS_TABLE: ${self:custom.tableName}

functions:
  hello:
    handler: handler.load_data
    events:
      - s3:
          bucket: ${self:custom.s3bucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
#          existing: true

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S

        KeySchema:
          - AttributeName: userId
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        TableName: ${self:custom.tableName}