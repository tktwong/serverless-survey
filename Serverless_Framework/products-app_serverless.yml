service: products-app
#app: your-app-name
#tenant: your-tenant-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  environment:
    PRODUCTS_TABLE: products-table-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PRODUCTS_TABLE}"

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          method: post
          path: products
          cors: true

  listProducts:
    handler: handler.listProducts
    events:
      - http:
          method: get
          path: products
          cors: true

  getProduct:
    handler: handler.getProduct
    events:
      - http:
          method: get
          path: products/{pid}
          cors: true

  updateProduct:
    handler: handler.updateProduct
    events:
      - http:
          method: put
          path: products/{pid}
          cors: true

  deleteProduct:
    handler: handler.deleteProduct
    events:
      - http:
          method: delete
          path: products/{pid}
          cors: true

resources:
  Resources:
    ProductsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.PRODUCTS_TABLE}
        AttributeDefinitions:
          -
            AttributeName: pid
            AttributeType: S
        KeySchema:
          -
            AttributeName: pid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
