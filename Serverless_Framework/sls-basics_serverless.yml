service: sls-basics

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  memorySize: 128
  timeout: 300
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamoDB:*"
      Resource: "*"

package:
  individually: true
  exclude:
    - "**/.eggs/**"
    - "**/.pytest_cache/**"
    - "**/*.egg-info/**"
    - "**/tests/**"
    - "**/__pycache__/**"
    - "**/*.iml"
    - "**/setup.py"
    - "**/test_*.py"
    - "**/*_test.py"

functions:
  scraper:
    handler: lambda_handler.handle
    module: scraper
    memorySize: 512
    environment:
      SCRAPED_ADVERTS_TABLE: ScrapedAdverts-${opt:stage, self:provider.stage}
    events:
      - schedule: cron(0 6,12,18 * * ? *)
    vendor: ./utils # workaround for including common libs, since package.include has a bug and not working when it package.individually is set to true
  adverts_controller:
    handler: lambda_handler.handle
    module: adverts_controller
    environment:
      FILTERED_ADVERTS_TABLE: FilteredAdverts-${opt:stage, self:provider.stage}
    events:
      - http:
          path: adverts/get
          method: get
    vendor: ./utils
  db_cleaner:
    handler: lambda_handler.handle
    module: db_cleaner
    environment:
      SCRAPED_ADVERTS_TABLE: ScrapedAdverts-${opt:stage, self:provider.stage}
    events:
      - schedule: cron(0 3 * * ? *)
    vendor: ./utils
  aggregator:
    handler: lambda_handler.handle
    module: aggregator
    environment:
      SCRAPED_ADVERTS_TABLE: ScrapedAdverts-${opt:stage, self:provider.stage}
      FILTERED_ADVERTS_TABLE: FilteredAdverts-${opt:stage, self:provider.stage}
    events:
      - schedule: cron(0/30 6-8,12-14,18-20 * * ? *)
    vendor: ./utils
  truncate_db:
    handler: lambda_handler.handle
    module: truncate_db
    vendor: ./utils

custom:
  pythonRequirements:
    dockerizePip: true
  client:
    bucketName: adverts-website-bucket
    distributionFolder: client/dist
    indexDocument: index.html
    errorDocument: error.html

resources:
  Resources:
    advertisementsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ScrapedAdverts-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: title_hash
            AttributeType: S
        KeySchema:
          - AttributeName: title_hash
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    filteredAdvertisementsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FilteredAdverts-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: title_hash
            AttributeType: S
        KeySchema:
          - AttributeName: title_hash
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

plugins:
  - serverless-python-requirements
  - serverless-finch
