service: countemfor

provider:
  name: aws
  runtime: python3.7
  region: us-west-2
  environment:
    API_KEY: ${self:custom.secrets.API_KEY}
    API_SECRET: ${self:custom.secrets.API_SECRET}
    ACCESS_TOKEN: ${self:custom.secrets.ACCESS_TOKEN}
    SECRET_TOKEN: ${self:custom.secrets.SECRET_TOKEN}
    SQS_NAME: ${self:custom.sqs}
    SQS_URL:
      Ref: ProcessQueue
    TWITTER_MAX_COUNT: 200
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:DeleteMessage
        - sqs:ReceiveMessage
        - sqs:SendMessage
        - sqs:ListQueueTags
        - sqs:TagQueue
      Resource:
        Fn::GetAtt:
          - ProcessQueue
          - Arn

package:
  exclude:
    - secrets.yml

custom:
  pythonRequirements:
    dockerizePip: true
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  secrets: ${file(secrets.yml):default}
  prefix: ${self:custom.stage}-${self:service}
  sqs: ${self:custom.prefix}-queue

functions:
  process:
    handler: functions/process.handler
    reservedConcurrency: 10
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ProcessQueue
              - Arn

  worker:
    handler: functions/worker.handler
    events:
      - schedule: rate(1 minute)

plugins:
  - serverless-python-requirements
  - serverless-plugin-include-dependencies

resources:
  Resources:
    ProcessQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}
