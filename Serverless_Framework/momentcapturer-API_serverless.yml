# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: api
# app and org for use with dashboard.serverless.com
app: api-server
org: venkatsuresh

provider:
  name: aws
  runtime: nodejs10.x
  logs:
    restApi: true

plugins:
  - serverless-domain-manager

custom:
  cognitoConfig: ${file(./config/config.json)}
  customDomain:
    domainName: api.momentcapturer.com
    certificateName: "api.momentcapturer.com"
    stage: ${self:provider.stage}
    createRoute53Record: true
    # endpointType: "regional"

functions:
  csr:
    handler: csr.process
    memorySize: 1536
    timeout: 10
    events:
      - http:
          path: csr
          method: post
          cors: true
          authorizer:
            name: CognitoAuthorizer
            arn: arn:aws:cognito-idp:${self:custom.cognitoConfig.COGNITO_REGION}:${self:custom.cognitoConfig.COGNITO_ACCOUNT_ID}:userpool/${self:custom.cognitoConfig.COGNITO_USERPOOL_ID}
            identitySource: method.request.header.Authorization
            type: COGNITO_USER_POOLS
  getData:
    handler: dynamo.getData
    events:
      - http:
          path: getData
          method: get
          cors: true
  editImageMetadata:
    handler: editImage.process
    events:
      - http:
          path: editImageMetadata
          method: post
          cors: true
          authorizer:
            name: CognitoAuthorizer
            arn: arn:aws:cognito-idp:${self:custom.cognitoConfig.COGNITO_REGION}:${self:custom.cognitoConfig.COGNITO_ACCOUNT_ID}:userpool/${self:custom.cognitoConfig.COGNITO_USERPOOL_ID}
            identitySource: method.request.header.Authorization
            type: COGNITO_USER_POOLS
  deleteImage:
    handler: deleteImage.process
    events:
      - http:
          path: deleteImage
          method: post
          cors: true
          authorizer:
            name: CognitoAuthorizer
            arn: arn:aws:cognito-idp:${self:custom.cognitoConfig.COGNITO_REGION}:${self:custom.cognitoConfig.COGNITO_ACCOUNT_ID}:userpool/${self:custom.cognitoConfig.COGNITO_USERPOOL_ID}
            identitySource: method.request.header.Authorization
            type: COGNITO_USER_POOLS
