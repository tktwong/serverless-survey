service: sls-todo-backend

provider:
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  memorySize: 512
  timeout: 30
  logRetentionInDays: 3
  versionFunctions: false
  deploymentBucket: # S3にバケットが乱立するのを防ぐためにやってるが無理に設定しなくてもいい
    name: gm-serverless-sandbox
  stage: ${opt:stage, 'dev'}
  environment:
    DEPLOY_STAGE: ${opt:stage, 'dev'}
    DYNAMODB_TABLE: sls-todo-backend
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "*"
      Resource:
        - "${env:USER_POOL_IAM}"
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

plugins:
  - serverless-prune-plugin
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  prune:
    automatic: true
    number: 3

package:
  exclude:
    - .git/**
    - src/**
  excludeDevDependencies: false

resources:
  Resources:
    ResourcesDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        TableName: sls-todo-backend
        AttributeDefinitions:
          - AttributeName: userID
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: userID
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  getItems:
    description: 一覧取得
    handler: src/todo/index.getItems
    events:
      - http:
          path: todo
          method: get
          cors: true
          authorizer:
            arn: ${env:USER_POOL_ARN}
  getItem:
    description: 取得
    handler: src/todo/index.getItem
    events:
      - http:
          path: todo/{id}
          method: get
          cors: true
          authorizer:
            arn: ${env:USER_POOL_ARN}
  createItem:
    description: 作成
    handler: src/todo/index.createItem
    events:
      - http:
          path: todo
          method: post
          cors: true
          authorizer:
            arn: ${env:USER_POOL_ARN}
  updateItem:
    description: 更新
    handler: src/todo/index.updateItem
    events:
      - http:
          path: todo/{id}
          method: put
          cors: true
          authorizer:
            arn: ${env:USER_POOL_ARN}
  deleteItem:
    description: 削除
    handler: src/todo/index.deleteItem
    events:
      - http:
          path: todo/{id}
          method: delete
          cors: true
          authorizer:
            arn: ${env:USER_POOL_ARN}
