service: demo-cms-sls
app: demo-cms-sls-app
org: kampeet

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 8888

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ap-southeast-1

corsConfig: &cors
  cors:
    origin: '*'
    headers:
      - Content-Type
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - X-Amz-User-Agent
      - x-localization
    allowCredentials: false

functions:
  authorize:
    handler: src/handler/auth.authorize

  login:
    handler: src/handler/auth.login
    events:
      - http:
          path: login
          method: post
          <<: *cors

  me:
    handler: src/handler/auth.me
    events:
      - http:
          path: me
          method: get
          authorizer: authorize
          <<: *cors

  createUser:
    handler: src/handler/user.create
    events:
      - http:
          path: users
          method: post
          <<: *cors

  getUserList:
    handler: src/handler/user.getList
    events:
      - http:
          path: users
          method: get
          authorizer: authorize
          <<: *cors

  editUser:
    handler: src/handler/user.edit
    events:
      - http:
          path: users/{id}/edit
          method: get
          authorizer: authorize
          <<: *cors

  updateUser:
    handler: src/handler/user.update
    events:
      - http:
          path: users/{id}/update
          method: put
          authorizer: authorize
          <<: *cors

  deleteUser:
    handler: src/handler/user.remove
    events:
      - http:
          path: users/{id}/delete
          method: delete
          authorizer: authorize
          <<: *cors

  getUser:
    handler: src/handler/user.getInfo
    events:
      - http:
          path: users/{id}
          method: get
          authorizer: authorize
          <<: *cors

  createProduct:
    handler: src/handler/product.create
    events:
      - http:
          path: products
          method: post
          authorizer: authorize
          <<: *cors

  getProductList:
    handler: src/handler/product.getList
    events:
      - http:
          path: products
          method: get
          authorizer: authorize
          <<: *cors

  updateProduct:
    handler: src/handler/product.update
    events:
      - http:
          path: products/{id}/update
          method: put
          authorizer: authorize
          <<: *cors

  deleteProduct:
    handler: src/handler/product.remove
    events:
      - http:
          path: products/{id}/delete
          method: delete
          authorizer: authorize
          <<: *cors

  getProduct:
    handler: src/handler/product.getInfo
    events:
      - http:
          path: products/{id}
          method: get
          authorizer: authorize
          <<: *cors
