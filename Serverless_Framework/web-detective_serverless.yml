service: web-detective

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-west-2

  environment:
    BUCKET_NAME: ${self:service}-${self:provider.stage}-uploads
    TABLE_NAME: ${self:service}-${self:provider.stage}-titles
    URL_TABLE_NAME: ${self:service}-${self:provider.stage}-urls

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-2:159112706453:table/*"
    - Effect: "Allow"
      Action:
        - s3:*
      Resource: "arn:aws:s3:::web-detective-dev-uploads/*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
        - lambda:AWSLambdaBasicExecutionRole
        - lambda:AWSLambda*/
      Resource: "arn:aws:lambda:eu-west-2:159112706453:function:web-detective-dev-get_url_given_identifier"
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
       - dynamodb:DescribeStream
       - dynamodb:GetRecords
       - dynamodb:GetShardIterator
       - dynamodb:ListStreams
       - logs:CreateLogGroup
       - logs:CreateLogStream
       - logs:PutLogEvents
      Resource: "arn:aws:dynamodb:eu-west-2:159112706453:table/*"




functions:
  document_crawler:
    handler: handler.document_crawler
    events:
      - http:
          path: scrape
          method: get

  post_url_and_identity:
    handler: handler.post_url_and_identity
    events:
      - http:
          path: get/url
          method: get

  get_url_given_identifier:
    handler: handler.get_url_given_identifier
    events:

  dynamo_trigger_stream:
    handler: handler.dynamo_trigger_stream
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - URLsTable
              - StreamArn

resources:
  Resources:
    uploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-uploads

    titlesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-titles
        AttributeDefinitions:
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: title
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    URLsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-urls
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE


