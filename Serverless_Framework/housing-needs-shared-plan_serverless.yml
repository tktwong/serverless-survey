service: hn-shared-plan

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}
  environment:
    PLANS_TABLE: '${self:service}-${self:provider.stage}-plans'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: '*'

package:
  individually: true
  exclude:
    - ./**

functions:
  hn-shared-plan:
    name: ${self:service}-${self:provider.stage}
    handler: router/lambda.handler
    package:
      include:
        - router/**
        - next.config.js
        - lib/**
        - pages/**
        - public/**
        - build/_next/**
        - node_modules/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
          authorizer: ${self:custom.authorizer.${self:service}-authorizer}
      - http: ANY /
      - http: ANY /{proxy+}
    environment:
      ENV: ${self:provider.stage}
      ALLOWED_GROUPS: 'housingneeds-singleview-beta'
      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}
      SMS_API_URL: ${ssm:/shared-plan/SMS_API_URL}
      PLANS_TABLE_NAME: ${self:provider.environment.PLANS_TABLE}
      NEXT_PUBLIC_API_URL: https://${self:custom.aliases.${self:provider.stage}}/api
      NEXT_PUBLIC_URL: https://${self:custom.aliases.${self:provider.stage}}

  hn-shared-plan-reminders:
    name: ${self:service}-reminders-${self:provider.stage}
    handler: router/cloudwatch/reminders.handler
    package:
      include:
        - router/**
        - node_modules/**
    events:
      - schedule: cron(0 11 * * ? *) # < every day at 12, rate(1 minute) > every minute
    timeout: 600

    environment:
      ENV: ${self:provider.stage}
      ALLOWED_GROUPS: 'housingneeds-singleview-beta'
      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}
      SMS_API_URL: ${ssm:/shared-plan/SMS_API_URL}
      PLANS_TABLE_NAME: ${self:provider.environment.PLANS_TABLE}
      NEXT_PUBLIC_API_URL: https://${self:custom.aliases.${self:provider.stage}}/api
      NEXT_PUBLIC_URL: https://${self:custom.aliases.${self:provider.stage}}

  hn-shared-plan-authorizer:
    name: ${self:service}-authorizer-${self:provider.stage}
    handler: authorizer.handler
    package:
      include:
        - authorizer.js
        - node_modules/**
    environment:
      ALLOWED_GROUPS: 'housingneeds-singleview-beta'
      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}

resources:
  Resources:
    PlansTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PLANS_TABLE}
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: queryLastName
            AttributeType: S
          - AttributeName: queryFirstName
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: NamesIndex
            KeySchema:
              - AttributeName: queryLastName
                KeyType: HASH
              - AttributeName: queryFirstName
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - id
                - systemIds

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:402949050862:certificate/1ab6042c-b6df-40f9-abdc-9ab8d8df1679
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only

custom:
  authorizer:
    hn-shared-plan-authorizer:
      name: ${self:service}-authorizer
      type: request
      identitySource: ''
      resultTtlInSeconds: 0
  domain-name:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  aliases:
    staging: staging.sharedplan.hackney.gov.uk
    production: sharedplan.hackney.gov.uk
