service: change-service
plugins:
  - serverless-domain-manager
  - serverless-plugin-tracing
custom:
  changeStage: ${opt:stage, self:provider.stage}
  changeEnvironment:
    CIS_ENVIRONMENT:
      production: production
      development: development
      testing: testing
    DYNAMODB_TABLE:
      production: production-identity-vault
      development: development-identity-vault
      testing: testing-identity-vault
    IDENTIFIER:
      production: api.sso.mozilla.com
      development: api.dev.sso.allizom.org
      testing: api.test.sso.allizom.org
    CIS_KINESIS_ARN:
      production: arn:aws:kinesis:us-west-2:320464205386:stream/cis-input-production
      development: arn:aws:kinesis:us-west-2:320464205386:stream/cis-input-development
      testing: arn:aws:kinesis:us-west-2:320464205386:stream/cis-input-testing
    CIS_DYNAMODB_ARN:
      production: arn:aws:dynamodb:us-west-2:320464205386:table/production-identity-vault
      development: arn:aws:dynamodb:us-west-2:320464205386:table/development-identity-vault
      testing: arn:aws:dynamodb:us-west-2:320464205386:table/testing-identity-vault
    CHANGE_SERVICE_AUTH0_DOMAIN:
      production: auth.mozilla.auth0.com
      development: auth.mozilla.auth0.com
      testing: auth.mozilla.auth0.com
    CIS_JWT_VALIDATION:
      production: true
      development: true
      testing: true
    CIS_ENFORCE_PUBLISHER_RULES:
      production: true
      development: true
      testing: true
    CIS_ENFORCE_SIGNATURES:
      production: true
      development: true
      testing: true
    CIS_SECRET_MANAGER_SSM_PATH:
      production: /iam/cis/production/keys
      development: /iam/cis/development/keys
      testing: /iam/cis/testing/keys
    CIS_SECRET_MANAGER_SSM_UUID_SALT:
      production: /iam/cis/production/uuid_salt
      development: /iam/cis/development/uuid_salt
      testing: /iam/cis/testing/uuid_salt
    DOMAIN_NAME:
      production: change.api.sso.mozilla.com
      development: change.api.dev.sso.allizom.org
      testing: change.api.test.sso.allizom.org
    CIS_ALLOW_DELETE:
      production: false
      development: true
      testing: true
    CIS_DISCOVERY_URL:
      production: https://auth.mozilla.com/.well-known/mozilla-iam
      development: https://auth.allizom.org/.well-known/mozilla-iam
      testing: https://auth.mozilla.com/.well-known/mozilla-iam
    CIS_PUBLIC_KEY_NAME:
      production: publisher
      development: publisher
      testing: publisher
  customDomain:
    domainName: ${self:custom.changeEnvironment.DOMAIN_NAME.${self:custom.changeStage}}
    basePath: ''
    stage: ${self:custom.changeStage}
    endpointType: edge
    createRoute53Record: true
    certificateName: ${self:custom.changeEnvironment.DOMAIN_NAME.${self:custom.changeStage}}
provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  tracing: true # enable tracing
  environment:
    CIS_KINESIS_ARN: ${self:custom.changeEnvironment.CIS_KINESIS_ARN.${self:custom.changeStage}}
    CIS_DYNAMODB_ARN: ${self:custom.changeEnvironment.CIS_DYNAMODB_ARN.${self:custom.changeStage}}
    CIS_ENVIRONMENT: ${self:custom.changeEnvironment.CIS_ENVIRONMENT.${self:custom.changeStage}}
    CIS_STREAM_BYPASS: true
    CIS_ASSUME_ROLE_ARN: None
    CIS_REQUESTS_CACHE_BACKEND: memory
    CIS_DYNAMODB_TRANSACTIONS: true
    CIS_JWT_VALIDATION: ${self:custom.changeEnvironment.CIS_JWT_VALIDATION.${self:custom.changeStage}}
    CIS_VERIFY_PUBLISHERS: ${self:custom.changeEnvironment.CIS_ENFORCE_PUBLISHER_RULES.${self:custom.changeStage}}
    CIS_VERIFY_SIGNATURES: ${self:custom.changeEnvironment.CIS_ENFORCE_SIGNATURES.${self:custom.changeStage}}
    CHANGE_SERVICE_AUTH0_DOMAIN: ${self:custom.changeEnvironment.CHANGE_SERVICE_AUTH0_DOMAIN.${self:custom.changeStage}}
    CIS_ENFORCE_PUBLISHER_RULES: ${self:custom.changeEnvironment.CIS_ENFORCE_PUBLISHER_RULES.${self:custom.changeStage}}
    CHANGE_SERVICE_API_IDENTIFIER: ${self:custom.changeEnvironment.IDENTIFIER.${self:custom.changeStage}}
    CIS_SECRET_MANAGER_SSM_PATH: ${self:custom.changeEnvironment.CIS_SECRET_MANAGER_SSM_PATH.${self:custom.changeStage}}
    CIS_SECRET_MANAGER_SSM_UUID_SALT: ${self:custom.changeEnvironment.CIS_SECRET_MANAGER_SSM_UUID_SALT.${self:custom.changeStage}}
    CIS_ALLOW_DELETE: ${self:custom.changeEnvironment.CIS_ALLOW_DELETE.${self:custom.changeStage}}
    CIS_SIGNING_KEY_NAME: change_service_signing_key
    CIS_SECRET_MANAGER: aws-ssm
    CIS_WELL_KNOWN_MODE: https
    CIS_DISCOVERY_URL: ${self:custom.changeEnvironment.CIS_DISCOVERY_URL.${self:custom.changeStage}}
    CIS_PUBLIC_KEY_NAME: ${self:custom.changeEnvironment.CIS_PUBLIC_KEY_NAME.${self:custom.changeStage}}
  iamRoleStatements:
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - "kinesis:DescribeStream"
        - "kinesis:PutRecord"
        - "kinesis:PutRecords"
      Resource:
        - ${self:custom.changeEnvironment.CIS_KINESIS_ARN.${self:custom.changeStage}}
    - Effect: Allow
      Action:
        - "dynamodb:ConditionCheckItem"
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:TransactWriteItems"
        - "dynamodb:UpdateItem"
      Resource:
        - ${self:custom.changeEnvironment.CIS_DYNAMODB_ARN.${self:custom.changeStage}}
    - Effect: Allow
      Action:
        - "ssm:GetParameterHistory"
        - "ssm:GetParametersByPath"
        - "ssm:GetParameters"
        - "ssm:GetParameter"
      Resource:
        - arn:aws:ssm:*:*:parameter${self:custom.changeEnvironment.CIS_SECRET_MANAGER_SSM_PATH.${self:custom.changeStage}}/*
        - arn:aws:ssm:*:*:parameter${self:custom.changeEnvironment.CIS_SECRET_MANAGER_SSM_UUID_SALT.${self:custom.changeStage}}
    - Effect: Allow
      Action:
        - "kms:Decrypt"
      Resource:
        - arn:aws:kms:us-west-2:320464205386:key/ef00015d-739b-456d-a92f-482712af4f32
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"
functions:
  api:
    handler: handler.handle
    description: serverless-wsgi based endpoint to recieve profile changes.
    memorySize: 512
    timeout: 30
    events:
      - http: ANY /
      - http: ANY {proxy+}
    layers:
      -  ${ssm:/iam/cis/${self:custom.changeStage}/lambda_layer_arn}
