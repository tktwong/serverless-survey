service:
  name: api-ironmental

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-offline-scheduler

provider:
  name: aws
  runtime: nodejs8.10
  region: ap-northeast-2
  stage: dev
  environment:
    MONGODB_URL: ${env:MONGODB_URL}
    MONGODB_NAME: ${env:MONGODB_NAME}
    DOMAIN: ${env:DOMAIN}
    API: ${env:API}
    NODE_ENV: 'production'
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 
        - 'ec2:CreateNetworkInterface'
        - 'ec2:DescribeNetworkInterfaces'
        - 'ec2:DetachNetworkInterface'
        - 'ec2:DeleteNetworkInterface'
        - 'ses:SendEmail'
        - 'ses:SendRawEmail'
      Resource: '*'

# serverless optimization
package:
  individually: true

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

functions:
  api:
    handler: src/api.handler
    events:
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Cookie
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: /{any+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Cookie
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
    # vpc:
    #   securityGroupIds:
    #     - sg-0b4effb78a6986a68
    #   subnetIds:
    #     - subnet-6bcbb527
    #     - subnet-34848e5c