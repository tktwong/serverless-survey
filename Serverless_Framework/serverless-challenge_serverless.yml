#Houve algumas modificações na estrutura(como em "frameworkVersion") porque enquanto eu assistia aulas pra entender melhor, eu acabei acompanhando as aulas e
# criando(ou tentando) alguns serviços, não alterei essas poucas informações que aparecem quando criamos um novo serviço porque não sei se pode dar algum problema quando for
# relacionar os serviços da AWS


service: serverless

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  profile: lg-challenge
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage} #Banco de dados
  iamRoleStatements: #Política de permissão para as funções lambda da AWS
    - Effect: Allow
      Action: 
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}" #Identificador do bucket - S3

functions: 
  extractMetadata: 
    handler: handler.extractMetadata
    description:
    memorySize: 128
    timeout: 30
    events:
      - s3:
          bucket: lng-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .jpg
  getMetadata: 
    handler: handler.getMetadata
    description:
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: images/{s3objectkey}
          method: get 
          cors: true

resources:
  Resources:
    ImagesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: s3objectkey
            AttributeType: S
        KeySchema:
          -
            AttributeName: s3objectkey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
