service: orbitalgame-api

plugins:
  - serverless-offline
  - serverless-domain-manager
  - serverless-cloudformation-resource-counter
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 6
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  logRetentionInDays: 7
  environment:
    ENV: ${opt:stage, 'dev'}
  role: arn:aws:iam::#{AWS::AccountId}:role/orbitalgame-${self:provider.stage}
  vpc:
    securityGroupIds:
      - sg-0d0bc3a9373d794e5
    subnetIds:
      - subnet-0c4ef501b6cbbb550
      - subnet-0ee93ed6a0f3f8130
      - subnet-05c7308a3b6cdb68d
      - subnet-0e63966ebc917bade

custom:
  domain:
    dev: api.orbitalga.me
    prod: api.orbitalga.me
  customDomain:
    domainName: ${self:custom.domain.${self:provider.stage}}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  prune:
    automatic: true
    number: 5
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true # Node modules configuration for packaging
    packager: 'yarn' # Reserved for future use. Any other values will not work right now.
    packagerOptions:
      scripts:
        - prisma generate
  serverless-offline:
    host: 0.0.0.0
    port: 3116
    useChildProcesses: true
functions:
  graphql:
    handler: graphqlHandler.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
