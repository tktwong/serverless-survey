service: shopify-server
app: shopify-order-printer
tenant: 8eecf0d2

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-domain-manager

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  region: ${env:AWS_IAM_REGION}
  profile: ${env:AWS_PROFILE}
  runtime: ${env:AWS_RUNTIME}
  environment:
    STAGE: ${self:provider.stage}

functions:
  shopify-setup:
    handler: src/server/ts/functions/shopify/setup.handler
    events:
      - http:
          method: get
          path: api/shopify/setup
          integration: lambda-proxy
  shopify-callback:
    handler: src/server/ts/functions/shopify/callback.handler
    events:
      - http:
          method: get
          path: api/shopify/callback
          integration: lambda-proxy
  shopify-proxy:
    handler: src/server/ts/functions/shopify/proxy.handler
    events:
      - http:
          method: post
          path: api/shopify/proxy
          integration: lambda-proxy
  database-find:
    handler: src/server/ts/functions/database/find.handler
    events:
      - http:
          method: post
          path: api/database/find
          integration: lambda-proxy

custom:
  serverless-offline:
    port: ${env:API_PORT}
    httpsProtocol: ".certs"
  dotenv:
    path: .env
  webpack:
    webpackConfig: src/server/webpack.config.js
    packager: yarn
  customDomain:
    domainName: shopify.aws.8eecf0d2.com
    certificateName: 8eecf0d2
    stage: ${self:provider.stage}
    basePath: ""
    endpointType: edge
