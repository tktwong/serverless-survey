
service: users

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: eu-west-2
  #Make some environment variables here:
  environment:
    USER_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  #Create myself an iamrole that lets me use the table (when I create it!) 
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
      Resource: "*"

#Let's create ourselves a dynamodb table! 
resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      #Some day we might decide to stream through here and put in an RDS
      #On that day we can retain for 24 hours instead
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: users-prod

functions:
  userSubmission:
    handler: api/users.submit
    memorySize: 128
    description: Submit User information.
    events:
      - http: 
          path: users
          method: post
  listUsers:
    handler: api/users.list
    memorySize: 128
    description: List all users
    events:
      - http: 
          path: users
          method: get
  deleteUsers:
    handler: api/users.list
    memorySize: 128
    description: Delete a user
    events:
      - http:
          path: users/{id}
          method: delete
  userDetails:
    handler: api/users.get
    events:
      - http:
          path: users/{id}
          method: get
  updateUsers:
    handler: api/users.update
    events:
      - http:
          path: users/{id}
          method: post
