service: prepaid

provider:
  name: aws
  runtime: go1.x
  region: us-east-1
  environment:
    CARDS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-cards
    TX_TABLE: ${self:service}-${opt:stage, self:provider.stage}-tx

  apiKeys:
    - devel
    - tryout

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CARDS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TX_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TX_TABLE}/index/*"

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  card-new:
    handler: bin/card-new
    events:
      - http:
          path: /card/new
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              querystrings:
                amt: true

  card-status:
    handler: bin/card-status
    events:
      - http:
          path: /card/{id}/status
          method: get
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true

  card-topup:
    handler: bin/card-topup
    events:
      - http:
          path: /card/{id}/topup
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true
              querystrings:
                amt: true

  card-spend:
    handler: bin/card-spend
    events:
      - http:
          path: /card/{id}/spend
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true
              querystrings:
                merchant: true
                amt: true

  card-statement:
    handler: bin/card-statement
    events:
      - http:
          path: /card/{id}/statement
          method: get
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true

  tx-status:
    handler: bin/tx-status
    events:
      - http:
          path: /tx/{id}/status
          method: get
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true

  tx-reverse:
    handler: bin/tx-reverse
    events:
      - http:
          path: /tx/{id}/reverse
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true
              querystrings:
                amt: true

  tx-capture:
    handler: bin/tx-capture
    events:
      - http:
          path: /tx/{id}/capture
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true
              querystrings:
                amt: true

  tx-refund:
    handler: bin/tx-refund
    events:
      - http:
          path: /tx/{id}/refund
          method: post
          cors: true
          resp: http
          private: true
          request:
            parameters:
              paths:
                id: true
              querystrings:
                amt: true

  tx-cleanup:
    handler: bin/tx-cleanup
    events:
      - schedule:
          name: tx-cleanup
          description: Clean up orphaned transactions
          rate: rate(5 minutes)

resources:
  Resources:
    CardsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CARDS_TABLE}

    TxTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: card_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          -
            IndexName: card_id-index
            KeySchema:
              -
                AttributeName: card_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TX_TABLE}
