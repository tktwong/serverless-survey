service: vpc-lambda-test
plugins:
  - serverless-dotenv-plugin

frameworkVersion: '2'

custom:
  defaultStage: dev
  apiKeys:
    dev: ${env:API_KEY_DEV}
    prod: ${env:API_KEY_PROD}
  dotenv:
    include:
      - MONGODB_URI
      - MONGODB_NAME

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  region: ap-northeast-1
  logRetentionInDays: 5
  stage: ${opt:stage, self:custom.defaultStage}

  environment:
    API_ENDPOINT:
      {
        'Fn::Join':
          [
            '',
            [
              'https://',
              { 'Ref': 'ApiGatewayRestApi' },
              '.execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}',
            ],
          ],
      }

  apiKeys:
    - name: api-key-${self:provider.stage}
      value: ${self:custom.apiKeys.${self:provider.stage}}

functions:
  getIpAddress:
    handler: src/handler.getIpAddress
    events:
      - http:
          path: getIpAddress
          method: get
          private: true
    vpc:
      securityGroupIds:
        - !Ref PrivateSecurityGroup
      subnetIds:
        - !Ref PrivateSubnetA

  testIpAddress:
    handler: src/handler.testIpAddress
    events:
      - http:
          path: testIpAddress
          method: get
          private: true
    vpc:
      securityGroupIds:
        - !Ref PrivateSecurityGroup
      subnetIds:
        - !Ref PrivateSubnetA

  testMongo:
    handler: src/handler.testMongo
    events:
      - http:
          path: testMongo
          method: get
          private: true
    vpc:
      securityGroupIds:
        - !Ref PrivateSecurityGroup
      subnetIds:
        - !Ref PrivateSubnetA

  testMongoFail:
    handler: src/handler.testMongoFail
    events:
      - http:
          path: testMongoFail
          method: get
          private: true

resources:
  # VPC関連リソースの定義
  - ${file(./resources/${self:provider.stage}/vpc.yml)}
