service: serverless-tutorial

frameworkVersion: '2'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: ap-northeast-1
  stage: dev
  apiGateway:
    shouldStartNameWithService: true
  environment:
    USER_TABLE: ${self:service}-${opt:stage, self:provider.stage}-user
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_TABLE}'

functions:
  add:
    handler: api/calc/add.handler
    events:
      - http:
          path: add
          method: post
          cors: true
  subtract:
    handler: api/calc/subtract.handler
    events:
      - http:
          path: subtract
          method: post
          cors: true
  addUser:
    handler: api/db/addUser.handler
    description: POST /user
    events:
      - http:
          path: user
          method: post
          cors: true
  getUser:
    handler: api/db/getUser.handler
    description: GET /user
    events:
      - http:
          path: user
          method: get
          cors: true

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USER_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
