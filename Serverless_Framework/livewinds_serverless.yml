# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: livewinds

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  profile: serverless-admin
  timeout: 20
  versionFunctions: false
  environment:
    DYNAMODB_STATIONS_TABLE: ${self:service}-stations-${opt:stage, self:provider.stage}
    DYNAMODB_WEATHER_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    USER_AGENT: "livewinds.com"
    FULL_PATH: ${self:custom.full_path.${opt:stage, self:provider.stage}}
  apiKeys:
    - ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        # - dynamodb:UpdateItem
        # - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_WEATHER_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        # - dynamodb:PutItem
        # - dynamodb:UpdateItem
        # - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_STATIONS_TABLE}"

package:
  individually: true
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

custom:
  full_path:
    dev: 'https://jqs5f5wrsh.execute-api.eu-west-1.amazonaws.com/dev'
    production: 'https://f3fzawc1di.execute-api.eu-west-1.amazonaws.com/production'
  drscScrape:
    dev:
      schedule: rate(1 day)
    production:
      schedule: rate(1 minute)

functions:
  drscScrape:
    handler: handlers/drscScrape.default
    events:
      - schedule: ${self:custom.drscScrape.${opt:stage, self:provider.stage}.schedule}
  docs:
    handler: handlers/docs.default
    events:
      - http:
          path: /
          method: get
          private: true
  fetchStations:
    handler: handlers/fetchStations.default
    events:
      - http:
          path: v1/stations
          method: get
          private: true
  fetchStation:
    handler: handlers/fetchStation.default
    events:
      - http:
          path: v1/stations/{station}
          method: get
          private: true
          request:
            parameters:
              paths:
                station: true
  fetchLatest:
    handler: handlers/fetchLatest.default
    events:
      - http:
          path: v1/stations/{station}/latest
          method: get
          private: true
          request:
            parameters:
              paths:
                station: true
  fetchWeatherItem:
    handler: handlers/fetchWeatherItem.default
    events:
      - http:
          path: v1/stations/{station}/weather/{timestamp}
          method: get
          private: true
          request:
            parameters:
              paths:
                station: true
                timestamp: true

resources:
  Resources:
    LivewindsDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_WEATHER_TABLE}
        AttributeDefinitions:
        -
          AttributeName: "station"
          AttributeType: "S"
        -
          AttributeName: "timestamp"
          AttributeType: "N"
        KeySchema:
          -
            AttributeName: "station"
            KeyType: "HASH"
          -
            AttributeName: "timestamp"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    LivewindsStationsDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_STATIONS_TABLE}
        AttributeDefinitions:
        -
          AttributeName: "station"
          AttributeType: "S"
        KeySchema:
          -
            AttributeName: "station"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-webpack