service: trivial-slack-bot

custom:
  tableName: ${self:service}-${self:provider.stage}-questions

provider:
  name: aws
  environment:
    SLACK_TOKEN: ${opt:token}
    SLACK_SIGNING_SECRET: ${opt:signing-secret}
    TABLE_NAME: ${self:custom.tableName}
  runtime: nodejs10.x
  profile: ${opt:profile}
  region: ${opt:region}
  stage: ${opt:stage}
  memorySize: 1024
  timeout: 30
  logRetentionInDays: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        # Table permissions
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        # Stream permissions
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource:
      - Fn::GetAtt: [ QuestionsTable, Arn ]

plugins:
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies

functions:
  app:
    handler: src/app.handler
    events:
      - http: ANY /
      - http:
          method: ANY
          path: /{any+}
  stream:
    handler: src/stream.handler
    events:
      - stream:
          type: dynamodb
          arn: { Fn::GetAtt: [ QuestionsTable, StreamArn ] }
          batchSize: 100
          batchWindow: 1
          startingPosition: TRIM_HORIZON

resources:
  Resources:
    QuestionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: channel
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: channel
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
