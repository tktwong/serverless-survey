service: todos-app-todos

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1

  environment:
    tableName: ${file(../database/serverless.yml):custom.tableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::ImportValue': TodosTableArn-${self:custom.stage}

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiRootResourceId

functions:
  # create:
  #   handler: src/create.main
  #   environment:
  #     tablename: ${self:provider.environment.tableName}
  #   events:
  #     - http:
  #         path: todos/{listId}
  #         method: post
  #         cors: true
  #         authorizer: aws_iam
  # get:
  #   handler: src/get.main
  #   environment:
  #     tablename: ${self:provider.environment.tableName}
  #   events:
  #     - http:
  #         path: todos/{listId}/{todoId}
  #         method: get
  #         cors: true
  #         authorizer: aws_iam
  # index:
  #   handler: src/index.main
  #   environment:
  #     tablename: ${self:provider.environment.tableName}
  #   events:
  #     - http:
  #         path: todos/{listId}
  #         method: get
  #         cors: true
  #         authorizer: aws_iam
  # update:
  #   handler: src/update.main
  #   environment:
  #     tablename: ${self:provider.environment.tableName}
  #   events:
  #     - http:
  #         path: todos/{listId}/{todoId}
  #         method: put
  #         cors: true
  #         authorizer: aws_iam
  # delete:
  #   handler: src/delete.main
  #   environment:
  #     tablename: ${self:provider.environment.tableName}
  #   events:
  #     - http:
  #         path: todos/{listId}/{todoId}
  #         method: delete
  #         cors: true
  #         authorizer: aws_iam
