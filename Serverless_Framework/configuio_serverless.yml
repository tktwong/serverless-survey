service: configuio

custom:
  tableUserName: 'users-table-${self:provider.stage}'
  tableConfiguioName: 'configuio-table-${self:provider.stage}'
  s3BucketUpload: 'configuio-upload-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - s3:*
        Resource:
          - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
          - { "Fn::GetAtt": ["ConfiguioDynamoDBTable", "Arn" ] }
          - { "Fn::GetAtt": ["S3BucketUpload", "Arn" ] }
          - { "Fn::Join": ['', [Fn::GetAtt: [ "S3BucketUpload", "Arn"], '/*'] ] }
  environment:
    USERS_TABLE: ${self:custom.tableUserName}
    CONFIGUIO_TABLE: ${self:custom.tableConfiguioName}
    CONFIGUIO_S3_UPLOAD: ${self:custom.s3BucketUpload}

functions:
  home:
    handler: index.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
  user:
    handler: functions/user/user.handler
    events:
      - http:
          path: user/{proxy+}
          method: ANY
          cors: true
  configuio_project:
    handler: functions/configuio/routes_project.handler
    events:
      - http:
          path: configuio/project/{proxy+}
          method: ANY
          cors: true
  configuio_project_upload:
    handler: functions/configuio/routes_project_upload.handler
    events:
      - http:
          path: configuio/upload/project/{proxy+}
          method: ANY
          cors: true

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableUserName}
    ConfiguioDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: uuId
            AttributeType: S
        KeySchema:
          -
            AttributeName: uuId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableConfiguioName}
    S3BucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.s3BucketUpload}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html