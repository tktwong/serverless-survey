# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: slackops # NOTE: update this with your service name

provider:
  name: aws
  Description: Slack notification aggregator and webhook for AWS
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  profile: ${opt:profile, 'medic52'}
  region: ${opt:region, 'us-west-2'}

  # you can define service wide environment variables here
  environment:
    # KMS_ENCRYPTED_HOOK_URL: you can use ENCRYPTED_HOOK_URL if you want
    # Uses AWS SSM to store the URL, see README for details on how to do this
    UNENCRYPTED_HOOK_URL: ${ssm:SLACK_APP_HOOK_URL}

  # Give this lambda the ability to deal with CodePipline manual approvals
  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "codepipeline:PutApprovalResult"
     Resource: { "Fn::Join" : [":", ["arn:aws:codepipeline",{ "Ref" : "AWS::Region" },{ "Ref" : "AWS::AccountId" },"*/*/ManualApproval" ] ]  }


plugins:
  - serverless-offline-sns

custom:
  serverless-offline-sns:
    port: 4002 # a free port for the sns server to run on
    debug: false
    # host: 0.0.0.0 # Optional, defaults to 127.0.0.1 if not provided to serverless-offline
    # sns-endpoint: http://127.0.0.1:4567 # Optional. Only if you want to use a custom endpoint
    # accountId: 123456789012 # Optional
  apiEndpoint:
    Fn::Join:
    - ""
    - - "https://"
      - Ref: "ApiGatewayRestApi"
      - ".execute-api."
      - ${self:provider.region}.
      - Ref: "AWS::URLSuffix"
      - "/"
      - ${self:provider.stage}
      - "/webhook"
  topicName: ${self:service}-aggregate-${opt:stage, self:provider.stage}    # Can be refered using ${self:custom.topicName}
  topicArn:
      Fn::Join:
        - ":"
        - - "arn:aws:sns"
          - Ref: "AWS::Region"
          - Ref: "AWS::AccountId"
          - ${self:custom.topicName}

functions:
  aggregator:
    handler: handler.aggregator
    DependsOn:
      - SnsTopic
    events:
      - sns:
          arn: ${self:custom.topicArn}
          topicName: ${self:custom.topicName}
  slackincoming:
    handler: handler.incomingwebhook
    events: 
      - http:
          method: post
          path: webhook


# Give 
resources:
  Resources:
    ssmSnsTopic:
      Type: "AWS::SSM::Parameter"
      Properties: 
        Name: /SlackSnSTopic
        Type: String
        Value:
          Ref: SnsTopic
    SnsTopic:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: "SNS Slack Topic"
          TopicName: ${self:custom.topicName}
    SnsTopicPolicy:
        Type: AWS::SNS::TopicPolicy
        DependsOn:
          - SnsTopic
        Properties:
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowCloudWatchToPublish
                Effect: Allow
                Principal:
                  AWS: '*'
                Action: 'sns:Publish'
                Resource:
                  Ref: SnsTopic
          Topics:
            - Ref: SnsTopic

  Outputs: 
    SlackWebhookURL:
        Description: The endpoint to put in https://api.slack.com/apps > Interactive Components > Interactivity > Request URL
        Value:
          ${self:custom.apiEndpoint}
    NotificationARN:
        Description: The endpoint to put in to NotificationARN items and for use in AWS services
        Value:
          Ref: SnsTopic