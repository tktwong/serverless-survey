service: ses-notify

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev
  # optional, in MB, default is 1024, min is 128
  memorySize: 128
  # optional, in seconds, default is 6
  timeout: 30
  # optional, default is true
  versionFunctions: false
  environment:
    MAIL_BUCKET: ${env:MAIL_BUCKET}
    SLACK_DEFAULT_HOOK_URL: ${env:SLACK_DEFAULT_HOOK_URL}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:ssm:::parameter/"
            - ${env:SSM_PARAMETER_CONFIG, '/ses-notify/config'}
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${env:MAIL_BUCKET, 'sample-bucket'}
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:GetObjectAcl"
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${env:MAIL_BUCKET, 'sample-bucket'}
            - "/*"
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:ssm:::"
            - ${env:SSM_PATH, 'ses-notify'}
            - "/*"

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-existing-s3

package:
  exclude:
    - "node_modules/aws-sdk/**"
    - "node_modules/aws-lambda/**"

functions:
  handleS3:
    handler: src/notify.s3Handler
    events:
      - existingS3:
          bucket: ${env:MAIL_BUCKET, 'sample-bucket'}
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: ${env:MAIL_PREFIX, 'mail1/'}
