service: mtglm-players

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'local'}
  region: us-east-1
  memorySize: 128
  environment:
    ALLOWED_ORIGIN: ${env:ALLOWED_ORIGIN}
    PLAYER_TABLE_NAME:
      Fn::ImportValue: ${self:provider.stage}-mtglm-PlayerTableName
    SEASON_TABLE_NAME:
      Fn::ImportValue: ${self:provider.stage}-mtglm-SeasonTableName
    USER_POOL_ID:
      Fn::ImportValue: ${self:provider.stage}-mtglm-UserPoolId

package:
  include:
    - ../build/**
    - ../node_modules/**

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-aws-documentation

resources:
  Resources:
    PlayersApiGatewayAuthorizer: ${file(partials/apiGatewayAuthorizer.yml)}

custom:
  documentation: ${file(partials/documentation.yml)}
  userPoolArn:
    Fn::ImportValue: ${self:provider.stage}-mtglm-UserPoolArn
  userPoolName:
    Fn::ImportValue: ${self:provider.stage}-mtglm-UserPoolName
  playerTableArn:
    Fn::ImportValue: ${self:provider.stage}-mtglm-PlayerTableArn
  seasonTableArn:
    Fn::ImportValue: ${self:provider.stage}-mtglm-SeasonTableArn

functions:
  Get: ${file(partials/functions/get.yml)}
  GetRoles: ${file(partials/functions/getRoles.yml)}
  Update: ${file(partials/functions/update.yml)}
  UpdateRole: ${file(partials/functions/updateRole.yml)}
  Create: ${file(partials/functions/create.yml)}
  Delete: ${file(partials/functions/delete.yml)}
  Query: ${file(partials/functions/query.yml)}
