service:
  name: db

plugins:
  - serverless-dynamodb-local

provider:
  stage: dev
  name: aws
  runtime: nodejs8.10
  profile: kohkaneServerless
  environment:
    tableName:
      Ref: UsersTable

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ UsersTable, Arn ]

custom:
  stage: ${opt:stage, self:provider.stage}
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      # inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      domain:
        sources:
          - table: ${self:custom.stage}-users
            sources: [./seeds/users.json]

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-users
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    versionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-versions
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
