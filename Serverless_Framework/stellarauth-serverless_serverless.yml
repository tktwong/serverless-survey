org: tyvdh
app: stellarauth
service: stellarauth

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-apigw-binary
  - serverless-domain-manager

custom:
  customDomain:
    domainName: ${opt:subdomain}.stellarauth.com
    stage: ${opt:stage}
    certificateName: ${opt:subdomain}.stellarauth.com
    createRoute53Record: false
    autoDomain: false
  apigwBinary:
    types:
      - 'image/*'
      - 'image/png'
      - 'text/html'
  webpack:
    webpackConfig: webpack.config.js
    keepOutputDirectory: true
    includeModules:
      forceInclude:
        - source-map-support
    packager: npm
  serverless-offline:
    httpsProtocol: certs
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage}
  region: us-east-1
  environment: ${file(env.yml):${opt:stage}}

functions:
  keyCreate:
    handler: handler.key
    events:
      - http:
          path: key/create
          method: POST
          cors: true
  keyUpdate:
    handler: handler.key
    events:
      - http:
          path: key/update
          method: PUT
          cors: true
  keyClaim:
    handler: handler.key
    events:
      - http:
          path: key/claim
          method: POST
          cors: true
  keyVerify:
    handler: handler.key
    events:
      - http:
          path: key/verify
          method: POST
          cors: true
  keyList:
    handler: handler.key
    events:
      - http:
          path: key/list
          method: GET
          cors: true

  txnSend:
    handler: handler.txn
    events:
      - http:
          path: txn/send
          method: POST
          cors: true
  txnSign:
    handler: handler.txn
    events:
      - http:
          path: txn/sign
          method: POST
          cors: true
  txnReject:
    handler: handler.txn
    events:
      - http:
          path: txn/reject
          method: DELETE
          cors: true
  txnList:
    handler: handler.txn
    events:
      - http:
          path: txn/list
          method: GET
          cors: true

  imgShow:
    handler: handler.img
    events:
      - http:
          path: img
          method: GET
          cors: true