service: slack-app
app: slack-app
org: aslan

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x

  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    slackToken: ${param:slackToken}
    slack_signing_secret:  ${param:slack_signing_secret}
    client_id: ${param:clientId}
    client_secret: ${param:client_secret}

  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  slack:
    handler: handler.slack
    events:
      - http:
          path: slack
          method: post
          cors: true
  fakeAuth:
    handler: handler.fakeAuth
    events:
      - http:
          path: slack
          method: get
          cors: true
  installApp:
    handler: handler.installApp
    events:
      - http:
          path: slackinstall
          method: get
          cors: true
resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: createdAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
