service: sensordata

provider:
  name: aws
  runtime: python3.7
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AWSIoTFullAccess

functions:
  processData:
    handler: handler.process_data
    events:
      - http:
          path: data
          method: post

resources:
  Resources:
    MyTopicRule: 
      Type: AWS::IoT::TopicRule
      Properties: 
        RuleName: "iotDataRule"
        TopicRulePayload: 
          RuleDisabled: "false"
          Sql: >-
            select * FROM 'sensordata' where temp > 0
          Actions: 
            - 
              S3: 
                BucketName: 
                  Ref: "MyBucket"
                RoleArn: 
                  Fn::GetAtt: 
                    - "RuleRole"
                    - "Arn"
                Key: 
                  Fn::Join: ['', ['$', '{timestamp()}']]
    MyBucket: 
      Type: AWS::S3::Bucket
      Properties:
        BucketName: iot-sensor-data
    RuleRole: 
      Type: AWS::IAM::Role
      Properties: 
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "iot.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess

    SensorDataDatabase:
      Type: "AWS::Glue::Database"
      Properties:
        DatabaseInput:
          Description: "Sensor Data database"
          Name: sensor_data_database
        CatalogId:
          Ref: AWS::AccountId

    SensorDataTable:
      Type: "AWS::Glue::Table"
      DependsOn: SensorDataDatabase
      Properties:
        DatabaseName:
          Ref: SensorDataDatabase
        CatalogId:
          Ref: AWS::AccountId
        TableInput:
          Description: "Sensor data table."
          TableType: "EXTERNAL_TABLE"
          Retention: 0
          Name: "glue_table_sensor_data"
          Parameters: {"classification": "json", "compressionType": "none", "typeOfData": "file", "CrawlerSchemaDeserializerVersion": "1.0"}
          StorageDescriptor:
            Parameters: {"classification": "json", "compressionType": "none", "typeOfData": "file", "CrawlerSchemaDeserializerVersion": "1.0"}
            StoredAsSubDirectories: False
            InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
            OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
            Compressed: False
            NumberOfBuckets: -1
            Columns:
            - Type: string
              Name: device
            - Type: string
              Name: station
            - Type: string
              Name: data
            - Type: double
              Name: rssi
            - Type: int
              Name: temp
            - Type: int
              Name: pressure
            - Type: int
              Name: photo
            Location: "s3://iot-sensor-data/"
            SerdeInfo:
              SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
              Parameters: {"paths": "device,station"}