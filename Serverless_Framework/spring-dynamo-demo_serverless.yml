service: spring-dynamo-demo

custom:
  environment: dev
  tableName: test
  tableThroughput: 10

provider:
  name: aws
  runtime: java8
  environment:
    tableName: ${self:custom.tableName}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.tableName}"

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: claimNumber
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: claimNumber
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}
        TableName: ${self:provider.environment.tableName}
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:*:*:table/test
        Roles:
          - Ref: IamRoleLambdaExecution

functions:
  dynamoDb:
    handler: com.grm.ah.cerberus.springdynamodemo.controller.ClaimController
    memorySize: 3008
    name: dynamo-spring-demo-${self:custom.environment}
    events:
      - http:
          path: /test
          method: ANY