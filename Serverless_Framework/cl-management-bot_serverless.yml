service: cl-management-bot

plugins:
  - serverless-offline
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  app:
    handler: index.handler
    events:
      - http:
         path: /v1/
         method: ANY
         cors: true
      - http:
         path: /v1/{proxy+}
         method: ANY
         cors: true
    environment:
      BOT_ID: ${ssm:cl2019_bot_id}
      BOT_TOKEN: ${ssm:cl2019_bot_token}
      CISCOSPARK_ACCESS_TOKEN: ${ssm:cl2019_bot_token}
      JWT_ISS: ${ssm:cl2019_jwt_id}
      JWT_KEY: ${ssm:cl2019_jwt_secret}

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: cl2019-demo-site
        WebsiteConfiguration:
          IndexDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]
  Outputs:
    StaticSiteS3BucketName:
      Value:
        Ref: StaticSite

custom:
  s3Sync:
    - bucketName: cl2019-demo-site
      localDir: static
