service: grokit-backend

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  profile: grokit

functions:
  projects:
    handler: handler.projects
    environment:
      DB_HOST: ${opt:DB_HOST}
      DB_USER: ${opt:DB_USER}
      DB_PASSWORD: ${opt:DB_PASSWORD}
    events:
      - http:
          path: projects
          method: get
          cors: true
      - http:
          path: projects
          method: post
          cors: true
      - http:
          path: projects/{projectId}
          method: delete
          cors: true
      - http: 
          path: projects/{projectId}
          method: put
          cors: true
  skills:
    handler: handler.skills
    environment:
      DB_HOST: ${opt:DB_HOST}
      DB_USER: ${opt:DB_USER}
      DB_PASSWORD: ${opt:DB_PASSWORD}
    events:
      - http: 
          path: skills/{skillId}
          method: put
          cors: true
      - http: 
          path: skills/{skillId}
          method: delete
          cors: true    
      - http:
          path: skills
          method: post
          cors: true
      - http: 
          path: skills/markAsPractised/{difficulty}
          method: put
          cors: true
      - http: 
          path: skills/schedule/{projectId}/{datePractised}
          method: get
          cors: true
  users:
    handler: handler.users
    environment:
      DB_HOST: ${opt:DB_HOST}
      DB_USER: ${opt:DB_USER}
      DB_PASSWORD: ${opt:DB_PASSWORD}
    events:
      - http:
          path: users
          method: post
          cors: true
  linechart:
    handler: handler.linechart
    environment:
      DB_HOST: ${opt:DB_HOST}
      DB_USER: ${opt:DB_USER}
      DB_PASSWORD: ${opt:DB_PASSWORD}
    events:
      - http:
          path: linechart
          method: get
          cors: true