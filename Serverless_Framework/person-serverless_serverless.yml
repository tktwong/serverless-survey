service: 
  name: person-serverless

frameworkVersion: '2'

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  region: sa-east-1
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    DYNAMODB_TABLE: person
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:sa-east-1:220763882526:table/person"  

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true

resources:
  Resources:
    LoanDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
          
functions:
  Get:
    handler: 'person/src/handlers/GetPersonById.getPersonById'
    events:
      - http:
          cors: true  
          method: get
          path: person/{id}
  Create:
    handler: 'person/src/handlers/CreatePerson.createPerson'
    events:
      - http:
          cors: true  
          method: post
          path: person
  ProcessPerson:
    handler: 'person/src/handlers/ProcessPerson.processPerson'
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - LoanDynamoDBTable
              - StreamArn
