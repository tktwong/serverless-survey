service: philosophize-ai-api # NOTE: update this with your service name

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  profile: ${opt:aws-profile, "cmr1"}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"

custom:
  version: v1
  baseUrl: "api/${self:custom.version}"
  serverless-offline:
    port: 4000
    prefix: dev

functions:
  spec:
    handler: handler.spec
    events:
      - http:
          path: ${self:custom.baseUrl}/spec.yml
          method: get
          cors: true

  templates-index:
    handler: handler.templates_index
    events:
      - http:
          path: ${self:custom.baseUrl}/templates
          method: get
          cors: true

  templates-show:
    handler: handler.templates_show
    events:
      - http:
          path: ${self:custom.baseUrl}/templates/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true

  templates-create:
    handler: handler.templates_create
    events:
      - http:
          path: ${self:custom.baseUrl}/templates
          method: post
          cors: true

  templates-update:
    handler: handler.templates_update
    events:
      - http:
          path: ${self:custom.baseUrl}/templates/{id}
          method: put
          cors: true
          request:
            parameters:
              paths:
                id: true

  templates-destroy:
    handler: handler.templates_destroy
    events:
      - http:
          path: ${self:custom.baseUrl}/templates/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true

  messages-index:
    handler: handler.messages_index
    events:
      - http:
          path: ${self:custom.baseUrl}/messages
          method: get
          cors: true

  messages-show:
    handler: handler.messages_show
    events:
      - http:
          path: ${self:custom.baseUrl}/messages/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true

  messages-create:
    handler: handler.messages_create
    events:
      - http:
          path: ${self:custom.baseUrl}/messages
          method: post
          cors: true

  messages-update:
    handler: handler.messages_update
    events:
      - http:
          path: ${self:custom.baseUrl}/messages/{id}
          method: put
          cors: true
          request:
            parameters:
              paths:
                id: true

  messages-destroy:
    handler: handler.messages_destroy
    events:
      - http:
          path: ${self:custom.baseUrl}/messages/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true
