service: know-god-asset-import

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${env:ENVIRONMENT}
  region: us-east-1
  vpc:
    securityGroupIds:
      - ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.webapp_elb_sg}
    subnetIds: ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.prod_apps_1_all}
  stackTags:
    Name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}
    owner: apps@cru.org
    application: ${env:PROJECT_NAME}
    env: ${self:custom.environmentMap.${env:ENVIRONMENT}}
    managed_by: serverless-framework
    function: lambda
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource:
        - { "Fn::Join" : ['', ["arn:aws:s3:::", "${env:S3_BUCKET_NAME}"]] }
        - "arn:aws:s3:::know-god-assets/*"
  environment: ${file(serverless/environment.js)}

functions:
  unzip-assets:
    handler: index.handler
    events:
      - existingS3:
          bucket: ${env:S3_BUCKET_NAME}
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: GodTools/
            - suffix: .zip

package:
  exclude:
  - .git/**
  - .deployment/**

plugins:
  - serverless-plugin-scripts
  - serverless-plugin-existing-s3

custom:
  scripts:
    hooks:
      # Run s3deploy command
      'aws:deploy:finalize:cleanup': './node_modules/.bin/serverless --stage $ENVIRONMENT s3deploy'
  environmentMap:
    production: prod
    staging: stage
    development: dev
    lab: lab
