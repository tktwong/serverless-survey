org: candicecodes
app: brewbean

# service: ${file(./secrets.json):ApiName}
service: serverless-graphql-rds

provider:
  name: aws
  region: ca-central-1
  stage: dev
  memorySize: 256
  runtime: nodejs12.x
  # role: LambdaRole
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "secretsmanager:GetSecretValue"
          - "s3:ListBucket"
          - "s3:GetObject"
          - "s3:PutObject"
        Resource: 
          - "arn:aws:secretsmanager:ca-central-1:817666344894:secret:database-1-masterpassword-wBwMj9"
          - "arn:aws:s3:::brewbean-operations-bucket/*"
  # environment:
  #   mysql
  #   MYSQL_HOST: '{{resolve:secretsmanager:database-1-masterpassword:}}'
  #   MYSQL_PORT: ${file(./secrets.json):DatabasePort}
    #common
    # DB_NAME: ${file(./secrets.json):DatabaseName}
    # USERNAME: ${self:custom.USERNAME}
    # PASSWORD: ${self:custom.PASSWORD}
    # SERVERLESS_ACCESS: ${file(./secrets.json):AccessKey}
custom:
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules:
      packagePath: './package.json'
      forceExclude:
        - aws-sdk
    packager: 'npm'   # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore
  # SECRETS: 
  # DB_NAME: ${file(./secrets.json):DatabaseName}
  # USERNAME: master
  # PASSWORD: password
  # MYSQL:
    # HOST:
      # Fn::GetAtt: [MySqlRDSInstance, Endpoint.Address]
      # Fn::GetAtt: [${file(./resource/MySqlRDSInstance.yml)}, Endpoint.Address]
    # PORT:
      # Fn::GetAtt: [MySqlRDSInstance, Endpoint.Port]
package:
  individually: true
  # exclude:
  #   - node_modules/**
  #   - '!node_modules/graphql-yoga/**'
  #   - '!node_modules/apollo-server-express/**'
  #   - '!node_modules/apollo-server-core/**'
plugins:
  # webpack has to be listed before offline, because that detemines the order of execution
  # https://github.com/serverless-heaven/serverless-webpack/issues/230#issuecomment-344430019
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-offline
  
resources:
  Resources:
    S3OperationsBucket: ${file(./resource/AwsS3Bucket.yml)}
#     LambdaRole: ${file(./resource/LambdaRole.yml)}
#     ServerlessInternetGateway: ${file(./resource/ServerlessInternetGateway.yml)}
#     ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
#     ServerlessVPCGA: ${file(./resource/ServerlessVPCGA.yml)}
#     ServerlessSubnetA: ${file(./resource/ServerlessSubnetA.yml)}
#     ServerlessSubnetB: ${file(./resource/ServerlessSubnetB.yml)}
#     ServerlessSubnetC: ${file(./resource/ServerlessSubnetC.yml)}
#     ServerlessSubnetGroup: ${file(./resource/ServerlessSubnetGroup.yml)}
#     ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}
#     RouteTablePublic: ${file(./resource/RouteTablePublic.yml)}
#     RoutePublic: ${file(./resource/RoutePublic.yml)}
#     RouteTableAssociationSubnetA: ${file(./resource/RouteTableAssociationSubnetA.yml)}
#     RouteTableAssociationSubnetB: ${file(./resource/RouteTableAssociationSubnetB.yml)}
#     RouteTableAssociationSubnetC: ${file(./resource/RouteTableAssociationSubnetC.yml)}
    # MySqlRDSInstance: ${file(./resource/MySqlRDSInstance.yml)}

    
functions:

  graphql:
    handler: handler.server
    events:
      - http:
          path: /
          method: post
          cors: true
  playground:
    handler: handler.playground
    events:
      - http:
          path: /
          method: get
          cors: true
  appendText:
    handler: handler.appendText
    events:
      - http:
          path: appendText
          method: put
  # DELETE THE BELOW AFTER SECRET TEST
  hello:
    handler: handler.hello
    events:
      - http:
          path: /
          method: get
          integration: lambda
  