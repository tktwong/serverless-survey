service: chirp

provider:
    name: aws
    region: eu-west-3
    runtime: provided
    environment:
        SQS_QUEUE:
            Ref: TwitterQueue
    stage: prod
    iamRoleStatements:
        - Effect: Allow
          Action: [dynamodb:Query, dynamodb:Scan, dynamodb:GetItem, dynamodb:PutItem, dynamodb:UpdateItem, dynamodb:DeleteItem]
          Resource:
              Fn::GetAtt: [ChirpCache, Arn]
        - Effect: Allow
          Action: [sqs:SendMessage, sqs:DeleteMessage]
          Resource:
              Fn::GetAtt: [ TwitterQueue, Arn ]

functions:
    website:
        handler: public/index.php
        timeout: 28 # (API Gateway has a timeout of 29 seconds.)
        layers:
            - ${bref:layer.php-74-fpm}
        events:
            - http: 'ANY /'
            - http: 'ANY /{proxy+}'
            - schedule:
                rate: rate(5 minutes)
                input:
                    warmer: true

    artisan:
        handler: artisan
        timeout: 120
        layers:
            - ${bref:layer.php-74}
            - ${bref:layer.console}
        events:
            - schedule:
                rate: rate(1 minute)
                input:
                    cli: schedule:run

    worker:
        handler: worker.php
        layers:
            - ${bref:layer.php-74}
        events:
            - sqs:
                arn:
                    Fn::GetAtt: [ TwitterQueue, Arn ]

package:
    exclude:
        - '**/.DS_Store'
        - .github/**
        - node_modules/**
        - public/css/**
        - public/img/**
        - public/js/**
        - resources/js/**
        - resources/sass/**
        - storage/**
        - stubs/**
        - tests/**

plugins:
    - ./vendor/bref/bref
    - serverless-domain-manager

custom:
    customDomain:
        createRoute53Record: true
        domainName: chirp.benjamincrozat.com
        stage: ${self:provider.stage}

resources:
    Resources:
        ChirpCache:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: chirp_cache
                AttributeDefinitions:
                    - AttributeName: key
                      AttributeType: S
                KeySchema:
                    - AttributeName: key
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        TwitterQueue:
            Type: AWS::SQS::Queue
            Properties:
                RedrivePolicy:
                    maxReceiveCount: 3
                    deadLetterTargetArn:
                        Fn::GetAtt: [ DeadLetterQueue, Arn ]
        DeadLetterQueue:
            Type: AWS::SQS::Queue
            Properties:
                MessageRetentionPeriod: 1209600 # 14 days.
