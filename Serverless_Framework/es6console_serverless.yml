service: es6console

plugins:
  - serverless-s3-local
  - serverless-offline

custom:
  s3:
    start:
      port: 8001
      buckets:
        - ${self:provider.environment.SNIPPET_BUCKET_NAME}
      directory: /tmp
      cors: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1
  environment:
    NODE_ENV: ${self:provider.stage}
    SNIPPET_BUCKET_NAME: ${self:service}-${opt:stage, self:provider.stage}-snippets
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:Get*
        - s3:List*
      Resource: "arn:aws:s3:::staging.es6console.com"
    - Effect: Allow
      Action:
        - s3:Put*
      Resource: arn:aws:s3:::${self:provider.environment.SNIPPET_BUCKET_NAME}
    - Effect: Allow
      Action:
        - s3:Put*
      Resource: arn:aws:s3:::${self:provider.environment.SNIPPET_BUCKET_NAME}/*

functions:
  create:
    handler: api/create.handler
    events:
      - http:
          path: snippet/save
          method: post
          cors: true
  listExamples:
    handler: api/examples.handler
    events:
      - http:
          path: examples
          method: get
          cors: true
  listThemes:
    handler: api/themes.handler
    events:
      - http:
          path: themes
          method: get
          cors: true

resources:
  Resources:
    snippetsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.SNIPPET_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - Authorization
              AllowedMethods:
               - GET
               - HEAD
              AllowedOrigins: 
                - 'staging.es6console.com'
                - 'es6console.com'
