service:
  name: ais-service-peak-mohit

frameworkVersion: "=1.42.3"

provider:
  name: aws
  runtime: nodejs10.x
  versionFunctions: false
  region: eu-west-1
  stage: ${opt:stage}
  stackTags:
    tenant : platform <! CHANGE THIS IF IT IS TENANT SPECIFIC !>
    feature: <! INSERT THE NAME OF THE FEATURE THIS SERVICE IS PART OF HERE - e.g. ingestion, workspace etc. !>
    service: <! INSERT YOUR SERVICE NAME HERE !>
    stage: ${opt:stage}
  environment:
    STAGE: ${opt:stage}
    PROJECT_NAME: ${self:service.name} # used for sending error logs

# custom:
#   customDomain: # only required if the service uses http events
#     basePath: "peak-mohit"
#     domainName: ${env:DOMAIN}
#     stage: "${opt:stage}"
#     createRoute53Record: true

functions:
  fruitsList:
    handler: handlers/fruits/index.handler
    events:
      - http:
          path: /fruits/
          method: get
          cors: true
  fruitCreate:
    handler: handlers/fruits/create.handler
    events:
      - http:
          path: /fruit/create
          method: post
          cors: true
  fruitsUpdateGet:
    handler: handlers/fruits/update.getData
    events:
      - http:
          path: /fruit/{id}/update/
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                id: true
  fruitsUpdatePost:
    handler: handlers/fruits/update.postData
    events:
      - http:
          path: /fruit/{id}/update/
          method: post
          cors: true
  fruitsDelete:
    handler: handlers/fruits/delete.handler
    events:
      - http:
          path: /fruit/{id}/delete/
          method: delete
          cors: true
  vegetablesList:
    handler: handlers/vegetables/index.handler
    events:
      - http:
          path: /vegetables/
          method: get
          cors: true
  vegetableCreate:
    handler: handlers/vegetables/create.handler
    events:
      - http:
          path: /vegetable/create
          method: post
          cors: true
  vegetableUpdateGet:
    handler: handlers/vegetables/update.getData
    events:
      - http:
          path: /vegetable/{id}/update/
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                id: true
  vegetablesUpdatePost:
    handler: handlers/vegetables/update.postData
    events:
      - http:
          path: /vegetable/{id}/update/
          method: post
          cors: true
  vegetableDelete:
    handler: handlers/vegetables/delete.handler
    events:
      - http:
          path: /vegetable/{id}/delete/
          method: delete
          cors: true

plugins:
  # - serverless-jetpack
  # - serverless-domain-manager
  - serverless-offline
