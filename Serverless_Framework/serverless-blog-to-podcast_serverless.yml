frameworkVersion: ">=1.2.0 <2.0.0"

service: blog-polly # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3
  cfLogs: true
  environment:
    SERVERLESS_STAGE: ${opt:stage, self:provider.stage}
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${opt:region, self:provider.region}
    BLOG_BUCKET: ${self:provider.environment.SERVERLESS_PROJECT}-blog-${self:provider.environment.SERVERLESS_STAGE}
    PODCAST_BUCKET: ${self:provider.environment.SERVERLESS_PROJECT}-podcast-${self:provider.environment.SERVERLESS_STAGE}
    TABLE_NAME: ${self:provider.environment.SERVERLESS_PROJECT}-blog-podcast-${self:provider.environment.SERVERLESS_STAGE}
  iamRoleStatements:
    - Effect: Allow
      Action:
      - dynamodb:*
      Resource: arn:aws:dynamodb:${self:provider.environment.SERVERLESS_REGION}:*:*
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - "*"
    - Effect: Allow
      Action:
      - SNS:*
      Resource: arn:aws:sns:${self:provider.environment.SERVERLESS_REGION}:*:*
    - Effect: Allow
      Action:
      - polly:SynthesizeSpeech
      Resource: "*"

package:
  exclude:
    - test/**
    - .git/**

functions:
  aggregate:
    handler: aggregate/index.handler
    timeout: 30
    events:
      - schedule: rate(10 minutes)
  convert:
    handler: convert/index.handler
    events:
      - s3:
          bucket: ${self:provider.environment.BLOG_BUCKET} # ALSO CREATES THE BUCKET !!!
          event: s3:ObjectCreated:*

plugins:
  - serverless-mocha-plugin
  - serverless-webpack
  - serverless-offline

custom:
  serverless-mocha-plugin:
    functionTemplate: templates/function.ejs
  webpackIncludeModules: true

resources:
  Resources:
    PodcastBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.PODCAST_BUCKET}
    PodcastBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: PodcastBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: PodcastBucket
                - "/*"
#    BlogPodcastTable:
#      Type: AWS::DynamoDB::Table
#      DeletionPolicy: Retain
#      Properties:
#        AttributeDefinitions:
#          - AttributeName: id
#            AttributeType: S
#        KeySchema:
#          - AttributeName: id
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 1
#          WriteCapacityUnits: 1
#        TableName: ${self:provider.environment.TABLE_NAME}
