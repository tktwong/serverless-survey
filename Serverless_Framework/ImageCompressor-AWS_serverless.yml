##################################################################################
# CodeRecipe - a marketplace for developers to grab ready to use cloud solutions #
# More details at: https://coderecipe.ai/architectures/47740119                  #
##################################################################################

service: CodeRecipeSample-Image-Compression
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: ${opt:stage}
  environment:
    COMPRESSED_BUCKET_NAME: ${opt:COMPRESSED_BUCKET_NAME}
    UNCOMPRESSED_BUCKET_NAME: ${opt:UNCOMPRESSED_BUCKET_NAME}
functions:
  ImageHandler:
    handler: index.handler
    name: ${self:provider.stage}-ImageHandler
    environment:
      Stage: ${self:provider.stage}
      COMPRESSED_BUCKET_NAME: "#{CompressedImageBucket}"
    events:
      - s3:
          bucket: ${self:provider.stage}-${self:provider.environment.UNCOMPRESSED_BUCKET_NAME}
    iamRoleStatementsName: ${self:provider.stage}-ImageHandler-role
    iamRoleStatements:
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: "arn:aws:s3:::${self:provider.stage}-${self:provider.environment.COMPRESSED_BUCKET_NAME}/*"
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: "arn:aws:s3:::${self:provider.stage}-${self:provider.environment.UNCOMPRESSED_BUCKET_NAME}"

resources:
  Resources:
    CompressedImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-${self:provider.environment.COMPRESSED_BUCKET_NAME}

plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function
  - serverless-plugin-scripts

custom:
  scripts:
    hooks:
      'package:cleanup': 'docker pull amazonlinux; docker run --rm -v $PWD:/data -w /data node:8.10 npm install imagemin imagemin-mozjpeg'
