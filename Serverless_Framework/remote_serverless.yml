service: remote

custom:
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

functions:
  apolloServer:
    handler: functions/apolloServer.handler
    environment:
      ELASTICSEARCH_ENDPOINT:
        Fn::GetAtt: [ElasticsearchDomainMovies, DomainEndpoint]
    events:
      - http:
          authorizer:
            authorizerId:
              Ref: ApolloServerApiGatewayAuthorizer
            type: COGNITO_USER_POOLS
          cors: true
          method: post
          path: graphql
    iamRoleStatements:
      - Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Effect: Allow
        Resource:
          - Fn::GetAtt: [DynamoDBTableMovies, Arn]
      - Action:
          - es:ESHttpPost
        Effect: Allow
        Resource:
          - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
          - Fn::Join:
              - ''
              - - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
                - /*
    timeout: 5

  createIndexTemplates:
    handler: functions/createIndexTemplates.handler
    environment:
      ELASTICSEARCH_ENDPOINT:
        Fn::GetAtt: [ElasticsearchDomainMovies, DomainEndpoint]
    iamRoleStatements:
      - Action:
          - es:ESHttpPut
        Effect: Allow
        Resource:
          - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
          - Fn::Join:
              - ''
              - - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
                - /*
    memorySize: 128
    timeout: 60

  indexMovies:
    handler: functions/indexMovies.handler
    environment:
      ELASTICSEARCH_ENDPOINT:
        Fn::GetAtt: [ElasticsearchDomainMovies, DomainEndpoint]
    events:
      - stream:
          arn:
            Fn::GetAtt: [DynamoDBTableMovies, StreamArn]
          batchSize: 100
          enabled: true
          type: dynamodb
    iamRoleStatements:
      - Action:
          - dynamodb:DescribeStream
          - dynamodb:GetRecords
          - dynamodb:GetShardIterator
          - dynamodb:ListStreams
        Effect: Allow
        Resource:
          - Fn::GetAtt: [DynamoDBTableMovies, Arn]
      - Action:
          - es:ESHttpPost
          - es:ESHttpPut
        Effect: Allow
        Resource:
          - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
          - Fn::Join:
              - ''
              - - Fn::GetAtt: [ElasticsearchDomainMovies, DomainArn]
                - /*
    memorySize: 128
    timeout: 60

package:
  individually: true

plugins:
  - serverless-iam-roles-per-function
  - serverless-webpack

provider:
  apiGateway:
    minimumCompressionSize: 0
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  stage: prod

resources:
  - ${file(resources/aws/cognito.yml)}
  - ${file(resources/aws/dynamodb.yml)}
  - ${file(resources/aws/elasticsearch.yml)}
