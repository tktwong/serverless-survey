service: sdp

provider:
  name: aws
  region: us-east-1
  runtime: python3.7
  stage: ${opt:stage}
  # add your own lambda role ARN here
  role: <YOUR_LAMBDA_ROLE>
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - 's3.*'
      Resource: 'arn:aws:s3:::${self:service}-${self:provider.stage}/*'

plugins: serverless-s3-remover

custom:
  bucket: ${self:service}-${self:provider.stage}
  glue_crawler: load-${self:provider.stage}
  # add your own glue role ARN here
  glue_role: <YOUR_GLUE_ROLE>
  athena_db: ${self:custom.bucket}
  remover:
    buckets:
      - ${self:custom.bucket}
    
   	
      
functions:
  upload:
    handler: lambda/upload.handler
    events:
      - http: 
          path: /upload_to_s3
          method: put
    environment:
        DEST_BUCKET: ${self:custom.bucket}
        DEST_KEY: raw/
  
  extract:
    handler: lambda/extract.handler
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: raw/
            - suffix: .json
    environment:
        DEST_BUCKET: ${self:custom.bucket}
        DEST_KEY: extract/
  
  load:
    handler: lambda/load.handler
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: extract/
            - suffix: .json
    environment:
      GLUE_CRAWLER: ${self:custom.glue_crawler}
        
resources:
  Resources:
          
    GlueCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        DatabaseName: ${self:custom.athena_db}
        Name: ${self:custom.glue_crawler}
        Role: ${self:custom.glue_role}
        TablePrefix: objvals_
        Targets:
          S3Targets:
            -  Path: s3://${self:custom.bucket}/extract/
