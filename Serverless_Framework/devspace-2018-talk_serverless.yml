service: gbbo-backend

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: { Ref: VoteTable }
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
functions:
  vote:
    handler: handler.vote
    events:
      - http:
          path: vote
          method: post
          cors: true
  getScore:
    handler: handler.get_rating
    events:
      - http:
          path: rating
          method: get
          cors: true

resources:
  Resources:
    VoteTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: bakerName
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: bakerName
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    DevspaceUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: DevSpaceTest2
    UiLocation:
      Type: AWS::S3::Bucket