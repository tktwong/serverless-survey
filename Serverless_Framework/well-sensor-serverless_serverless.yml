service:
  name: mqtt-data-service

tenant: rostykromanyshyn
app: well-sensor

custom:
  secrets: ${file(secrets.json)}

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1

  environment:
    BUCKET_NAME: ${self:custom.secrets.BUCKET_NAME}
    ATHENA_BUCKET_NAME: ${self:custom.secrets.ATHENA_BUCKET_NAME}
    DATABASE_NAME: ${self:custom.secrets.DATABASE_NAME}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - 's3:GetBucketLocation'
        - 's3:GetObject'
        - 's3:ListBucket'
        - 's3:ListBucketMultipartUploads'
        - 's3:ListMultipartUploadParts'
        - 's3:AbortMultipartUpload'
        - 's3:CreateBucket'
        - 's3:PutObject'
      Resource:
        - 'arn:aws:s3:::${self:custom.secrets.BUCKET_NAME}/*'
        - 'arn:aws:s3:::${self:custom.secrets.BUCKET_NAME}'
        - 'arn:aws:s3:::${self:custom.secrets.ATHENA_BUCKET_NAME}'
        - 'arn:aws:s3:::${self:custom.secrets.ATHENA_BUCKET_NAME}/*'
    - Effect: 'Allow'
      Action:
        - 'glue:*'
      Resource:
        - '*'
    - Effect: 'Allow'
      Action:
        - 'athena:*'
      Resource:
        - '*'

functions:
  getLastSeen:
    handler: handler.getLastSeen
    events:
      - http:
          method: get
          path: last-seen

  getLastRecords:
    handler: handler.getLastRecords
    events:
      - http:
          method: get
          path: last-records

  countPerPeriod:
    handler: handler.countPerPeriod
    events:
      - http:
          method: get
          path: count/group-by/{dateTrunc}
  
  getDataPerPeriod:
    handler: handler.getDataPerPeriod
    events:
      - http:
          method: get
          path: data/group-by/{dateTrunc}
