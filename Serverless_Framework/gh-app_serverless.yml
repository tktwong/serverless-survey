# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: reg-gh-app

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs10.x
  timeout: 12

# you can add packaging information here
package:
  exclude:
    - ./**
  include:
    - dist/**
    - package.json

functions:
  #   hello:
  #     handler: lib/handler.hello
  #     events:
  #       - http:
  #           path: api/hello
  #           method: get
  #           cors: true
  webhook:
    handler: dist/handler.ghWebhook
    events:
      - http:
          path: api/gh-webhook
          method: post
          cors: true
  login:
    handler: dist/handler.login
    events:
      - http:
          path: api/login
          method: post
          cors: true
  status:
    handler: dist/handler.updateStatus
    events:
      - http:
          path: api/update-status
          method: post
          cors: true
  prcomments:
    handler: dist/handler.commentToPR
    events:
      - http:
          path: api/comment-to-pr
          method: post
          cors: true
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      NODE_ENV: PRODUCTION

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
plugins:
  - serverless-offline
