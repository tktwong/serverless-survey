# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: planet
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment: 
    DYNAMO_DB_PLANET_TABLE : ${self:service}-${opt:stage, self:provider.stage}
    DYNAMO_DB_PEOPLE_TABLE : Â¨people-${opt:stage , self:provider.stage}"
    GW_URL:
      Fn::Join:
        - ""
        - - "https://"
          - Ref: "ApiGatewayRestApi"
          - ".execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "*"

functions:
  list:
    handler: api/functions/planet.list
    events: 
      - http: 
          path: planets
          method: get
  detail:
    handler: api/functions/planet.detail
    events: 
      - http: 
          path: planets/{id}
          method: get
  create: 
    handler: api/functions/planet.create
    events:
      - http: 
          path: planets
          method: post
  update: 
    handler: api/functions/planet.update
    events:
      - http: 
          path: planets/{id}
          method: patch
  delete: 
    handler: api/functions/planet.delete
    events:
      - http: 
          path: planets/{id}
          method: delete

resources:
  Resources:
    PlanetDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMO_DB_PLANET_TABLE}
