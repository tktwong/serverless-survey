service: person-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    PERSON_TABLE: person-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
plugins:
  - serverless-offline
functions:
  crearPersona:
    handler: people.submit
    memorySize: 128
    description: Crea una persona
    events:
      - http:
          path: api/people/v1/
          method: post
  listarPersonas:
    handler: people.list
    memorySize: 128
    description: Lista todas las personas
    events:
      - http: 
          path: api/people/v1/
          method: get
  obtenerPersonaPorId: 
    handler: people.get
    events:
      - http:
          path: api/people/v1/{id}
          method: get
  obtenerInfoAPIPorId: 
    handler: people.getInfoPerson
    events:
      - http:
          path: api/people/v1/info/{id}
          method: get
resources:
  Resources:
    PeopleDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.PERSON_TABLE}
