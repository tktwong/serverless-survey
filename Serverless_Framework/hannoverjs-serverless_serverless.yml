service: hjs-serverless

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
          - "ses:SendEmail"
      Resource: "arn:aws:ses:*:*:*/*"

package:
    exclude:
        - "node_modules/**"
        - "!node_modules/uuid/**"
        - "!node_modules/async/**"

functions:
  createMeetup:
    handler: functions/meetup.createMeetup
    events:
        - http:
            path: meetup
            method: post
  getAllMeetups:
    handler: functions/meetup.getAllMeetups
    events:
        - http:
            path: meetup
            method: get
  getMeetupById:
    handler: functions/meetup.getMeetupById
    events:
        - http:
            path: meetup/{id}
            method: get
  createSpeaker:
    handler: functions/speaker.createSpeaker
    events:
        - http:
            path: meetup/{id}/speaker
            method: post
  getSpeakersByMeetup:
    handler: functions/speaker.getSpeakersByMeetup
    events:
        - http:
            path: meetup/{id}/speaker
            method: get
  sendSpeakersEmail:
    handler: functions/email.sendSpeakersEmail
    events:
        - stream:
            arn: "add arn here"
            batchSize: 1

resources:
    Resources:
        MeetupsTable:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: meetups
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: S
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        MeetupsTableIAMPolicy:
          Type: AWS::IAM::Policy
          DependsOn: MeetupsTable
          Properties:
            PolicyName: meetups-table-lambda-dynamodb
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:Scan
                  Resource: arn:aws:dynamodb:*:*:table/meetups
            Roles:
                - Ref: IamRoleLambdaExecution
        SpeakerTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: speakers
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                    - AttributeName: meetup_id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                    - AttributeName: meetup_id
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                StreamSpecification:
                    StreamViewType: NEW_IMAGE
        SpeakerTableIamPolicy:
            Type: AWS::IAM::Policy
            DependsOn: SpeakerTable
            Properties:
                PolicyName: speakers-table-access
                PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Effect: Allow
                          Action:
                            - dynamodb:GetItem
                            - dynamodb:PutItem
                            - dynamodb:Scan
                          Resource: arn:aws:dynamodb:*:*:table/speakers
                Roles:
                    - Ref: IamRoleLambdaExecution
        SpeakersStreamIamPolicy:
            Type: AWS::IAM::Policy
            DependsOn: SpeakerTable
            Properties:
                PolicyName: speakers-stream-access
                PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Effect: Allow
                          Action:
                            - dynamodb:DescribeStream
                            - dynamodb:GetRecords
                            - dynamodb:GetShardIterator
                            - dynamodb:ListStreams
                          Resource: arn:aws:dynamodb:eu-west-1:*:table/speakers/stream/*
                Roles:
                    - Ref: IamRoleLambdaExecution
