service: securityTemplate-profile

custom:
  stage: ${opt:stage, self:provider.stage}
  serviceName: securityTemplate-${self:custom.stage}

package:
  individually: true
provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  environment:
    TABLE_NAME:
      'Fn::ImportValue': ${self:custom.serviceName}:DynamoDbTable
    REGION: ${self:provider.region}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          'Fn::ImportValue': ${self:custom.serviceName}:TableArn
  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:custom.serviceName}:sharedGateway-restApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:custom.serviceName}:sharedGateway-rootResourceId
functions:
  getProfile:
    handler: functions/get/getProfile.getProfile
    package:
      include:
        - functions/get/getProfile.js
      exclude:
        - functions/**
    events:
      - http:
          path: profile/{username}
          method: get
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              "Fn::ImportValue": ${self:custom.serviceName}:cognito-authorizer
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate' # Caches on browser and proxy for 10 minutes and doesnt allow proxy to serve out of date content
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              application/json: ${file(../gateway/templates/genericMappingTemplate.vtl)}
          response:
            statusCodes:
              200:
                pattern:''
              400:
                pattern: '.*"customLambdaError".*'
                template: $input.path('$.errorMessage')
  updateProfile:
    handler: functions/post/updateProfile.updateProfile
    package:
      include:
        - functions/post/updateProfile.js
      exclude:
        - functions/**
    events:
      - http:
          path: profile
          method: post
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              "Fn::ImportValue": ${self:custom.serviceName}:cognito-authorizer
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate' # Caches on browser and proxy for 10 minutes and doesnt allow proxy to serve out of date content
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              application/json: ${file(../gateway/templates/genericMappingTemplate.vtl)}
          response:
            statusCodes:
              200:
                pattern:''
              400:
                pattern: '.*"customLambdaError".*'
                template: $input.path('$.errorMessage')
  deleteProfile:
    handler: functions/delete/deleteProfile.deleteProfile
    package:
      include:
        - functions/delete/deleteProfile.js
      exclude:
        - functions/**
    events:
      - http:
          path: profile
          method: delete
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              "Fn::ImportValue": ${self:custom.serviceName}:cognito-authorizer
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate' # Caches on browser and proxy for 10 minutes and doesnt allow proxy to serve out of date content
          integration: lambda
          request:
            passThrough: WHEN_NO_TEMPLATES
            template:
              application/json: ${file(../gateway/templates/genericMappingTemplate.vtl)}
          response:
            statusCodes:
              200:
                pattern:''
              400:
                pattern: '.*"customLambdaError".*'
                template: $input.path('$.errorMessage')
