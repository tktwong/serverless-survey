service: vib-mon-sls 

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  # you can overwrite defaults here
  stage: dev
  region: ap-southeast-2
  # region: ap-south-1
  environment:
    DYNAMODB_TABLE: ${self:service}-device-${opt:stage, self:provider.stage}
    DYNAMODB_ALERTS_TABLE: ${self:service}-alerts-${opt:stage, self:provider.stage}
    DYNAMODB_TABLE_TEST: DYNAMODB_TABLE_TESTTABLE
    # DEVICE_READINGS_DYNAMODB_TABLE: vib-mon-sls-device-readings-dev
    # DEVICE_READINGS_DYNAMODB_TABLE: vib-mon-sls-device-readings-dev
    DEVICE_READINGS_DYNAMODB_TABLE: ${self:service}-device-readings-${opt:stage, self:provider.stage}


  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_ALERTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DEVICE_READINGS_DYNAMODB_TABLE}"

functions:
  create:
    handler: services/create.create
    events:
      - http:
          path: devices
          method: post
          cors: true

  list:
    handler: services/list.list
    events:
      - http:
          path: devices
          method: get
          cors: true

  get:
    handler: services/get.get
    events:
      - http:
          path: devices/{id}
          method: get
          cors: true

  update:
    handler: services/update.update
    events:
      - http:
          path: devices/{id}
          method: put
          cors: true

  delete:
    handler: device/delete.delete
    events:
      - http:
          path: devices/{id}
          method: delete
          cors: true
  
  list-alert:
    handler: services/alert-list.list
    events:
      - http:
          path: alerts 
          method: get
          cors: true

  list-device-alert:
    handler: services/alert.get
    events:
      - http:
          path: devices/{id}/alerts
          method: get
          cors: true

  device-readings:
    handler: services/list.getReadings
    events:
      - http:
          path: devices/{id}/readings
          method: get
          cors: true
resources:
  Resources:
    DeviceDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    AlertDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_ALERTS_TABLE}
