service: example-stepf-nodejs

provider:
  name: aws
  runtime: nodejs12.x
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ec2:*"
        - "s3:*"
      Resource:
        - "*"

functions:
  startEC2:
    handler: src/functions/ec2/index.startEC2
    iamRoleStatements:
      - Effect: "Allow"        
        Action: 
          "lambda:InvokeFunction"    
        Resource:  "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-writeS3"
  writeS3:
    handler: src/functions/s3/index.writeS3

stepFunctions:
  stateMachines:
    hellostepfunc1:
      events:
        - http:
            path: startEC2
            method: post
      definition:
        Comment: "A sample application"
        StartAt: StartEC2
        States:
          StartEC2:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-startEC2"
            Next: WriteS3
          WriteS3:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-writeS3"
            End: true

plugins:
  - serverless-webpack
  - serverless-step-functions
  - serverless-pseudo-parameters
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true  

