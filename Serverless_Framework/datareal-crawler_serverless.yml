service: datareal-crawler

frameworkVersion: ^2.23.0

plugins:
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-python-requirements

package:
  exclude:
    - dist/**
    - src/**
    - node_modules/**
    - __pycache__/**

provider:
  name: aws
  runtime: python3.8
  stage: dev
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    CRAWLS_TABLE_NAME: ${self:custom.crawlsTableName}
    PROPERTIES_TABLE_NAME: ${self:custom.propertiesTableName}
    CRAWLS_XPATH: ${self:custom.crawlsXpathTableName}
    SCRAPE_XPATH: ${self:custom.scrapeXpathTableName}
    PRICE_VARIATION: ${self:custom.priceVariationTableName}
    CHECKER_ARN: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-checker"
    CRAWLS_ARN: ${self:resources.Outputs.CrawlsStateMachine.Value}
    DISPATCHER_ARN: ${self:resources.Outputs.DispatcherStateMachine.Value}
    VERIFIER_ARN: ${self:resources.Outputs.VerifierStateMachine.Value}
    SCRAPE_ARN: ${self:resources.Outputs.ScrapeStateMachine.Value}
    PRICE_VERIFIER_ARN: ${self:resources.Outputs.PriceVerifierStateMachine.Value}
    FINISHER_ARN: ${self:resources.Outputs.FinisherStateMachine.Value}
    API_KEY: "c99f7077da80e3cebb9f29e288ac87e8"
    API_URL: "http://api.scraperapi.com/"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - ${self:custom.propertiesTableArn}
        - ${self:custom.crawlsTableArn}
        - ${self:custom.priceVariationTableArn}
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - "arn:aws:s3:::datareal-crawler-bodies/*"
        - "arn:aws:s3:::datareal-crawler-bodies"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
      Resource:
        # datareal-crawler-dev-properties table-index
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.propertiesTableName}"
        - Fn::Join:
          - "/"
          -
            - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.propertiesTableName}"
            - "index/*"
        # datareal-crawler-dev-crawls table-index
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.crawlsTableName}"
        - Fn::Join:
          - "/"
          -
            - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.crawlsTableName}"
            - "index/*"
        # datareal-crawler-dev-crawls-config table-index
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.crawlsXpathTableName}"
        - Fn::Join:
          - "/"
          -
            - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.crawlsXpathTableName}"
            - "index/*"
        # datareal-crawler-dev-scrape-config table-index
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.scrapeXpathTableName}"
        - Fn::Join:
          - "/"
          -
            - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.scrapeXpathTableName}"
            - "index/*"
        # datareal-price-variation table-index
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/datareal-price-variation"
        - Fn::Join:
          - "/"
          -
            - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/datareal-price-variation"
            - "index/*"
    - Effect: Allow
      Action:
        - lambda:invokeFunction
        - states:StartExecution
      Resource:
        - ${self:custom.CrawlsStateMachineArn}
        - ${self:custom.DispatcherStateMachineArn}
        - ${self:custom.VerifierStateMachineArn}
        - ${self:custom.ScrapeStateMachineArn}
        - ${self:custom.PriceVerifierStateMachineArn}
        - ${self:custom.FinisherStateMachineArn}
        - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-checker"

custom:
  prune:
    automatic: true
    number: 3
  pythonRequirements:
    dockerizePip: false
    slim: true
  propertiesTableName: ${self:service}-${self:provider.stage}-properties
  propertiesTableArn:
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.propertiesTableName}
  crawlsTableName: ${self:service}-${self:provider.stage}-crawls
  crawlsTableArn:
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.crawlsTableName}
  priceVariationTableName: 'datareal-price-variation'
  priceVariationTableArn:
      Fn::Join:
      - ":"
      - - arn
        - aws
        - dynamodb
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - table/${self:custom.priceVariationTableName}
  crawlsXpathTableName: ${self:service}-${self:provider.stage}-crawls-config
  scrapeXpathTableName: ${self:service}-${self:provider.stage}-scrape-config
  DailyStateMachineArn:
    Fn::GetAtt: [DailyStateMachine, Arn]
  CrawlsStateMachineArn:
    Fn::GetAtt: [CrawlsStateMachine, Arn]
  DispatcherStateMachineArn:
    Fn::GetAtt: [DispatcherStateMachine, Arn]
  VerifierStateMachineArn:
    Fn::GetAtt: [VerifierStateMachine, Arn]
  ScrapeStateMachineArn:
    Fn::GetAtt: [ScrapeStateMachine, Arn]
  PriceVerifierStateMachineArn:
    Fn::GetAtt: [PriceVerifierStateMachine, Arn]
  FinisherStateMachineArn:
    Fn::GetAtt: [FinisherStateMachine, Arn]

functions:
  checker:
    handler: functions/online_checker.run
    timeout: 600
  daily:
    handler: functions/daily.run
    timeout: 100
  crawl:
    handler: functions/crawls.run
    timeout: 600
  dispatcher:
    handler: functions/dispatcher.run
    timeout: 100
  verifier:
    handler: functions/verifier.run 
    timeout: 100
  scrape:
    handler: functions/scrape.run
    timeout: 100
  priceverifier:
    handler: functions/priceverifier.run
    timeout: 10
  finisher:
    handler: functions/finisher.run

stepFunctions:
  stateMachines:
    dailystatefunc:
      name: DailyStateMachine
      definition:
        Comment: "A function to run all the added sites in one call"
        StartAt: Daily
        States:
          Daily:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-daily"
            End: true
    crawlsstatefunc:
      name: CrawlsStateMachine
      events:
        - http:
            path: crawls
            method: POST
            cors: true
      definition:
        Comment: "A spider to crawl buildings on real estate webistes"
        StartAt: Crawl
        States:
          Crawl:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-crawl"
            End: true
    dispatcherstatefunc:
      name: DispatcherStateMachine
      definition:
        Comment: "A State Machine to create Crawls job and Scrape jobs"
        StartAt: Dispatcher
        States:
          Dispatcher:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-dispatcher"
            End: true
    verifierstatefunc:
      name: VerifierStateMachine
      definition:
        Comment: "A State Machine to verify if HTML body exists on S3"
        StartAt: Verifier
        States:
          Verifier:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-verifier"
            End: true
    scrapestatefunc:
      name: ScrapeStateMachine
      events:
        - http:
            path: scrapes
            method: POST
            cors: true
      definition:
        Comment: "A Spider to crawl building information on real estate websites"
        StartAt: Scrape
        States:
          Scrape:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-scrape"
            End: true
    priceverifierstatefunc:
      name: PriceVerifierStateMachine
      definition:
        Comment: "A State Machine to verify price variation"
        StartAt: PriceVerifier
        States:
          PriceVerifier:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-priceverifier"
            End: true
    finisherstatefunc:
      name: FinisherStateMachine
      definition:
        Comment: "A State Machine to save HTML body to S3 and content to DynamoDB"
        StartAt: Finisher
        States:
          Finisher:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-finisher"
            End: true

resources:
  Resources:
    CrawlsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.crawlsTableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: scrapeId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: scrapeId
            KeyType: RANGE
  Outputs:
    PropertiesTableName:
      Description: The name of the Properties Dynamo table
      Value: ${self:custom.propertiesTableName}
    PropertiesTableArn:
      Description: The ARN of the Properties Dynamo table
      Value: ${self:custom.propertiesTableArn}
    CrawlsTableName:
      Description: The name of the Crawls Dynamo table 
      Value: ${self:custom.crawlsTableName}
    CrawlsTableArn:
      Description: The ARN of the Crawls Dynamo table
      Value: ${self:custom.crawlsTableArn}
    PriceVariationTableName:
      Description: The name of the PriceVariation Dynamo table
      Value: ${self:custom.priceVariationTableName}
    PriceVariationTableArn:
      Description: The ARN of the PriceVariation Dynamo table
      Value: ${self:custom.priceVariationTableArn}
    CrawlsXpathTableName:
      Description: The name of the Crawl Dynamo table that contain XPaths
      Value: ${self:custom.crawlsXpathTableName}
    ScrapeXpathTableName:
      Description: The name of the Scrape Dynamo table that contain XPaths
      Value: ${self:custom.scrapeXpathTableName}
    DailyStateMachine:
      Description: The ARN of the Daily state machine
      Value: ${self:custom.DailyStateMachineArn}
    CrawlsStateMachine:
      Description: The ARN of the Crawl state machine
      Value: ${self:custom.CrawlsStateMachineArn}
    DispatcherStateMachine:
      Description: The ARN of the Dispatcher state machine
      Value: ${self:custom.DispatcherStateMachineArn}
    VerifierStateMachine:
      Description: The ARN of the Verifier state machine
      Value: ${self:custom.VerifierStateMachineArn}
    ScrapeStateMachine:
      Description: The ARN of the Scrape state machine
      Value: ${self:custom.ScrapeStateMachineArn}
    PriceVerifierStateMachine:
      Description: The ARN of the Price Verifier state machine
      Value: ${self:custom.PriceVerifierStateMachineArn}
    FinisherStateMachine:
      Description: The ARN of the Finisher state machine
      Value: ${self:custom.FinisherStateMachineArn}