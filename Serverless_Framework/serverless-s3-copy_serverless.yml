# For full config options, check the docs:
#    docs.serverless.com

#Use case: a file is uploaded to the upload bucket in the 'uploads/' folder and then copied to the receiving bucket and deleted from the upload bucket
service: s3Copy

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details (docs.serverless.com)
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  environment:
    #CHANGEME to whatever buckets you are uploading and receiving with
    uploadBucket: "upload-bucket"
    receivingBucket: "receiving-bucket"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "*"

functions:
  copy:
    handler: handler.s3Copy
    events:
      - s3:
          bucket: ${self:provider.environment.uploadBucket}
          event: s3:ObjectCreated:*
          #the 'existing' property is very important b/c without it, sls will try to create a new bucket
          existing: true
          rules:
            - prefix: uploads/
