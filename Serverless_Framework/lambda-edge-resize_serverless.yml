service:
  name: lambda-edge-resize

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-stack-output
  - serverless-prune-plugin

provider:
  name: aws
  region: us-east-1 # Lambda@Edge restriction
  profile: yuya
  runtime: nodejs8.10
  role: LambdaEdgeRole
  logRetentionInDays: 14

custom:
  stage: "${opt:stage, self:provider.stage}"
  webpack:
    packager: yarn
    includeModules:
      forceInclude:
        - sharp # for native Node.js Add-on
  # stack output plugin
  output:
    handler: scripts/output.handler
    file: ../lambda.json
  prune:
    automatic: true
    number: 3

functions:
  OriginResponse:
    handler: handler.originResponse

resources:
  Resources:
    LambdaEdgeRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
              - edgelambda.amazonaws.com
            Action:
            - sts:AssumeRole
        Policies:
        - PolicyName: "${self:custom.stage}-serverless-lambdaedge"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: 'arn:aws:logs:*:*:*'
            - Effect: "Allow"
              Action:
              - "s3:PutObject"
              Resource:
                Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: "ServerlessDeploymentBucket"
            # functionality
            - Effect: "Allow"
              Action:
              - "s3:GetObject"
              Resource:
              - "arn:aws:s3:::*"
