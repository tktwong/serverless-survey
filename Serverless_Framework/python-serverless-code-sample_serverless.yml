app: zeconomy
service: translation
package:
    individually: true
    exclude:
        - .*
        - .**/**
        - aws/**
        - node_modules/aws-sdk/**
        - README.md
        - buildspec.yml
        - serverless.yml
        - package.json
        - package-lock.json
        - Pipfile
        - Pipfile.lock
custom:
    cors:
        origin: '*'
        allowCredentials: false
        headers:
            - Content-Type
    pythonRequirements:
        slim: true
        usePipenv: true
        dockerizePip: non-linux
        dockerImage: lambci/lambda:build-python3.7
    serverless-offline:
        port: 9000
        prefix: ${self:app}-${self:service}
        stage: local
        region: us-east-2
        noAuth: true
    dynamodb:
        stages:
            - local
        start:
            port: 4000
            inMemory: true
            migrate: true
            seed: true
        seed:
            translations:
                sources:
                    -
                        table: ${self:provider.stackTags.name}-translations
                        sources: [./tests/seed/translations.json]
provider:
    name: aws
    runtime: python3.7
    logRetentionInDays: 3
    versionFunctions: false
    endpointType: regional
    environment:  ${file(./aws/envs/${opt:aws/envs, 'local'}.yml):environment}
    stage: ${opt:stage, 'local'}
    region: ${opt:region, 'us-east-2'}
    stackName: ${self:provider.stackTags.name}
    apiName: ${self:provider.stackTags.name}
    deploymentPrefix: ${self:provider.stackTags.name}
    deploymentBucket:
        name: ${self:provider.stage}-zeconomy-deployments
    stackTags:
        name: ${self:provider.stage}-${self:app}-${self:service}
        environment: ${self:provider.stage}
        managed-by: serverless
    iamRoleStatements:
            - '${file(./aws/iamroles/dynamodb.yml)}'
resources:
    - '${file(./aws/resources/apigateway.yml)}'
    - '${file(./aws/resources/dynamodb.yml)}'
functions:
    v1-http-handler:
        name: ${self:provider.stackTags.name}-v1-http-handler
        description: API Router
        handler: application.v1.handlers.http._router.route
        memorySize: 512
        timeout: 30
        events:
            - http:
                path: /v1
                method: ANY
                cors: ${self:custom.cors}
            - http:
                path: /v1/{proxy+}
                method: ANY
                cors: ${self:custom.cors}
plugins:
    - serverless-plugin-bind-deployment-id
    - serverless-python-requirements
    - serverless-offline
    - serverless-dynamodb-local
