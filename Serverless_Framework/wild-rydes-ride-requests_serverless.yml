# Request ride
service: wild-rydes-ride-requests


plugins:
  - serverless-python-requirements

custom:
  stage: "${opt:stage, env:SLS_STAGE, 'dev'}"
  profile: "${opt:aws-profile, env:AWS_PROFILE, env:AWS_DEFAULT_PROFILE, 'default'}"
  region: "${opt:region, 'us-east-2'}"
  log_level: "${env:LOG_LEVEL, 'INFO'}"

  request_unicorn_url: "${cf:wild-rydes-ride-fleet-${self:custom.stage}.RequestUnicornUrl}"


provider:
  name: aws
  profile: ${self:custom.profile}
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  cfnRole: "arn:aws:iam::${env:AWS_ACCOUNT}:role/CloudFormationDeployRole"
  runtime: python3.6
  environment:
    LOG_LEVEL: ${self:custom.log_level}
  stackTags:
    serverless:service: ${self:service}


functions:
  RequestRide:
    handler: handlers/request_ride.handler
    description: "Request a ride."
    memorySize: 128
    timeout: 30
    environment:
      REQUEST_UNICORN_URL: "${self:custom.request_unicorn_url}"
    events:
      - http:
          path: /ride
          method: post
          cors: true

resources:
  Outputs:
    RequestRideUrl:
      Description: "URL to request a ride"
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/${self:custom.stage}"
            - "/ride"
      Export:
        Name: "${self:service}-${self:provider.stage}-RequestRideUrl"

