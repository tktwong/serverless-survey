service:
  name: actioservice

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  profile: personal
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    # Effect: Allow
    # Action:
    #   - dynamodb:PutItem
    # Resource:
    #   - ${self:custom.AuctionsTable.arn}
    #   # - { "Fn::GetAtt": ["AuctionsTable", "Arn"] }
    #   #arn:aws:dynamodb:us-east-1:738974071854:table/AuctionsTable
    #   #arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/AuctionsTable

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
    - http:
        method: PATCH
        path: /auction/{id}/bid

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    # Type: AWS::DynamoDB::Table
    # Properties:
    #   KeySchema:
    #     - AttributeName: id
    #       KeyType: HASH
    #   TableName: AuctionsTable-${self:provider.stage}
    #   BillingMode: PAY_PER_REQUEST
    #   AttributeDefinitions:
    #     - AttributeName: id
    #       AttributeType: S

custom:
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  bundle:
    linting: false
