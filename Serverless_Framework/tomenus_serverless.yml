frameworkVersion: '2'

service: tomenus
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  serverless-offline:
    allowCache: false
    useChildProcesses: true
  dbHost:
    dev: localhost
  dbUsername:
    dev: tomenusdev
  dbPassword:
    dev: tomenus123123

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 512
  environment:
    ENV: ${self:provider.stage}
    DB_HOST: ${self:custom.dbHost.${self:provider.stage}}
    DB_NAME: ${self:custom.dbUsername.${self:provider.stage}}
    DB_USERNAME: ${self:custom.dbUsername.${self:provider.stage}}
    DB_PASSWORD: ${self:custom.dbPassword.${self:provider.stage}}
    DB_PORT: 5432


#resources:
#  Resources:

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  GetRestaurant:
    handler: restaurants.controller.get_restaurant
    events:
      - http:
          method: GET
          path: v1/restaurants/{restaurant_id}
  GetRestaurants:
    handler: restaurants.controller.get_restaurants
    events:
      - http:
          method: GET
          path: v1/restaurants
  CreateRestaurant:
    handler: restaurants.controller.create_restaurant
    events:
      - http:
          method: POST
          path: v1/restaurants
  UpdateRestaurant:
    handler: restaurants.controller.update_restaurant
    events:
      - http:
          method: PUT
          path: v1/restaurants/{restaurant_id}
  GetMenu:
    handler: menus.controller.get_menu
    events:
      - http:
          method: GET
          path: v1/menus/{menu_id}
  GetMenus:
    handler: menus.controller.get_menus
    events:
      - http:
          method: GET
          path: v1/menus
  CreateMenu:
    handler: menus.controller.create_menu
    events:
      - http:
          method: POST
          path: v1/menus
  UpdateMenu:
    handler: menus.controller.update_menu
    events:
      - http:
          method: PUT
          path: v1/menus/{menu_id}
  GetMenuItem:
    handler: menu_items.controller.get_menu_item
    events:
      - http:
          method: GET
          path: v1/menu_items/{menu_item_id}
  GetMenuItems:
    handler: menu_items.controller.get_menu_items
    events:
      - http:
          method: GET
          path: v1/menu_items
  CreateMenuItem:
    handler: menu_items.controller.create_menu_item
    events:
      - http:
          method: POST
          path: v1/menu_items
  UpdateMenuItem:
    handler: menu_items.controller.update_menu_item
    events:
      - http:
          method: PUT
          path: v1/menu_items/{menu_item_id}
