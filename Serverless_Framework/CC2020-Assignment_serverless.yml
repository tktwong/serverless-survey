service: grouplite
app: grouplite-app
org: alexjonjarvis

provider:
  name: aws
  runtime: python3.8
  role: arn:aws:iam::986870807352:role/lambda-vpc-role

  vpc:
    securityGroupIds:
      - sg-19f02336
    subnetIds:
      - subnet-1b556a25
      - subnet-20fb406d
      - subnet-37278539
      - subnet-904cb9cf
      - subnet-beab5d9f
      - subnet-cddd35ab

  environment:
    RDS_HOST: ${file(credentials.yml):RDS_HOST}
    DB_PASS: ${file(credentials.yml):DB_PASS}
    DB_USERNAME: ${file(credentials.yml):DB_USERNAME}
    DB_NAME: ${file(credentials.yml):DB_NAME}
    TOKEN_SECRET: ${file(credentials.yml):TOKEN_SECRET}

plugins:
  - serverless-offline

package:
  individually: true
  exclude:
    - venv/**

functions:
  auth:
    handler: authentication/sessions.auth

  get_users:
    handler: users/users.get_users
    events:
      - http:
          method: GET
          path: /user
          cors: true
          authorizer: auth

  create_group:
    handler: group/group.create_group
    events:
      - http:
          method: POST
          path: /group
          cors: true
          authorizer: auth

  delete_group:
    handler: group/group.delete_group
    events:
      - http:
          method: DELETE
          path: /group
          cors: true
          authorizer: auth

  get_group:
    handler: group/group.get_group
    events:
      - http:
          method: GET
          path: /group
          cors: true
          authorizer: auth

  get_group_members:
    handler: group/membership.get_group_members
    events:
      - http:
          method: GET
          path: /group/members
          cors: true
          authorizer: auth

  get_user_groups:
    handler: group/membership.get_user_groups
    events:
      - http:
          method: GET
          path: /user/groups
          cors: true
          authorizer: auth

  add_membership:
    handler: group/membership.add_membership
    events:
      - http:
          method: POST
          path: /group/members
          cors: true
          authorizer: auth

  delete_membership:
    handler: group/membership.delete_membership
    events:
      - http:
          method: DELETE
          path: /group/members
          cors: true
          authorizer: auth

  create_post:
    handler: group/posts.create_post
    events:
      - http:
          method: POST
          path: /group/posts
          cors: true
          authorizer: auth

  delete_post:
    handler: group/posts.delete_post
    events:
      - http:
          method: DELETE
          path: /group/posts
          cors: true
          authorizer: auth

  get_users_posts:
    handler: group/posts.get_users_posts
    events:
      - http:
          method: GET
          path: /user/posts
          cors: true
          authorizer: auth

  get_group_posts:
    handler: group/posts.get_group_posts
    events:
      - http:
          method: GET
          path: /group/posts
          cors: true
          authorizer: auth

  get_post:
    handler: group/posts.get_post
    events:
      - http:
          method: GET
          path: /posts
          cors: true
          authorizer: auth

  get_image:
    handler: group/posts.get_image
    events:
      - http:
          method: GET
          path: /image
          cors: true
          authorizer: auth

  create_event:
    handler: event/event.create_event
    events:
      - http:
          method: POST
          path: /event
          cors: true
          authorizer: auth

  delete_event:
    handler: event/event.delete_event
    events:
      - http:
          method: DELETE
          path: /event
          cors: true
          authorizer: auth

  get_event:
    handler: event/event.get_event
    events:
      - http:
          method: GET
          path: /event
          cors: true
          authorizer: auth

  get_group_events:
    handler: event/event.get_group_events
    events:
      - http:
          method: GET
          path: /group/events
          cors: true
          authorizer: auth

  get_users_events:
    handler: event/event.get_users_events
    events:
      - http:
          method: GET
          path: /user/events
          cors: true
          authorizer: auth

  add_attendance:
    handler: event/attending.add_attendance
    events:
      - http:
          method: POST
          path: /event/attend
          cors: true
          authorizer: auth

  delete_attendance:
    handler: event/attending.delete_attendance
    events:
      - http:
          method: DELETE
          path: /event/attend
          cors: true
          authorizer: auth

  get_attending:
    handler: event/attending.get_attending
    events:
      - http:
          method: GET
          path: /user/events/attend
          cors: true
          authorizer: auth

  get_event_attendees:
    handler: event/attending.get_event_attendees
    events:
      - http:
          method: GET
          path: /event/attend
          cors: true
          authorizer: auth

  signup:
    handler: users/users.post_user
    events:
      - http:
          method: POST
          path: /user
          cors: true

  login:
    handler: authentication/sessions.login
    events:
      - http:
          method: POST
          path: /login
          cors: true