service: industry-server
package:
  artifact: package.zip
provider:
  name: aws
  runtime: python2.7
  stage: ${env:ENV}
  region: ${env:AWS_REGION}
  memorySize: 256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"
resources:
  Resources:
    PlayerDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: PlayerID
            AttributeType: S
        KeySchema:
          -
            AttributeName: PlayerID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: player
    CompanyDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: CompanyID
            AttributeType: S
        KeySchema:
          -
            AttributeName: CompanyID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: company
functions:
  crud:
    handler: handler.Handler
    events:
      - http:
          path: player
          method: post
          cors: true
      - http:
          path: player/{id}
          method: put
          cors: true
      - http:
          path: player/{id}
          method: get
          cors: true
      - http:
          path: company
          method: post
          cors: true
      - http:
          path: company/{id}
          method: put
          cors: true
      - http:
          path: company/{id}
          method: get
          cors: true