service: challenger-api

provider:
  name: aws
  runtime: nodejs8.10
  stage: test
  environment:
    BOT_TOKEN: ${ssm:challenger-bot-token-${opt:stage, self:provider.stage}}
    STAGE: ${opt:stage, self:provider.stage}
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: 
      Fn::Join:
        - ''
        - - 'arn:aws:dynamodb:us-east-1:'
          - Ref: AWS::AccountId
          - ':table/challenger-${opt:stage, self:provider.stage}'

package:
  include:
    - index.js
    - package-lock.json
    - package.json
    - app/**
    - node_modules/**

functions:
  index:
    handler: index.handler
    events:
      - http: POST challenge
      - http: POST reply
      - http: POST list-challenges

resources:
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: challenger-${opt:stage, self:provider.stage}
        AttributeDefinitions:
          - AttributeName: Timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: Timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        Tags:
        - Key: Name
          Value: challenger-dynamo
        - Key: lm_app
          Value: challenger
        - Key: lm_app_env
          Value: sandbox
        - Key: lm_sbu
          Value: CI