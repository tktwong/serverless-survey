service: publications-api

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  environment:
    DATABASE_CONNECTION_URI: ${ssm:/${self:provider.stage}/publications/database/connection-uri}

custom:
  serverless-offline:
    host: 0.0.0.0 # for docker container hosting

functions:
  create-publication:
    handler: src/publications.create
    events:
      - http:
          path: publications
          method: post
          cors: true
  read-publications:
    handler: src/publications.get
    events:
      - http:
          path: publications
          method: get
          cors: true

  read-summarized-publications:
    handler: src/publications.getWithSummarizedBody
    events:
      - http:
          path: publications/summaries
          method: get
          cors: true

  get-publication-by-id:
    handler: src/publications.getById
    events:
      - http:
          path: publications/{publicationId}
          method: get
          cors: true
          request:
            parameter:
              paths:
                publicationId: true

  get-publication-by-title:
    handler: src/publications.getByTitle
    events:
      - http:
          path: publications/matches/titles
          method: get
          cors: true

  update-publication:
    handler: src/publications.update
    events:
      - http:
          path: publications/{publicationId}
          method: put
          cors: true
          request:
            parameter:
              paths:
                publicationId: true

  delete-publication:
    handler: src/publications.delete
    events:
      - http:
          path: publications/{publicationId}
          method: delete
          cors: true
          request:
            parameter:
              paths:
                publicationId: true

  create-author:
    handler: src/authors.create
    events:
      - http:
          path: authors
          method: post
          cors: true
  read-authors:
    handler: src/authors.get
    events:
      - http:
          path: authors
          method: get
          cors: true

  get-author-by-id:
    handler: src/authors.getById
    events:
      - http:
          path: authors/{authorId}
          method: get
          cors: true
          request:
            parameter:
              paths:
                authorId: true

  update-author:
    handler: src/authors.update
    events:
      - http:
          path: authors/{authorId}
          method: put
          cors: true
          request:
            parameter:
              paths:
                authorId: true

  delete-author:
    handler: src/authors.delete
    events:
      - http:
          path: authors/{authorId}
          method: delete
          cors: true
          request:
            parameter:
              paths:
                authorId: true

plugins:
  - serverless-offline
