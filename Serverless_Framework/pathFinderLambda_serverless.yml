service: pathFinder

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  versionFunctions: false
  stage: dev

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
         - Ref: NotificationSNSTopic
    - Effect: "Allow"
      Action:
        - "sqs:sendMessageBatch"
      Resource:
        Fn::GetAtt: [ JobQueue, Arn ]

# you can define service wide environment variables here
  environment:
    MAX_IPS_TO_SCAN_PER_INSTANCE: 25000
    MAX_JOBS_TO_CREATE: 10000
    JOB_QUEUE:
      Ref: JobQueue

package:
  include:
    - package.json
    - package-lock.json
    - jobExecutor.js
    - gateway.js
    - lib/**

functions:
  jobExecutor:
    handler: jobExecutor.execute
    memorySize: 192
    timeout: 300
    environment:
      NOTIFICATION_SNS_TOPIC:
        Ref: NotificationSNSTopic
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt: [ JobQueue, Arn ]
  find:
    handler: gateway.find
    timeout: 10
    memorySize: 128
    events:
      - http:
          path: /find
          method: post
          request:
            parameters:
              querystrings:
                path: true
                from: true
                to: true
                regex: false

# you can add CloudFormation resource templates here
resources:
  Resources:
    NotificationSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: pathFinder-success-${self:provider.stage}
    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        MessageRetentionPeriod: 1209600
        QueueName: ${self:provider.stage}-http-path-search-jobs
        VisibilityTimeout: 300
    JobQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties: 
        PolicyDocument: 
          Id: JobQueuePolicy
          Statement:
            Effect: Allow
            Principal: "*"
            Action: 
              - "sqs:SendMessage"
              - "sqs:deleteMessage"
              - "sqs:getQueueUrl"
              - "sqs:receiveMessage"
            Resource: "*"
        Queues:
          - Ref: JobQueue
  Outputs:
    NotificationSNSTopic:
      Description: "SNS topic that the events will be published to, once a matching response is found"
      Value:
        Ref: NotificationSNSTopic
    JobQueue:
      Description: "SQS queue that contains all the search jobs to be done"
      Value:
        Ref: JobQueue
