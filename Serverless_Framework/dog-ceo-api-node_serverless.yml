service: dog-ceo-api-node

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-offline
  - serverless-s3-sync

#custom:
#  s3Bucket: dog-ceo-stanford-files # ${self:custom.s3Bucket}

provider:
  name: aws
  runtime: nodejs10
  region: eu-west-1
  stage: ${opt:stage, 'dev'}

custom:
  s3Sync:
    - bucketName: dog-ceo-api-static-content-${self:provider.stage}
      localDir: static-content

resources:
  Resources:
    Json:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: dog-ceo-api-static-content-${self:provider.stage}

functions:
  listAllBreeds:
    handler: src/listallbreeds.listallbreeds
    events:
      - http:
          path: breeds/list/all
          method: get
          cors: true
  listBreeds:
    handler: src/listbreeds.listbreeds
    events:
      - http:
          path: breeds/list
          method: get
          cors: true
  listSubBreeds:
    handler: src/listsubbreeds.listsubbreeds
    events:
      - http:
          path: breed/{breed}/list
          method: get
          cors: true
  randomImageAnyBreed:
    handler: src/randomimageanybreed.randomimageanybreed
    events:
      - http:
          path: breeds/image/random
          method: get
          cors: true
  randomImageAnyBreedWithCount:
    handler: src/randomimageanybreed.randomimageanybreed
    events:
      - http:
          path: breeds/image/random/{count}
          method: get
          cors: true
  allBreedImages:
    handler: src/allbreedimages.allbreedimages
    events:
      - http:
          path: breed/{breed}/images
          method: get
          cors: true
  allSubBreedImages:
    handler: src/allbreedimages.allbreedimages
    events:
      - http:
          path: breed/{breed}/{breed2}/images
          method: get
          cors: true
  randomImageFromBreed:
    handler: src/randomimagefrombreed.randomimagefrombreed
    events:
      - http:
          path: breed/{breed}/images/random
          method: get
          cors: true
  randomImageFromSubBreed:
    handler: src/randomimagefrombreed.randomimagefrombreed
    events:
      - http:
          path: breed/{breed}/{breed2}/images/random
          method: get
          cors: true
  breedInfo:
    handler: src/breedinfo.breedinfo
    events:
      - http:
          path: breed/{breed}
          method: get
          cors: true
  subBreedInfo:
    handler: src/breedinfo.breedinfo
    events:
      - http:
          path: breed/{breed}/{breed2}
          method: get
          cors: true
#  getImage:
#    handler: src/getimage.getimage
#    events:
#      - http:
#          path: image/{folder}/{file}
#          method: get
#          cors: true