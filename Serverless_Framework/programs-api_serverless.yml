service: programs-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - Access-Control-Allow-Origin
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  stage: ${opt:stage, self:provider.stage}
  environment:
    DB: ${env:DB_CONNECTION_STRING}

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 3
  versionFunctions: false
  endpointType: regional
  stage: dev
  region: us-east-1

functions:
# CREATE
  createDomain:
    handler: api/create.newDomain
    events:
      - http:
          path: api/program/add_domain
          method: post
          cors: true
  createProgram:
    handler: api/create.newProgram
    events:
      - http:
          path: api/program/new_program
          method: post
          cors: true
  createEndpoint:
    handler: api/create.endpoint
    events:
      - http:
          path: api/program/add_endpoint
          method: any
          cors: true
# READ
  getAllEndpoints:
    handler: api/read.getAllEndpoints
    events:
      - http:
          path: api/program/all_endpoints
          method: get
          cors: true
  getProgramEndpoints:
    handler: api/read.getOneProgram
    events:
      - http:
          path: api/program/endpoints
          method: any
          cors: true
  getProgramOffers:
    handler: api/read.getProgramOffers
    events:
      - http:
          path: api/program/offers
          method: post
          cors: true
  getAllDomains:
    handler: api/read.getAllDomains
    events:
      - http:
          path: api/program/all_domains
          method: get
          cors: true
  getByPost:
    handler: api/read.getByPost
    events:
      - http:
          path: api/program/table
          method: post
          cors: true
  getByPid:
    handler: api/read.getByPid
    events:
      - http:
          path: api/program/info/{pid}
          method: get
          cors: true
  getByPidVertical:
    handler: api/read.getByPidVertical
    events:
      - http:
          path: api/program/info/{pid}/{vertical}
          method: get
          cors: true
# UPDATE
  updateEndpoints:
    handler: api/update.programEndpoints
    events:
      - http:
          path: api/program/update_endpoints/{program_id}
          method: put
          cors: true
  updateEndpoint:
    handler: api/update.endpoint
    events:
      - http:
          path: api/program/update_one/{program_id}
          method: put
          cors: true
  updateProgramDomain:
    handler: api/update.programDomain
    events:
      - http:
          path: api/program/update_domain/{program_id}
          method: put
          cors: true
  addToProgramClickCount:
    handler: api/update.programClickCount
    events:
      - http:
          path: api/program/add_click/{program_id}
          method: put
          cors: true
# DELETE
  deleteProgram:
    handler: api/delete.removeProgram
    events:
      - http:
          path: api/program/removeById/{program_id}/{pid}
          method: delete
          cors: true
  deleteEndpoint:
    handler: api/delete.removeEndpoint
    events:
      - http:
          path: api/program/remove/{program_id}
          method: delete
          cors: true
  deleteCampaign:
    handler: api/delete.removeCampaign
    events:
      - http:
          path: api/program/remove/campaign
          method: delete
          cors: true