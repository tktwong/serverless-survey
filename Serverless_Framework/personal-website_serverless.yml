service:
  name: serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  profile: serverless
  region: ca-central-1
  runtime: nodejs12.x
  endpointType: edge
  logRetentionInDays: 14
  memorySize: 256
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    LAB_WASM_TABLE: labWasmTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.LAB_WASM_TABLE}"

functions:
  putTestData:
    handler: handler.putTestData
    events:
      - http:
          method: post
          path: lab/wasm-marker-clusterer/test
          cors:
            # TODO make this stricter
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate'

resources: # CloudFormation template syntax from here on.
  Resources:
    labWasmTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.LAB_WASM_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userAgent
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: userAgent
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 10
