service: courses

provider:
  name: aws
  runtime: nodejs12.x

  environment:
    COURSES_TABLE: courses-${opt:stage, self:provider.stage}
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.COURSES_TABLE}"

functions:
  get-all:
    handler: src/controllers/get-all.handler
    events:
      - http:
          path: /courses
          method: get

  get-all-deactivated:
    handler: src/controllers/get-all-deactivated.handler
    events:
      - http:
          path: /courses/deactivated
          method: get

  get:
    handler: src/controllers/get.handler
    events:
      - http:
          path: /courses/{id}
          method: get

  get-deactivated:
    handler: src/controllers/get-deactivated.handler
    events:
      - http:
          path: /courses/deactivated/{id}
          method: get

  post:
    handler: src/controllers/post.handler
    events:
      - http:
          path: /courses
          method: post

  put:
    handler: src/controllers/put.handler
    events:
      - http:
          path: /courses/{id}
          method: put

  delete:
    handler: src/controllers/delete.handler
    events:
      - http:
          path: /courses/{id}
          method: delete

  reactivate:
    handler: src/controllers/reactivate.handler
    events:
      - http:
          path: /courses/reactivate/{id}
          method: post
