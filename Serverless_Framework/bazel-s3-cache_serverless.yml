service: bazel-s3-cache
provider:
  name: aws
  runtime: python3.6
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  stackTags:
    'mup:owner': 'core-services'
    'mup:productName': '${self:service}'
  tracing: true
  iamRoleStatements:
   - Effect: Allow
     Action:
      - 'xray:PutTraceSegments'
      - 'xray:PutTelemetryRecords'
     Resource:
      - '*'
   - Effect: Allow
     Action:
      - "s3:*"
     Resource: { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "Cache" }, "/*" ] ] }
  environment:
    BUCKET: '${self:custom.bucket}'
    USERNAME: '${env:USERNAME}'
    PASSWORD: '${env:PASSWORD}'

plugins:
  - serverless-plugin-tracing
  - serverless-rust
custom:
  bucket: bazel-cache-${self:provider.stage}
  rust:
    cargoFlags: '--features lando/python3-sys'
package:
  individually: true
  exclude:
    - ./**
functions:
  cache:
    handler: liblambda.handler
    package:
      include:
        - liblambda.so
    events:
      - http:
          path: '/{any+}'
          method: get
      - http:
          path: '/{any+}'
          method: head
      - http:
          path: '/{any+}'
          method: put
resources:
  Resources:
    Cache:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        LifecycleConfiguration:
          Rules:
            - Id: CacheTillage
              Status: Enabled
              ExpirationInDays: 30