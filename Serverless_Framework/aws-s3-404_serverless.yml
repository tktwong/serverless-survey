# For full config options, check the docs:
#    docs.serverless.com

service: ${file(config.json):service}

package:
  exclude:
    - src/*.test.js
    - "*.test.js"
    - config.sample.json
    - fixtures/**
    - coverage/**
    - jest.config.js
    - LICENSE
    - README.md

provider:
  name: aws
  runtime: nodejs8.10
  profile: ${file(config.json):profile}
  stage: production
  region: ${file(config.json):region}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
         - "s3:GetObject"
       Resource: "arn:aws:s3:::${file(config.json):originals}"
    -  Effect: "Allow"
       Action:
         - "s3:CreateBucket"
         - "s3:PutObject"
       Resource: "arn:aws:s3:::${file(config.json):destination}"

functions:
  resizeto404:
    handler: handler.resizeto
    events:
      - http:
          path: resizeto404
          method: get

# resources:
#   Resources:
#     OriginalsS3Bucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${file(config.json):originals}
#     DestinationS3Bucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${file(config.json):destination}
#         AccessControl: PublicRead
#         WebsiteConfiguration:
#           IndexDocument: index.html
#           ErrorDocument: error.html
#           RoutingRules:
#             - RedirectRule:
#                 HostName:
#                   Fn::Join:
#                     - ''
#                     - - Ref: ApiGatewayRestApi
#                       - ".execute-api.${self:provider.region}.amazonaws.com/"
#                 HttpRedirectCode: 307
#                 Protocol: https
#                 ReplaceKeyPrefixWith: "${self:provider.stage}/resizeto404?key="
#               RoutingRuleCondition:
#                 HttpErrorCodeReturnedEquals: 404
