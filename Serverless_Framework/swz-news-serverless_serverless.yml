# org: serverlessinc
# app: aws-node-rest-api
service: swz-news-backend

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: prd # TODO: pass via environment variable
  apiGateway:
    shouldStartNameWithService: true
    metrics: true
  lambdaHashingVersion: 20201221
  logRetentionInDays: 14
  memorySize: 512
  timeout: 10
  logs:
    restApi: true

functions:
  getNews:
    role: ${self:custom.lambdaNewsIam}
    handler: handler.getNews
    events:
      - http:
          path: /news
          method: get
          cors: true
          caching:
            enabled: true
    environment:
      NEWS_TABLE_NAME: ${self:custom.dynamodbNewsTableName}
    provisionedConcurrency: 10
  getNewsItem:
    role: ${self:custom.lambdaNewsIam}
    handler: handler.getNewsItem
    events:
      - http:
          path: /news/{slug}
          method: get
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.slug
    environment:
      NEWS_TABLE_NAME: ${self:custom.dynamodbNewsTableName}
    provisionedConcurrency: 10
  postNews:
    role: ${self:custom.lambdaNewsIam}
    handler: handler.postNews
    environment:
      SQS_QUEUE_URL: ${self:custom.sqsNewsQueueName}
    events:
      - http:
          path: /news
          cors: true
          method: post
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
            scopes:
              - news/write
  postNewsConsumer:
    role: ${self:custom.lambdaNewsIam}
    handler: handler.postNewsConsumer
    environment:
      SQS_QUEUE_URL: ${self:custom.sqsNewsQueueName}
      NEWS_TABLE_NAME: ${self:custom.dynamodbNewsTableName}
    events:
      - sqs: ${self:custom.sqsNewsQueueARN}

plugins:
  - serverless-api-gateway-caching
  - serverless-domain-manager

custom:
  # TODO: pass via environment variable
  accountId: 461719735338
  lambdaNewsIam: arn:aws:iam::${self:custom.accountId}:role/serverless-function-news-role-prd
  sqsNewsQueueName: https://sqs.${self:provider.region}.amazonaws.com/${self:custom.accountId}/post-news-queue-prd
  sqsNewsQueueARN: arn:aws:sqs:${self:provider.region}:${self:custom.accountId}:post-news-queue-prd
  dynamodbNewsTableName: SwzNewsTable
  cognitoUserPoolArn: arn:aws:cognito-idp:${self:provider.region}:${self:custom.accountId}:userpool/eu-central-1_NzjxpoVzh
  cognitoUserPoolClientId: 1ing85m8a46t6c20djqodh7u4e
  cognitoUserPoolDomain: auth.swz.paiva.info
  customDomain:
    domainName: api.swz.paiva.info
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: true
  apiGatewayCaching:
    enabled: true
    ttlInSeconds: 300 # defaults to the maximum allowed: 3600
    dataEncrypted: true
