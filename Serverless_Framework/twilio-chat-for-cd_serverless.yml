service: twilio-lambda-functions
frameworkVersion: ">=1.1.0 <2.0.0"
plugins:
  - serverless-dotenv-plugin
  # - serverless-webpack
provider:
  name: aws
  runtime: nodejs12.x
  role: arn:aws:iam::972126823319:role/lambdacarddate
  region: us-east-2
  memorySize: 256
  timeout: 10
  environment:
    twilioAccountSid: ${env:TWILIO_ACCOUNT_SID}
    twilioAuthToken: ${env:TWILIO_AUTH_TOKEN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*

      Resource: '*'

  package:
    exclude:
      -node_modules/**
      -venv/**
    individually: true

  #custom:
  #  swaggerApi:
  #    updateDeployemnts: true
  #    usePackageVersion: true
   #     apis:
    #      PrimaryApi:
     #       Name: ${self:provider.stage}-${self:service}-PrimaryApi
      #      Body: ${file(./some-swagger-file.yaml)}
       #     Lambda: StartConversation
        #    Stage: dev

functions:
  SendSms:
    handler: handler.sendSms
    events:
      - http:
          path: api/sendSms
          method: post
          integration: lambda
          cors: true
  ReceiveSms:
    handler: lambda-endpoints/receive_webhook.handler
    events:
      - http:
          path: api/receiveSms
          method: post
          integration: lambda
          cors: true
  StartConversation:
    handler: lambda-endpoints/startConversation.handler
    events:
      - http:
          path: api/start-conversation
          method: post
          integration: lambda
          cors: true
  GetUserByCardId:
    handler: lambda-endpoints/getUserByCardId.handler
    events:
      - http:
          path: api/get-user-by-card-id/{card_Id}
          method: GET
          integration: lambda
          cors: true

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: user
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: card_id
            AttributeType: S
          - AttributeName: phone_number
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: cardIdIndex
            KeySchema:
              - AttributeName: card_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: PhoneNumberIndex
            KeySchema:
              - AttributeName: phone_number
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    ConversationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: conversation
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: user_phone
            AttributeType: S
          - AttributeName: light_phone
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: LightPhoneIndex
            KeySchema:
              - AttributeName: light_phone
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UserPhoneIndex
            KeySchema:
              - AttributeName: user_phone
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        
