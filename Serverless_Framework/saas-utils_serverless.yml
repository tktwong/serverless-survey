service: create-api-user 

provider:
  name: aws
  runtime: nodejs8.10
  nvAdminUserPool: us-east-1_vLfOuHEEO
  nvApiUserPool: us-east-1_XGFVRW86R
  nvClientId: 6d5bgvo3j82eli47c36c00sreb
  nvUsagePlanId: 6c9trv
  nrApiUserPool: us-east-1_ucyYosvk8
  nrClientId: 3qo1dhj032rhdmqkj3usqkgd13
  nrUsagePlanId: wcavhy

functions:

  createApiUser:
    role: keyProvisioner
    handler: handler.createApiUser
    environment:
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"

  createNetrosaApiUser:
    role: keyProvisioner
    handler: handler.createApiUser
    environment:
      clientId: "3qo1dhj032rhdmqkj3usqkgd13"
      userPoolId: ${self:provider.nrApiUserPool}
      usagePlanId: "wcavhy"
      userType: netrosa
      region: "us-east-1"

  createNetvoteAdminUser:
    role: keyProvisioner
    handler: handler.createNetvoteAdminUser
    environment:
      userPoolId: ${self:provider.nvAdminUserPool}
      region: "us-east-1"

  postCreateNetvoteAdminUser:
    role: keyProvisioner
    handler: handler.postCreateNetvoteAdminUser
    environment:
      userPoolId: ${self:provider.nvAdminUserPool}
      region: "us-east-1"

  apiCreateNvApiKeyOld:
    role: keyProvisioner
    handler: api/api-keys.createKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: apikey
          method: post
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNvApiKeyListOld:
    role: keyProvisioner
    handler: api/api-keys.getKeyList
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: apikey
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNvApiKeyOld:
    role: keyProvisioner
    handler: api/api-keys.getKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: apikey/{id}
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiDeleteNvApiKeyOld:
    role: keyProvisioner
    handler: api/api-keys.deleteKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: apikey/{id}
          method: delete
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiCreateNvApiKey:
    role: keyProvisioner
    handler: api/api-keys.createKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netvote/apikey
          method: post
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNvApiKeyList:
    role: keyProvisioner
    handler: api/api-keys.getKeyList
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netvote/apikey
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNvApiKey:
    role: keyProvisioner
    handler: api/api-keys.getKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netvote/apikey/{id}
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiDeleteNvApiKey:
    role: keyProvisioner
    handler: api/api-keys.deleteKey
    environment:
      apiKeyTable: netvoteApiKeys
      clientId: ${self:provider.nvClientId}
      userPoolId: ${self:provider.nvApiUserPool}
      usagePlanId: ${self:provider.nvUsagePlanId}
      userType: netvote
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netvote/apikey/{id}
          method: delete
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiCreateNrApiKey:
    role: keyProvisioner
    handler: api/api-keys.createKey
    environment:
      apiKeyTable: netrosaApiKeys
      clientId: ${self:provider.nrClientId}
      userPoolId: ${self:provider.nrApiUserPool}
      usagePlanId: ${self:provider.nrUsagePlanId}
      userType: netrosa
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netrosa/apikey
          method: post
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNrApiKeyList:
    role: keyProvisioner
    handler: api/api-keys.getKeyList
    environment:
      apiKeyTable: netrosaApiKeys
      clientId: ${self:provider.nrClientId}
      userPoolId: ${self:provider.nrApiUserPool}
      usagePlanId: ${self:provider.nrUsagePlanId}
      userType: netrosa
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netrosa/apikey
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiGetNrApiKey:
    role: keyProvisioner
    handler: api/api-keys.getKey
    environment:
      apiKeyTable: netrosaApiKeys
      clientId: ${self:provider.nrClientId}
      userPoolId: ${self:provider.nrApiUserPool}
      usagePlanId: ${self:provider.nrUsagePlanId}
      userType: netrosa
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netrosa/apikey/{id}
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

  apiDeleteNrApiKey:
    role: keyProvisioner
    handler: api/api-keys.deleteKey
    environment:
      apiKeyTable: netrosaApiKeys
      clientId: ${self:provider.nrClientId}
      userPoolId: ${self:provider.nrApiUserPool}
      usagePlanId: ${self:provider.nrUsagePlanId}
      userType: netrosa
      region: "us-east-1"
      keyArn: 'arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020'
    events:
      - http:
          path: netrosa/apikey/{id}
          method: delete
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}


  getTenant:
    role: keyProvisioner
    handler: api/get-tenant.get
    events:
      - http:
          path: tenant
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:891335278704:userpool/${self:provider.nvAdminUserPool}

resources:
  Resources:
    keyProvisioner:
      Type: AWS::IAM::Role
      Properties:
        Path: /api/utils/
        RoleName: KeyProvisioner_${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: keyProvisionerPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                  - Effect: Allow 
                    Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Resource: 
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                  - Effect: "Allow"
                    Action:
                      - "s3:PutObject"
                    Resource:
                      Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - "Ref" : "ServerlessDeploymentBucket"
                  - Effect: Allow
                    Action:
                      - apigateway:POST
                    Resource: "arn:aws:apigateway:us-east-1::/apikeys"
                  - Effect: Allow
                    Action:
                      - apigateway:DELETE
                    Resource: "arn:aws:apigateway:us-east-1::/apikeys/*"
                  - Effect: Allow
                    Action:
                      - apigateway:POST
                    Resource: "arn:aws:apigateway:us-east-1::/usageplans/*/keys"
                  - Effect: Allow
                    Action:
                      - apigateway:POST
                    Resource: "arn:aws:apigateway:us-west-1::/apikeys"
                  - Effect: Allow
                    Action:
                      - apigateway:POST
                    Resource: "arn:aws:apigateway:us-west-1::/usageplans/*/keys"
                  - Effect: Allow
                    Action:
                      - cognito-identity:*
                      - cognito-idp:*
                      - cognito-sync:*
                      - iam:ListRoles
                      - iam:ListOpenIdConnectProviders
                      - iam:ListPlatformApplications
                    Resource: "*"
                  - Effect: Allow
                    Action:
                      - kms:Decrypt
                      - kms:Encrypt
                    Resource: "arn:aws:kms:us-east-1:891335278704:key/74e26e5e-dee2-4eb9-8774-2a619e62d020"
                  - Effect: Allow
                    Action:
                      - dynamodb:GetItem
                      - dynamodb:Query
                      - dynamodb:PutItem
                      - dynamodb:DeleteItem
                    Resource: "arn:aws:dynamodb:us-east-1:891335278704:table/netvoteApiKeys"
                  - Effect: Allow
                    Action:
                      - dynamodb:GetItem
                      - dynamodb:Query
                      - dynamodb:PutItem
                      - dynamodb:DeleteItem
                    Resource: "arn:aws:dynamodb:us-east-1:891335278704:table/netrosaApiKeys"
                  - Effect: Allow
                    Action:
                      - dynamodb:GetItem
                      - dynamodb:PutItem
                    Resource: "arn:aws:dynamodb:us-east-1:891335278704:table/tenants"
                  - Effect: Allow
                    Action:
                      - ses:*
                    Resource: "*"


                   