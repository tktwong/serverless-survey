# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: costExplorerSample # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.6
  memorySize: 256 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  stage: dev
  environment:
     STAGE: ${self:provider.stage}
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - ce:GetCostAndUsage
      Resource: "*"
  apiGateway:
    apiKeySourceType: HEADER
  apiKeys:
    - ${opt:stage}-myFirstKey
  usagePlan:
    quota:
      limit: 5000
      offset: 0
      period: DAY
    throttle:
      burstLimit: 200
      rateLimit: 100
  deploymentBucket:
    name: com.serverless.${self:provider.region}.deploys-pg # Deployment bucket name. Default is generated by the framework
    serverSideEncryption: AES256 # when using server-side encryption
  deploymentPrefix: serverless # The S3 prefix under which deployed artifacts should be stored. Default is serverless

plugins:
  - serverless-plugin-canary-deployments
package:
  include:
    - src/app.py
  exclude:
    - src/*
    - node_modules/**
    - node_modules/node-fetch/**
    - package-lock.json
# you can overwrite defaults here

#  region: us-east-1



functions:
  app:
    handler: src/app.lambda_handler
    memorySize: 256 # optional, in MB, default is 1024
    timeout: 10 # optional, in seconds, default is 6
    package:
      include: 
        - src/**
    deploymentSettings:
      type: Linear10PercentEvery1Minute
      alias: Live
    events:
      - http:
          path: ${self:service}/api/costs
          method: get
          private: true
          cors: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
