org: nmercado1986
app: myapp
service: lumen-blog-2

provider:
    name: aws
    region: us-east-1
    profile: default
    runtime: provided
    environment:
        DB_HOST:
            Fn::GetAtt: [MySqlRDSInstance, Endpoint.Address]
        DB_PORT: 3306
        DB_DATABASE: ${param:db_name}
        DB_USERNAME: ${param:db_user}
        DB_PASSWORD: ${param:db_pass}

plugins:
    - ./vendor/bref/bref

resources:
    Resources:
        MySqlRDSInstance:
            DependsOn: ServerlessVPC
            Type: AWS::RDS::DBInstance
            Properties:
                MasterUsername: ${param:db_user}
                MasterUserPassword: ${param:db_pass}
                AllocatedStorage: 20
                DBName: ${param:db_name}
                DBInstanceClass: db.t2.micro
                VPCSecurityGroups:
                    - !GetAtt ServerlessSecurityGroup.GroupId
                DBSubnetGroupName:
                    Ref: ServerlessSubnetGroup
                Engine: mysql
                EngineVersion: "5.6.41"
                PubliclyAccessible: false
        ServerlessSubnetGroup:
            Type: AWS::RDS::DBSubnetGroup
            Properties:
              DBSubnetGroupDescription: "RDS Subnet Group"
              SubnetIds:
                - Ref: ServerlessSubnetA
                - Ref: ServerlessSubnetB
        ServerlessSubnetA:
            DependsOn: ServerlessVPC
            Type: AWS::EC2::Subnet
            Properties:
              VpcId:
                Ref: ServerlessVPC
              AvailabilityZone: ${self:provider.region}a
              CidrBlock: 10.0.0.0/24
        ServerlessSubnetB:
            DependsOn: ServerlessVPC
            Type: AWS::EC2::Subnet
            Properties:
              VpcId:
                Ref: ServerlessVPC
              AvailabilityZone: ${self:provider.region}b
              CidrBlock: 10.0.1.0/24
        ServerlessVPC:
            Type: AWS::EC2::VPC
            Properties:
                CidrBlock: 10.0.0.0/16
                EnableDnsSupport: true
                EnableDnsHostnames: true
                InstanceTenancy: default
        ServerlessSecurityGroup:
            DependsOn: ServerlessVPC
            Type: AWS::EC2::SecurityGroup
            Properties:
              GroupDescription: SecurityGroup for Serverless Functions
              VpcId:
                Ref: ServerlessVPC
              SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: '3306'
                  ToPort: '3306'
                  CidrIp: "0.0.0.0/0"

functions:
    artisan:
        handler: artisan
        timeout: 120 # in seconds
        layers:
            - ${bref:layer.php-73} # PHP
            - ${bref:layer.console} # The "console" layer
        vpc:
            subnetIds:
                - Ref: ServerlessSubnetA
                - Ref: ServerlessSubnetB
            securityGroupIds:
                - !GetAtt ServerlessSecurityGroup.GroupId
    api:
        handler: public/index.php
        description: ''
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        layers:
            - ${bref:layer.php-73-fpm}
        events:
            -   http: 'ANY /'
                private: true
            -   http: 'ANY /{proxy+}'
                private: true
        vpc:
            subnetIds:
                - Ref: ServerlessSubnetA
                - Ref: ServerlessSubnetB
            securityGroupIds:
                - !GetAtt ServerlessSecurityGroup.GroupId

# Exclude files from deployment
package:
    exclude:
        - 'node_modules/**'
        - 'tests/**'
        - 'config/cache/**'
