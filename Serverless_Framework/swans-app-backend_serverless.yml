# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: swans-app-api

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  region: eu-west-2
  runtime: nodejs8.10

custom:
  env: ${opt:stage, 'dev'}

# The `functions` block defines what code to deploy
functions:
  create-flytipping-report:
    handler: dist/flytipping-lambda.createFlytippingReport
    name: ${self:custom.env}-createFlytippingReport
    events:
      - http:
          path: flytipping
          method: post
          cors: true
    role: createFlytippingReportRole

  handle-file-upload:
    handler: dist/file-upload-lambda.handleFileUpload
    name: ${self:custom.env}-handleFileUpload
    events:
      - http:
          path: files
          method: post
          cors: true
    role: fileUploadRole

resources:
  Resources:
    createFlytippingReportRole:
      Type: AWS::IAM::Role
      Properties:
#        Path: /my/default/path/
        RoleName: ${self:custom.env}FlytippingReportRole # required if you want to use 'serverless deploy --function' later on
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.env}FlytippingReportPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Resource: "*"
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                - Effect: Allow
                  Resource: "*"
                  Action: ses:SendEmail

    fileUploadRole:
      Type: AWS::IAM::Role
      Properties:
#        Path: /my/default/path/
        RoleName: ${self:custom.env}FileUploadRole # required if you want to use 'serverless deploy --function' later on
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.env}FileUploadPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Resource: "*"
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                - Effect: Allow
                  Resource: "*"
                  Action: s3:*

plugins:
  - serverless-offline
