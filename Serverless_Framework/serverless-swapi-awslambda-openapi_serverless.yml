service: swapi

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  stage: dev
  region: us-east-2 #Ohio
  environment:
      PERSON_TABLE: PERSON
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
package:
  exclude:
    - test/**

functions:
  films:
    handler: api/swapi.films
    events:
      - http:
          method: get
          path: films
          documentation:
            summary: Listar peliculas de STAR WARS
            description: Listar peliculas de STAR WARS
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Peliculas
                responseModels:
                  application/json: FilmResponse
  people:
    handler: api/swapi.people
    events:
      - http:
          method: get
          path: people
          documentation:
            summary: Listar personajes de STAR WARS
            description: Listar personajes de STAR WARS
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Personajes
                responseModels:
                  application/json: PeopleResponse
  create-person:
    handler: api/person.createPerson
    events:
      - http:
          method: post
          path: create-person
          documentation:
            summary: Registrar persona
            description: Registrar persona
            requestBody:
              description: Persona a registrar
            requestModels:
              application/json: CreatePersonRequest
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Persona registrada
                responseModels:
                  application/json: CreatePersonResponse
  list-person:
    handler: api/person.listPerson
    events:
      - http:
          method: get
          path: list-person
          documentation:
            summary: Listar personas registradas
            description: Listar personas registradas
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: Listar personas registradas
                responseModels:
                  application/json: PersonResponse

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PERSON
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-openapi-documentation

custom:
  documentation:
    version: '1'
    title: 'SWAPI y Personas API'
    description: 'API para consultar STAR WARS API y personas'
    models:
      ${file(documentation/models.yml)}