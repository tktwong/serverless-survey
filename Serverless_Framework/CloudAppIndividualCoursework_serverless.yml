service: projects-app-api


plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  create:
    handler: create.main
    events:
      - http:
          path: Project
          method: post
          cors: true
          authorizer: aws_iam
  createUser:
    handler: createUser.main
    events:
      - http:
          path: User
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: Project/specific/{uid}/id/{id}
          method: get
          cors: true
          authorizer: aws_iam
  getUserChosen:
    handler: getUserChosen.main
    events:
      - http:
          path: User/chosen/{id}
          method: get
          cors: true
          authorizer: aws_iam
  getUser:
    handler: getUser.main
    events:
      - http:
          path: User/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  list:
    handler: list.main
    events:
      - http:
          path: Project
          method: get
          cors: true
          authorizer: aws_iam
  
  listUser:
    handler: listUser.main
    events:
      - http:
          path: User
          method: get
          cors: true
          authorizer: aws_iam
          
  update:
    handler: update.main
    events:
      - http:
          path: Project/specific/{uid}/id/{id}
          method: put
          cors: true
          authorizer: aws_iam
  updateUserChosen:
    handler: updateUserChosen.main
    events:
      - http:
          path: User/chosen/{id}
          method: put
          cors: true
          authorizer: aws_iam
  updateUser:
    handler: updateUser.main
    events:
      - http:
          path: User/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          path: Project/specific/{uid}/id/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  deleteUser:
    handler: deleteUser.main
    events:
      - http:
          path: User/{id}
          method: delete
          cors: true
          authorizer: aws_iam      
