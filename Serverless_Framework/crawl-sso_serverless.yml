service:
  name: aws-nodejs-typescript

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  memorySize: 128
  runtime: nodejs8.10
  environment:
    KMS_ALIAS: alias/${self:service}-${opt:stage, self:provider.stage}-password-key
    USERS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-users
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}"
    - Effect: Allow
      Action:
        - kms:Encrypt
        - kms:Decrypt
      Resource:
        Fn::GetAtt:
          - KmsKey
          - Arn

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
      - http:
          method: post
          path: hello
  register:
    handler: handler.registerUser
    events:
      - http:
          method: post
          path: register
  login:
    handler: handler.loginUser
    events:
      - http:
          method: post
          path: login

resources:
  Resources:
    KmsKey:
      Type: AWS::KMS::Key
      Properties:
        Description: crawl-ssl encryption key
        KeyPolicy:
          Version: "2012-10-17"
          Id: "empty-policy"
          Statement:
            - Sid: "Allow anyone to describe the key"
              Effect: "Allow"
              Principal:
                AWS:
                  Fn::Join :
                    - ''
                    - - 'arn:aws:iam::'
                      - Ref: AWS::AccountId
                      - ':root'
              Action:
                - "kms:*"
              Resource: "*"
    KmsKeyAlias:
      Type: AWS::KMS::Alias
      Properties:
        AliasName: ${self:provider.environment.KMS_ALIAS}
        TargetKeyId:
          Fn::GetAtt:
            - KmsKey
            - Arn
    DynamoUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USERS_TABLE}