service: xpanxion-dev-essentials-services
provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage}
  region: us-east-1
  role: arn:aws:iam::797753794445:role/appServices

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  include:
    - handler.js
  exclude:
    -  node_modules/**/*

functions:
  addUser:
    handler: app/users/addUser.addUser
    events:
      - http:
          path: users
          method: post
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true
  addScore:
    handler: app/users/addUser.addScores
    events:
      - http:
          path: scores
          method: post
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true
  uploadFile:
    handler: app/Files/fileUpload.uploadFile
    events:
      - http:
          path: uploadFile
          method: post
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true
  getUserByEmail:
    handler: app/users/getUser.getUserByEmail
    events:
      - http:
          path: users/email/{email}
          method: get
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true
  getDashBoard:
    handler: app/dashboard/Dashboard.getDashBoard
    events:
      - http:
          path: dashboard
          method: get
          cors:
              origins:
                - '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
              allowCredentials: true
  getUserById:
    handler: app/users/getUser.getUserById
    events:
      - http:
          path: users/{id}
          method: get

# The "Resources" your "Functions" use.  Raw AWS CloudFormation goes in here.
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          - AttributeName: Email
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userByEmail
            KeySchema:
              - AttributeName: Email
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                  - FullName
                  - PhoneNumber
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    userScoresTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserScores
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          - AttributeName: GiverId
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: pointsIndex
            KeySchema:
              - AttributeName: GiverId
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                  - GetterId
                  - Score
                  - Description
                  - ImageUrl
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2