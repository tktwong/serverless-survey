service:
  name: notification-service-ts
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin # https://www.serverless.com/plugins/serverless-dotenv-plugin/

provider:
  name: aws
  runtime: nodejs12.x
  profile: slsuser
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    SOURCE_EMAIL: ${env:SOURCE_EMAIL}
  iamRoleStatements:
    - ${file(iam/SendMailIAM.yml):SendMailIAM}
    # - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

functions:
  sendMail:
    handler: src/handlers/sendMail.handler
    # trigger on sqs queue
    events:
      - sqs:
          arn: ${self:custom.mailQueue.arn}
          batchSize: 1 #max 10

resources:
  Resources:
    MailQueue: ${file(resources/MailQueue.yml):MailQueue}
  Outputs:
    MailQueueArn: ${file(resources/MailQueue.yml):Outputs.MailQueueArn}
    MailQueueUrl: ${file(resources/MailQueue.yml):Outputs.MailQueueUrl}

custom:
  mailQueue:
    name: MailQueue-${self:provider.stage}
    arn: !GetAtt MailQueue.Arn
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
    # search for `Return Values`, will have info about Ref. We use this to get the URL for MailQueue
    url: !Ref MailQueue
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dotenv:
    logging: false
