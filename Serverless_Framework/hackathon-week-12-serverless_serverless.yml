# prettier-ignore
service: aws-hackathon
app: aws-hackathon

custom:
  settings:
    TABLE: aws-hackathon-table

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${self:custom.settings}
  region: eu-west-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamoDB:DescribeTable
        - dynamoDB:Scan
        - dynamoDB:GetItem
        - dynamoDB:PutItem
        - dynamoDB:UpdateItem
        - dynamoDB:DeleteItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.TABLE}'

functions:
  getAllItems:
    handler: Handler/getAllItems.getAllItems
    events:
      - http:
          path: /
          method: get
          cors: true
  getItemById:
    handler: Handler/getItemById.getItemById
    events:
      - http:
          path: /{id}
          method: get
          cors: true
  addItem:
    handler: Handler/addItem.addItem
    events:
      - http:
          path: /
          method: post
          cors: true
  updateItem:
    handler: Handler/updateItem.updateItem
    events:
      - http:
          path: /{id}
          method: put
          cors: true
  deleteItem:
    handler: Handler/deleteItem.deleteItem
    events:
      - http:
          path: /{id}
          method: delete
          cors: true

resources:
  Resources:
    TestAppTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S' #string
        KeySchema: 
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.TABLE}
