service:
  name: ${self:custom.appname}

plugins:
  - serverless-webpack
  - serverless-plugin-include-dependencies

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-1'}
  environment:
    TARGET_REGION: ${self:provider.region}

    SCORE_HAPPY_MULTIPLIER: 3.2
    SCORE_SURPRISED_MULTIPLIER: 2.2
    SCORE_DISGUSTED_MULTIPLIER: 1.2
    SCORE_CALM_MULTIPLIER: 1.0
    SCORE_SAD_MULTIPLIER: 0.1
    SCORE_ANGRY_MULTIPLIER: 0.4
    SCORE_CONFUSED_MULTIPLIER: 0.1

    DDB_GAMES:
      Ref: GamesTable
    DDB_PLAYERS:
      Ref: PlayersTable
    DDB_PHOTOSCORES:
      Ref: PhotoScoresTable

    REKOG_MINIMUM_FACE_SIZE: 0.25
    REKOG_FACE_COLLECTION: tntlc-${self:provider.stage}-collection

    S3_PLAYERPHOTO_RAW: ${self:custom.s3-playerphotos-raw}
    S3_GAMEPHOTOS: ${self:custom.s3-gamephotos}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - rekognition:*
        - s3:*
        - dynamodb:*
      Resource:
        - '*'

custom:
  appname: try-not-to-laugh-challenge
  appshortname: tntlc-${self:provider.stage}

  s3-gamephotos: ${self:custom.appshortname}-photobucket
  s3-playerphotos-raw: ${self:custom.appshortname}-playerraw

functions:
  getPhotoScore:
    handler: functions/get-photo-score/index.handler
    events:
      - s3:
          bucket: ${self:custom.s3-gamephotos}
          event: s3:ObjectCreated:*

  identifyPlayer:
    handler: functions/identify-player/index.handler
    events:
      - s3:
          bucket: ${self:custom.s3-playerphotos-raw}
          event: s3:ObjectCreated:*

  createGame:
    handler: functions/create-game/index.handler
    events:
      - http:
          path: games/create
          method: POST
          cors: true

  startGame:
    handler: functions/start-game/index.handler
    events:
      - http:
          path: games/{gameid}/start
          method: POST
          cors: true
          request:
            parameters:
              paths:
                gameid: true

  endGame:
    handler: functions/end-game/index.handler
    events:
      - http:
          path: games/{gameid}/end
          method: POST
          cors: true
          request:
            parameters:
              paths:
                gameid: true

  cancelGame:
    handler: functions/cancel-game/index.handler
    events:
      - http:
          path: games/{gameid}/cancel
          method: POST
          cors: true
          request:
            parameters:
              paths:
                gameid: true

  registerPlayer:
    handler: functions/register-players-to-game/index.handler
    events:
      - http:
          path: games/{gameid}/players/register
          method: POST
          cors: true
          request:
            parameters:
              paths:
                gameid: true

package:
  individually: true
  exclude:
    - node_modules/**/aws_sdk/**

resources:
  - ${file(resources/iam.yml)}
  - ${file(resources/ddb.yml)}
  - ${file(resources/cognito.yml)}
  - ${file(resources/appsync.yml)}
