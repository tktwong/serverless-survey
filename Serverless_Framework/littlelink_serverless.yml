service:
  name: littlelink

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage} # default to dev if not specified

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.currentStage}
  timeout: 20
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:custom.currentStage}
    # MONGODB_URI:
    #   Fn::Join:
    #     - ""
    #     - - "mongodb://"
    #       - ${env:DOCUMENTDB_USER}
    #       - ':'
    #       - ${env:DOCUMENTDB_PASS}
    #       - "@"
    #       - "Fn::GetAtt": [DBCluster, Endpoint]
    #       - ":"
    #       - "Fn::GetAtt": [DBCluster, Port]
functions:
  hash:
    handler: src/handler.hashHandler
    events:
      - http:
          method: post
          path: hash
  url:
    handler: src/handler.urlHandler
    events:
      - http:
          method: get
          path: url
  stats:
    handler: src/handler.statsHandler
    events:
      - http:
          method: post
          path: stats/url
  removeUnused:
    handler: src/handler.cronHandler
    events:
      - schedule: cron(0 0 * * ? *)
# resources:
#   Resources:
#     DBCluster:
#       Type: "AWS::DocDB::DBCluster"
#       DeletionPolicy: Delete
#       Properties:
#         DBClusterIdentifier: "s"
#         MasterUsername: ${env:DOCUMENTDB_USER}
#         MasterUserPassword: ${env:DOCUMENTDB_PASS}

#     DBInstance:
#       Type: "AWS::DocDB::DBInstance"
#       Properties:
#         DBClusterIdentifier: "MyCluster"
#         DBInstanceIdentifier: "MyInstance"
#         DBInstanceClass: "db.r4.large"
#       DependsOn: DBCluster
