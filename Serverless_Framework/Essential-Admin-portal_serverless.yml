service: sls

custom:
  settings:
    USER_TABLE: categories
    CONTENT_TABLE: ContentTable

provider:
  name: aws
  runtime: nodejs10.x
  environment: ${self:custom.settings}
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.USER_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.CONTENT_TABLE}"
functions:
  # createUser:
  #   handler: handler.createUser
  #   events:
  #     - http:
  #         path: /addUser
  #         method: post

  # getAllUsers:
  #   handler: handler.getAllUsers
  #   events:
  #     - http:
  #         path: /getUsers
  #         method: get

  # getUser:
  #   handler: handler.getUser
  #   events:
  #     - http:
  #         path: /getUser/{id}
  #         method: get

  # updateUser:
  #   handler: handler.updateUser
  #   events:
  #     - http:
  #         path: /updateUser/{id}
  #         method: put

  # deleteUser:
  #   handler: handler.deleteUser
  #   events:
  #     - http:
  #         path: /deleteUser/{id}
  #         method: delete

  createCategory:
    handler: handler.createCategory
    events:
      - http:
          path: /createCategory
          method: post
          cors: true
          allowCredentials: false

  getAllContent:
    handler: handler.getAllContent
    events:
      - http:
          path: /getAllContent
          method: get
          cors: true

  getContent:
    handler: handler.getContent
    events:
      - http:
          path: /getContent/{id}
          method: get

  updateContent:
    handler: handler.updateContent
    events:
      - http:
          path: /updateContent/{id}
          method: put

  deleteContent:
    handler: handler.deleteContent
    events:
      - http:
          path: /deleteContent/{id}
          method: delete

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.USER_TABLE}
    ContentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.CONTENT_TABLE}
