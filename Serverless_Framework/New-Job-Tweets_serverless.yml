service: newJobTweets
custom:
  jobsTableName: jobsTable
package:
  individually: true
  include:
    - twython/**
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**
provider:
  name: aws
  environment:
    ENV_LOC: PROD
    MODE: PROD
    ACCOUNT_ID: 075904714953
  runtime: python3.6
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource: arn:aws:dynamodb:*:*:table/jobsTable
    - Effect: "Allow"
      Action:
        - sqs:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - logs:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - ssm:*
      Resource: "*"
functions:
  streamProcessor:
    handler: streamprocessor.lambda_handler
    package:
      include:
        - streamprocessor.py
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - jobsTable
              - StreamArn
  scheduledTweets:
    handler: send_tweet.handler
    timeout: 300
    package:
      include:
        - send_tweet.py
        - secrets.py
    events:
      - schedule:
          rate: cron(0 19 * * ? *)  # 12pm Pacific Time
      - schedule:
          rate: cron(0 3 * * ? *)  # 8pm Pacific Time
      - schedule:
          rate: cron(0 11 * * ? *)  # 4am Pacific Time
resources:
  Resources:
    jobsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: jobsTable
        AttributeDefinitions:
          -
            AttributeName: job_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: job_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
    jobsQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: 'jobsQueue.fifo'
        FifoQueue: True
        ContentBasedDeduplication: True
