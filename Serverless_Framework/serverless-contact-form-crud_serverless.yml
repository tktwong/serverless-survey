# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: contact-form-crud

custom:
  contactsTableName: ${self:service}-${self:provider.stage}-contacts
  contactsTableArn: # ARNs are addresses of deployed services in AWS space
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.contactsTableName}

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: ap-southeast-1
  environment:
    CONTACTS_TABLE_NAME: ${self:custom.contactsTableName}
  iamRoleStatements: # Defines what other AWS services our lambda functions can access
    - Effect: Allow # Allow access to DynamoDB tables
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - ${self:custom.contactsTableArn}

package:
 individually: true
 exclude:
   - ./**

functions:
  hello:
    handler: bin/handlers/hello
    package:
     include:
       - ./bin/handlers/hello
    events:
      - http:
          path: hello
          method: get
          cors: true
  listContacts:
    handler: bin/handlers/listContacts
    package:
     include:
       - ./bin/handlers/listContacts
    events:
      - http:
          path: contacts
          method: get
          cors: true
  addContact:
    handler: bin/handlers/addContact
    package:
      include:
        - ./bin/handlers/addContact
    events:
      - http:
          path: contacts
          method: post
          cors: true
    environment:
        FUNCTION: addContact
  completeContact:
    handler: bin/handlers/completeContact
    package:
      include:
        - ./bin/handlers/completeContact
    events:
      - http:
          path: contacts/{id}
          method: patch
          cors: true
  deleteContact:
      handler: bin/handlers/deleteContact
      package:
        include:
          - ./bin/handlers/deleteContact
      events:
        - http:
            path: contacts/{id}
            method: delete
            cors: true

resources:
  Resources: # Supporting AWS services
    ContactsTable: # Define a new DynamoDB Table resource to store contact items
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.contactsTableName}
        BillingMode: PAY_PER_REQUEST
#        ProvisionedThroughput:
#          ReadCapacityUnits: 5
#          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
