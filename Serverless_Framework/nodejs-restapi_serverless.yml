service: aws-api-starwars

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-2
  environment:
    PLANETA_DYNAMODB_TABLE: PlanetaDynamoDbTable
iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PLANETA_DYNAMODB_TABLE}"

plugins:
  - serverless-offline

functions:
  crearPlaneta:
    handler: src/handler.crearPlaneta
    events:
      - http:
          path: crearPlaneta
          method: post
  obtenerPlanetas:
    handler: src/handler.obtenerPlanetas
    events:
      - http:
          path: obtenerPlanetas
          method: get
  llenarDynamo10x10:
    handler: src/handler.llenarDynamo10x10
    events:
      - http:
          path: llenarDynamo10x10
          method: get


resources:
  Resources:
    PlanetaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PLANETA_DYNAMODB_TABLE}
