# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: silid-server # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
plugins:
  # - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1

functions:
  app:
    handler: app.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

# you can add CloudFormation resource templates here
resources:
  Resources:
   lambdavpc:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "10.0.0.0/16"

   lambdasubnetA:
      DependsOn: lambdavpc
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: lambdavpc
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: "10.0.0.0/24"

   lambdasubnetB:
      DependsOn: lambdavpc
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: lambdavpc
        AvailabilityZone: ${self:provider.region}b
        CidrBlock: "10.0.1.0/24"

   silidserverasg:
      DependsOn: lambdavpc
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SecurityGroup for Serverless Functions
        VpcId:
          Ref: lambdavpc

   silidserverdatasg:
      DependsOn: lambdavpc
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SecurityGroup for RDS Instance
        VpcId:
          Ref: lambdavpc
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId:
            Ref: silidserverasg
        - IpProtocol: tcp
          FromPort: '11211'
          ToPort: '11211'
          SourceSecurityGroupId:
            Ref: silidserverasg
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0

   silidserverdatasubnet:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: "RDS Subnet Group"
        SubnetIds:
        - Ref: lambdasubnetA
        - Ref: lambdasubnetB

   silidserverrdscluster:
      Type: AWS::RDS::DBInstance
      Properties:
        Engine: Postgres
        DBName: silidserverdb
        MasterUsername: ${env:MASTER_USERNAME}
        MasterUserPassword: ${env:MASTER_USERPASSWORD}
        DBInstanceClass: db.t3.micro
        AllocatedStorage: 10
        VPCSecurityGroups:
        - "Fn::GetAtt": silidserverdatasg.GroupId
        DBSubnetGroupName:
          Ref: silidserverdatasubnet
