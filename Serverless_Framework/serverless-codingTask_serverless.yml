# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: some-service # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
custom: ${file(config/${opt:stage}-env.json)}
provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  environment: ${self:custom}
  DYNAMODB_TABLE: Tasks

# you can overwrite defaults here
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.DYNAMODB_TABLE}"


# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here

functions:
  handler:
    handler: handler.handler
    events:
      - http:
          path: task/create
          method: post
          cors: true        
  processItem:
    handler: handler.processItem
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          enabled: true
          arn: { "Fn::GetAtt": ["TaskDB", "StreamArn"] }

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

package:
  exclude:
    - dev-env.json
    - prod-env.json
    - node_modules/aws-sdk/**

resources:
  Resources:
    TaskDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S

        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: name
            KeyType: RANGE          
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.DYNAMODB_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
plugins:
  - serverless-dynamodb-local
  - serverless-offline