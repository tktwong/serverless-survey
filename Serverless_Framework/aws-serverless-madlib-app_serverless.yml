# serverless.yml

service: deploy-dynamo-db

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt:
          - madLibTemplates
          - Arn
    - Effect: "Allow"
      Action:
        - s3:ListBucket
      Resource:
        Fn::GetAtt:
          - madLibDbBucket
          - Arn
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        Fn::Join:
          - ""
          - - Fn::GetAtt:
              - madLibDbBucket
              - Arn
            - "/*"

plugins:
  - serverless-s3-sync
  - invoke-lambda

custom:
  s3Sync:
    - bucketName: ${self:resources.Resources.madLibDbBucket.Properties.BucketName}
      localDir: "upload_files"

functions:
  updateDynamoDb:
    handler: handler.updateDynamoDb
    name: ${self:provider.stage}-updateDynamoDb
    description: Extracts database JSON data from S3 and inserts data into DynamoDB
    memorySize: 512
    environment:
      bucket: ${self:resources.Resources.madLibDbBucket.Properties.BucketName}
      key: "madlibsDB.json"
      table: ${self:resources.Resources.madLibTemplates.Properties.TableName}
      region: ${self:provider.region}

resources:
  Resources:
    madLibTemplates:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-madLibTemplates
        AttributeDefinitions:
          -
            AttributeName: "madLibId"
            AttributeType: "N"
        KeySchema:
          -
            AttributeName: "madLibId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
    madLibSubmissions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-madLibSubmissions
        AttributeDefinitions:
          -
            AttributeName: "userPin"
            AttributeType: "N"
        KeySchema:
          -
            AttributeName: "userPin"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
    madLibDbBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.stage}-madlib-bucket
  Outputs:
    madLibTemplatesArn:
      Description: "ARN for the madLibTemplates database table"
      Value:
        Fn::GetAtt:
          - madLibTemplates
          - Arn
      Export:
        Name: madLibTemplatesArnExp
    madLibTemplatesName:
      Description: "Name of the madLibTemplates database table"
      Value: ${self:resources.Resources.madLibTemplates.Properties.TableName}
      Export:
        Name: madLibTemplatesNameExp
    madLibSubmissionsArn:
      Description: "ARN for the madLibSubmissions database table"
      Value:
        Fn::GetAtt:
          - madLibSubmissions
          - Arn
      Export:
        Name: madLibSubmissionsArnExp
    madLibSubmissionsName:
      Description: "Name of the madLibSubmissions database table"
      Value: ${self:resources.Resources.madLibSubmissions.Properties.TableName}
      Export:
        Name: madLibSubmissionsNameExp

package:
  exclude:
    - README.md
    - node_modules
    - package-lock.json
    - package.json
    - upload_files/**
    - .serverless_plugins
