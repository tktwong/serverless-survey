# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ganymede 

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 10 # the timeout is 10 seconds (default is 6 seconds)
  stage: dev # setting the env stage to dev, this will be visible in the routes
  region: us-east-1


functions: # add 4 functions for CRUD

  #search orders
  createSearchOrder:
    handler: handler.createSearchOrder # point to exported create function in handler.js
    events:
      - http:
          path: api/product/search-orders # path will be domain.name.com/dev/product
          method: post
          cors: true
  getOneSearchOrder:
    handler: handler.getOneSearchOrder
    events:
      - http:
          path: api/product/search-orders/{id} # path will be domain.name.com/dev/product/1
          method: get
          cors: true
  getAllSearchOrder:
    handler: handler.getAllSearchOrder # path will be domain.name.com/dev/product
    events:
     - http:
         path: api/product/search-orders/
         method: get
         cors: true
  updateSearchOrder:
    handler: handler.updateSearchOrder # path will be domain.name.com/dev/product/1
    events:
     - http:
         path: api/product/search-orders/{id}
         method: put
         cors: true

  # products
  createProduct:
    handler: handler.createProduct # point to exported create function in handler.js
    events:
      - http:
          path: api/product # path will be domain.name.com/dev/product
          method: post
          cors: true
  getOneProduct:
    handler: handler.getOneProduct
    events:
      - http:
          path: api/product/{id} # path will be domain.name.com/dev/product/1
          method: get
          cors: true
  getAllProduct:
    handler: handler.getAllProduct # path will be domain.name.com/dev/product
    events:
     - http:
         path: api/product
         method: get
         cors: true
  updateProduct:
    handler: handler.updateProduct # path will be domain.name.com/dev/product/1
    events:
     - http:
         path: api/product/{id}
         method: put
         cors: true


  # categoris
  createCategory:
    handler: handler.createCategory # point to exported create function in handler.js
    events:
      - http:
          path: api/category # path will be domain.name.com/dev/product
          method: post
          cors: true
  getOneCategory:
    handler: handler.getOneCategory
    events:
      - http:
          path: api/category/{id} # path will be domain.name.com/dev/product/1
          method: get
          cors: true
  getAllCategory:
    handler: handler.getAllCategory # path will be domain.name.com/dev/product
    events:
     - http:
         path: api/category
         method: get
         cors: true
  updateCategory:
    handler: handler.updateCategory # path will be domain.name.com/dev/product/1
    events:
     - http:
         path: api/category/{id}
         method: put
         cors: true

  callback:
    handler: handler.callback # path will be domain.name.com/dev/product/1
    events:
     - http:
         path: api/callback/{id}
         method: put
         cors: true

  # apps
  createApp:
    handler: handler.createApp # point to exported create function in handler.js
    events:
      - http:
          path: api/app # path will be domain.name.com/dev/product
          method: post
          cors: true
  getOneApp:
    handler: handler.getOneApp
    events:
      - http:
          path: api/app/{id} # path will be domain.name.com/dev/product/1
          method: get
          cors: true
  getAllApp:
    handler: handler.getAllApp # path will be domain.name.com/dev/product
    events:
     - http:
         path: api/app
         method: get
         cors: true
  updateApp:
    handler: handler.updateApp # path will be domain.name.com/dev/product/1
    events:
     - http:
         path: api/app/{id}
         method: put
         cors: true

plugins:
  - serverless-offline
