service:
  name: people-service

custom:
  tableName: 'people-table-${self:provider.stage}'
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: test
  region: us-east-1
  apiGateway:
    minimumCompressionSize: 1024 
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["PeopleDynamoDBTable", "Arn" ] }
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

functions:
  people:
    handler: src/web/handler.handler
    events:
      - http:
          method: get
          path: people/{id}
      - http:
          method: post
          path: people

resources:
  Resources:
    PeopleDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
