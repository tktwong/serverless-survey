service: form-process

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []
  PRIMARY_KEY: Microchip Number
  ADOPTION_FORM_TABLE: waanimalsadoptionforms
  ADOPTION_FORM_BUCKET: waanimalsadoptionforms
  ADOPTION_EMAIL_BUCKET: waanimalsadoptionemails
  SES_RULE_SET_NAME: waanimalsadoptionforms
  SES_RULE_SET_EMAIL: contact@waanimals.org.au

provider:
  name: aws
  runtime: python3.7
  environment:
    ADOPTION_FORM_TABLE: ${self:custom.ADOPTION_FORM_TABLE}
    ADOPTION_FORM_BUCKET: ${self:custom.ADOPTION_FORM_BUCKET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - textract:AnalyzeDocument
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - { Fn::GetAtt: [AdoptionDynamoDBTable, Arn] }
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::${self:custom.ADOPTION_EMAIL_BUCKET}/*
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::${self:custom.ADOPTION_EMAIL_BUCKET}
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - arn:aws:s3:::${self:custom.ADOPTION_FORM_BUCKET}/*
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::${self:custom.ADOPTION_FORM_BUCKET}

functions:
  textract:
    handler: handler.textract
    events:
      - s3:
          bucket: ${self:custom.ADOPTION_FORM_BUCKET}
          event: s3:ObjectCreated:*
  ses:
    handler: handler.ses
    events:
      - s3:
          bucket: ${self:custom.ADOPTION_EMAIL_BUCKET}
          event: s3:ObjectCreated:*

resources:
  Resources:

    S3BucketWaanimalsadoptionforms:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.ADOPTION_FORM_BUCKET}

    S3BucketWaanimalsadoptionemails:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.ADOPTION_EMAIL_BUCKET}

    AdoptionDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ${self:custom.PRIMARY_KEY}
            AttributeType: S
        KeySchema:
          - AttributeName: ${self:custom.PRIMARY_KEY}
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.ADOPTION_FORM_TABLE}

    S3EMailBucketPermissions:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: { Ref: S3BucketWaanimalsadoptionemails }
        PolicyDocument:
          Statement:
            - Principal:
                Service: ses.amazonaws.com
              Action:
                - s3:PutObject
              Effect: Allow
              Sid: AllowSESPuts
              Resource:
                Fn::Join: ['', ['arn:aws:s3:::', { Ref: S3BucketWaanimalsadoptionemails }, '/*'] ]
              Condition:
                StringEquals:
                  "aws:Referer": { Ref: AWS::AccountId }

    S3SMailProcessRule:
      Type: AWS::SES::ReceiptRule
      Properties:
          RuleSetName: default-rule-set
          Rule:
            Name: ${self:custom.SES_RULE_SET_NAME}
            Enabled: true
            Recipients:
              - ${self:custom.SES_RULE_SET_EMAIL}
            Actions:
              - S3Action:
                  BucketName: { Ref: S3BucketWaanimalsadoptionemails }
                  ObjectKeyPrefix: ""
