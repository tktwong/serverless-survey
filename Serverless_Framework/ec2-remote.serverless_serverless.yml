service: ec2-remote

provider:
    name: aws
    runtime: python2.7
    stage: dev
    region: us-east-1
    memorySize: 128
    versionFunctions: false
    cfLogs: true
    iamRoleStatements:
        - Effect: "Allow"
          Action:
              - "ec2:DescribeInstances"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
              - "ses:SendEmail"
          Resource: "*"
    environment:
        EC2_FILTER_TAG: ec2-remote-public
        EC2_MONITOR_TAG: ec2-remote-monitor
        EC2_EMAIL: EMAIL@DOMAIN.TLD
        EC2_EMAIL_PREFIX: '[EC2 Remote]'
package:
    exclude:
        - .npmignore
        - bin/**
# Uncomment below for domain support
# plugins:
#    - serverless-domain-manager
# custom:
#    customDomain:
#        domainName: SUB.DOMAIN.COM
#        basePath: 'ec2'
#        stage: ${self:provider.stage}
#        createRoute53Record: true
#        endpointType: 'regional'
functions:
    ec2-monitor:
        handler: handler.ec2_monitor
        description: Check for running instances and send an email alert
        timeout: 300
        events:
            - http:
                # Remove 'ec2/' from path when using domain as it has the basepath
                path: ec2/check
                method: get
                private: false
            - schedule:
                name: ec2-every-6-hours
                description: Every 6 hours
                rate: rate(6 hours)
                enabled: true
    ec2-list:
        handler: handler.ec2_list
        description: List ec2 instances
        timeout: 30
        events:
            - http:
                # Remove 'ec2/' from path when using domain as it has the basepath
                path: ec2/list
                method: get
                private: false
    ec2-status:
        handler: handler.ec2_status
        description: Status ec2 instances
        timeout: 30
        events:
            - http:
                # Remove 'ec2/' from path when using domain as it has the basepath
                path: ec2/status/{name}
                method: get
                private: false
    ec2-start:
        handler: handler.ec2_start
        description: Start ec2 instances
        timeout: 30
        events:
            - http:
                # Remove 'ec2/' from path when using domain as it has the basepath
                path: ec2/start/{name}
                method: get
                private: false
    ec2-stop:
        handler: handler.ec2_stop
        description: Stop ec2 instances
        timeout: 30
        events:
            - http:
                # Remove 'ec2/' from path when using domain as it has the basepath
                path: ec2/stop/{name}
                method: get
                private: false
resources:
    Resources:
        Ec2DashmonitorLogGroup:
            Properties:
                RetentionInDays: "7"
        Ec2DashlistLogGroup:
            Properties:
                RetentionInDays: "7"
        Ec2DashstatusLogGroup:
            Properties:
                RetentionInDays: "7"
        Ec2DashstartLogGroup:
            Properties:
                RetentionInDays: "7"
        Ec2DashstopLogGroup:
            Properties:
                RetentionInDays: "7"
