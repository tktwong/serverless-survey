service: crowdpay

package:
  individually: true   # comment out during developemnt
  exclude:
    - ./**

plugins:
  - serverless-webpack
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs6.10
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"

    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt:
          - IssueTable
          - Arn

functions:

  issues:
    handler: lib/issues.handler
    environment:
      ghAccessToken: ${file(.env.json):ghAccessToken}
    events:
     - http:
         path: issues
         method: any
         cors: true

  pull-requests:
    handler: lib/pull-requests.handler
    environment:
      ghAccessToken: ${file(.env.json):ghAccessToken}
    events:
     - http:
         path: pull-requests
         method: any
         cors: true

  statuses:
    handler: lib/statuses.handler
    environment:
      ghAccessToken: ${file(.env.json):ghAccessToken}
    events:
     - http:
         path: statuses
         method: any
         cors: true

  pay:
    handler: lib/pay.handler



resources:
  Resources:
    # DyanmoDB
    IssueTable: ${file(configs/dynamodb.yml):IssueTable}
