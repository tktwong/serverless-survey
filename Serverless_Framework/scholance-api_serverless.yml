service: scholance-api

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  environment:
    MONGO_URI: ${file(./.env.yml):${self:provider.stage}.MONGO_URI}
    AUTH_URI: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
    S3_PROJECTS_BUCKET: ${file(./.env.yml):${self:provider.stage}.S3_PROJECTS_BUCKET}
    S3_USERS_BUCKET: ${file(./.env.yml):${self:provider.stage}.S3_USERS_BUCKET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

package:
  exclude:
    - test/**
    - .git/**
    - docs/**

functions:

  ###########
  # PROJECTS
  ###########

  listProjects:
    handler: controllers/project.listProjects
    events:
      - http:
          path: projects
          method: get
          cors: true

  createProject:
    handler: controllers/project.createProject
    events:
      - http:
          path: projects
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  getProject:
    handler: controllers/project.getProject
    events:
      - http:
          path: projects/{project_id}
          method: get
          cors: true

  updateProject:
    handler: controllers/project.updateProject
    events:
      - http:
          path: projects/{project_id}
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteProject:
    handler: controllers/project.deleteProject
    events:
      - http:
          path: projects/{project_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  updateProjectStatus:
    handler: controllers/project.updateProjectStatus
    events:
      - http:
          path: projects/{project_id}/status
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  payProjectPostingFee:
    handler: controllers/project.payProjectPostingFee
    events:
      - http:
          path: projects/{project_id}/posting-fee
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  addProjectReward:
    handler: controllers/project.addProjectReward
    events:
      - http:
          path: projects/{project_id}/reward
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  updateProjectReward:
    handler: controllers/project.updateProjectReward
    events:
      - http:
          path: projects/{project_id}/reward
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  createProjectComment:
    handler: controllers/project.createProjectComment
    events:
      - http:
          path: projects/{project_id}/comments
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteProjectComment:
    handler: controllers/project.deleteProjectComment
    events:
      - http:
          path: projects/{project_id}/comments/{comment_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  #########################
  # SUPPLEMENTAL RESOURCES
  #########################

  createSupplementalResource:
    handler: controllers/project.createSupplementalResource
    events:
      - http:
          path: projects/{project_id}/supplemental-resources
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  createSupplementalResourceFile:
    handler: controllers/project.createSupplementalResourceFile
    events:
      - http:
          path: projects/{project_id}/supplemental-resources/file
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteSupplementalResource:
    handler: controllers/project.deleteSupplementalResource
    events:
      - http:
          path: projects/{project_id}/supplemental-resources/{asset_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  #######################
  # ENTRY & ENTRY ASSETS
  #######################

  projectSignup:
    handler: controllers/entry.projectSignup
    events:
      - http:
          path: projects/{project_id}/entries
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  projectSignoff:
    handler: controllers/entry.projectSignoff
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  getEntry:
    handler: controllers/entry.getEntryByStudentId
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}
          method: get
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  updateEntry:
    handler: controllers/entry.updateEntry
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  createEntryAsset:
    handler: controllers/entry.createEntryAsset
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}/assets
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  createEntryAssetFile:
    handler: controllers/entry.createEntryAssetFile
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}/assets/file
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteEntryAsset:
    handler: controllers/entry.deleteEntryAsset
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}/assets/{asset_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  createEntryComment:
    handler: controllers/entry.createEntryComment
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}/comments
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteEntryComment:
    handler: controllers/entry.deleteEntryComment
    events:
      - http:
          path: projects/{project_id}/entries/{user_id}/comments/{comment_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$


########
# USERS
########

  createOrUpdateUser:
    handler: controllers/user.createOrUpdateUser
    events:
      - http:
          path: users/{user_id}
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  deleteUser:
    handler: controllers/user.deleteUser
    events:
      - http:
          path: users/{user_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  getUser:
    handler: controllers/user.getUser
    events:
      - http:
          path: users/{user_id}
          method: get
          cors: true

  updatePortfolioEntries:
    handler: controllers/user.updatePortfolioEntries
    events:
      - http:
          path: users/{user_id}/completed-projects
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$


################
# ORGANIZATIONS
################

  listOrganizations:
    handler: controllers/organization.listOrganizations
    events:
      - http:
          path: organizations
          method: get
          cors: true

  getOrganization:
    handler: controllers/organization.getOrganization
    events:
      - http:
          path: organizations/{organization_id}
          method: get
          cors: true

  createOrganization:
    handler: controllers/organization.createOrganization
    events:
      - http:
          path: organizations
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  updateOrganization:
    handler: controllers/organization.updateOrganization
    events:
      - http:
          path: organizations/{organization_id}
          method: put
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  addLiaisonToOrganization:
    handler: controllers/organization.addLiaisonToOrganization
    events:
      - http:
          path: organizations/{organization_id}/users/{user_id}
          method: post
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$

  removeLiaisonFromOrganization:
    handler: controllers/organization.removeLiaisonFromOrganization
    events:
      - http:
          path: organizations/{organization_id}/users/{user_id}
          method: delete
          cors: true
          authorizer:
            arn: ${file(./.env.yml):${self:provider.stage}.AUTH_URI}
            resultTtlInSeconds: 3600
            identitySource: method.request.header.Authorization
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$