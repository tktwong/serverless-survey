service: myzaico

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  endpointType: REGIONAL
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-1'}
  apiGateway:
    apiKeySourceType: HEADER
  environment:
    DYNAMODB_ITEM_TABLE: ${self:service}-${opt:stage}-items
    DYNAMODB_USER_TABLE: ${self:service}-${opt:stage}-users
    CLIENT_ID: !Ref UserPoolClient
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_ITEM_TABLE}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_USER_TABLE}

functions:
  createItem:
    handler: handlers/items/put.handler
    events:
      - http:
          path: items
          method: post
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  updateItem:
    handler: handlers/items/put.handler
    events:
      - http:
          path: items
          method: put
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  deleteItem:
    handler: handlers/items/delete.handler
    events:
      - http:
          path: items
          method: delete
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  getItem:
    handler: handlers/items/get.handler
    events:
      - http:
          path: items/{id}
          method: get
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  getAllItems:
    handler: handlers/items/getAll.handler
    events:
      - http:
          path: items
          method: get
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  updateUser:
    handler: handlers/users/put.handler
    events:
      - http:
          path: users
          method: put
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  getUser:
    handler: handlers/users/get.handler
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  signup:
    handler: handlers/auth/signup.handler
    events:
      - http:
          path: signup
          method: post
          cors: true
          private: true
  login:
    handler: handlers/auth/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true
          private: true
  logout:
    handler: handlers/auth/logout.handler
    events:
      - http:
          path: logout
          method: post
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
  getCurrentUser:
    handler: handlers/auth/getCurrentUser.handler
    events:
      - http:
          path: current-user
          method: post
          cors: true
          private: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer

resources:
  - ${file(resources/dynamodb.yml)}
  - ${file(resources/cognito.yml)}