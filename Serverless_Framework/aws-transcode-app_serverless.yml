service: aws-transcode-app # NOTE: update this with your service name

custom:
  pythonRequirements:
    dockerizePip: non-linux
    dockerSsh: true
  myStage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: python3.7
  timeout: 900
  environment:
    INPUT_BUCKET: !Ref InputBucket
    OUTPUT_BUCKET: !Ref OutputBucket
    NOTIFY_TOPIC: !Ref NotifyTopic
    TRANSCODE_TOPIC_ARN:
      Fn::Join:
        - ":"
        - - "arn:aws:sns"
          - Ref: "AWS::Region"
          - Ref: "AWS::AccountId"
          - ${self:custom.myStage}-${self:service}-transcodeTopic
    TRANSCODE_PIPELINE: !Ref TranscodePipeline
    TRANSCODE_TABLE: !Ref TranscodeJobTable

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
        - "sns:Publish"
        - "s3:*"
        - "elastictranscoder:*"
        - "dynamodb:*"
      Resource:
        - "*"


package:
  exclude:
    - .custom/**
    - .vscode/**
    - .serverless/**
    - ui/**
    - node_modules/**

functions:
  api:
    handler: functions/api/handler.handler
    tracing: true
    events:
      - http:
          method: POST
          path: jobs
          response:
            headers:
              Access-Control-Allow-Origin: "*"

  finisher:
    handler: functions/share/handler.handler
    tracing: true
    events:
      - sns: ${self:custom.myStage}-${self:service}-transcodeTopic


resources:
  Resources:
    InputBucket:
      Type: AWS::S3::Bucket

    OutputBucket:
      Type: AWS::S3::Bucket

    PipelineRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - elastictranscoder.amazonaws.com
            Action:
            - sts:AssumeRole
    PipelinePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: pipeline-policy
        Roles:
        - Ref: PipelineRole
        PolicyDocument:
          Version: '2008-10-17'
          Statement:
          - Sid: '1'
            Effect: Allow
            Action:
            - s3:*
            Resource: "*"
          - Sid: '2'
            Effect: Allow
            Action: sns:Publish
            Resource: "*"

    TranscodePipeline:
      Type: Custom::ElasticTranscoderPipeline
      Version: '1.0'
      Properties:
        ServiceToken:
          Fn::Join:
          - ":"
          - - arn:aws:lambda
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - function
            - "cfn-transcoder-pipeline-dev-pipeline"
        Name: ${self:custom.myStage}-${self:service}-VideoPipeline
        Role:
          Fn::GetAtt:
          - PipelineRole
          - Arn
        InputBucket:
          Ref: InputBucket
        OutputBucket:
          Ref: OutputBucket
        Notifications:
          Completed:
            Fn::Join:
            - ":"
            - - "arn:aws:sns"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - ${self:custom.myStage}-${self:service}-transcodeTopic
          Error:
            Ref: TranscoderErrorTopic
          Progressing:
            Ref: TranscoderErrorTopic
          Warning:
            Ref: TranscoderErrorTopic

    NotifyTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: 'Notify Topic'
        Subscription:
           -
             Endpoint: "+48570046089"
             Protocol: "sms"

    TranscoderErrorTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: 'Transcoder topic'


    TranscodeJobTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST


plugins:
  - serverless-python-requirements
