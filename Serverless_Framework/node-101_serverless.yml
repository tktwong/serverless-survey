# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/?rd=true
service: node-101
#app: none-101
#org: tec.org

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '>=2.0.0 <3.0.0'

# https://www.serverless.com/framework/docs/configuration-validation/
# configValidationMode: error

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  logRetentionInDays: 14
  region: us-west-2
  deploymentPrefix: aws-lambda
  # very important, deployment wont fail but execution without this
  # when using localstack its important that before you deploy your 
  # lambda your s3 bucket already exists you can do this automatically 
  # via adding your aws cli create bucket commands to the 
  # localstack-entrypoint.sh script
  deploymentBucket: 
    name: ${self:service}-${opt:stage}-deploy

# https://medium.com/manomano-tech/using-serverless-framework-localstack-to-test-your-aws-applications-locally-17748ffe6755
# https://www.serverless.com/plugins/serverless-localstack
# https://www.serverless.com/plugins/serverless-plugin-typescript
# https://www.serverless.com/plugins/serverless-plugin-include-dependencies
# https://www.serverless.com/plugins/serverless-plugin-common-excludes
plugins:
  - serverless-localstack
  - serverless-plugin-typescript
  - serverless-plugin-include-dependencies
  - serverless-plugin-common-excludes

package:
  individually: true
  include:
    # include configuration files for config
    - config/*.json

functions:
  echo:
    handler: src/functions/handler.echo
    runtime: nodejs12.x
    timeout: 20
    memorySize: 256
    events:
      - http:
          path: /echo/{custid}
          method: get
          cors: true          

  record:
    handler: src/functions/handler.record
    runtime: nodejs12.x
    timeout: 20
    memorySize: 256
    events:
      - sqs:
          arn: arn:aws:sqs:us-west-2:000000000000:node-101-click
          batchSize: 10
          enabled: true

  archive:
    handler: src/functions/handler.archive
    runtime: nodejs12.x
    timeout: 20
    memorySize: 256
    events:
      - s3:
          bucket: node-101-archive
          event: s3:ObjectCreated:*
          existing: true 

custom:
  # https://www.serverless.com/plugins/serverless-plugin-include-dependencies 
  includeDependencies:
    always:
      # https://github.com/dougmoscrop/serverless-plugin-include-dependencies/issues/46
      - 'node_modules/config/**'
      - 'node_modules/mysql/**'
  
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  process: ${self:custom.prefix}-process
  config: ${self:custom.prefix}-config
  sns: ${self:custom.prefix}-trigger
  sqs: ${self:custom.prefix}-messages

  localstack:
    debug: true # enable or disable debugging
    stages:
      # list of stages for which the plugin should be enabled
      - local
    host: http://localhost  # optional - LocalStack host to connect to
    # autostart: true  # optional - start LocalStack in Docker on Serverless deploy
    endpoints:
      # This section is optional - can be used for customizing the target endpoints
      S3: http://localhost:4566
      SQS: http://localhost:4566
      Lambda: http://localhost:4566
    lambda:
      # Enable this flag to improve performance
      mountCode: false
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: false