service: serverless-python-dynamodb

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: python3.7
  environment:
    DYNAMODB_TABLE: astronauts
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:#{AWS::AccountId}:table/${self:provider.environment.DYNAMODB_TABLE}"
  vpc:
    subnetIds:
      - !Ref SlsPyDynamoVPCSubnet0
      - !Ref SlsPyDynamoVPCSubnet1
    securityGroupIds:
      - !Ref SlsPyDynamoSG0

functions:
  create:
    handler: astronaut.create
    events:
      - http:
          path: astronaut/create
          method: post
          cors: true
  get:
    handler: astronaut.get
    events:
      - http:
          path: astronaut/{astronaut_id}
          method: get
          cors: true

resources:
  Resources:
    SlsPyDynamoVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/24
        Tags:
        - Key: "Name"
          Value: SlsPyDynamo

    SlsPyDynamoVPCSubnet0:
      DependsOn:
        - SlsPyDynamoVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref 'SlsPyDynamoVPC'
        CidrBlock: 10.0.0.0/27
        AvailabilityZone:
          Fn::Select:
            - 0
            - Fn::GetAZs: ""
        Tags:
        - Key: Name
          Value: SlsPyDynamoSubnet0

    SlsPyDynamoVPCSubnet1:
      DependsOn:
        - SlsPyDynamoVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref 'SlsPyDynamoVPC'
        CidrBlock: 10.0.0.32/27
        AvailabilityZone:
          Fn::Select:
            - 0
            - Fn::GetAZs: ""
        Tags:
        - Key: Name
          Value: SlsPyDynamoSubnet1

    SlsPyDynamoVPCSubnet0RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref 'SlsPyDynamoVPC'

    SlsPyDynamoVPCSubnet0RouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      DependsOn:
        - SlsPyDynamoVPCSubnet0RouteTable
        - SlsPyDynamoVPCSubnet0
      Properties:
        RouteTableId: !Ref 'SlsPyDynamoVPCSubnet0RouteTable'
        SubnetId: !Ref 'SlsPyDynamoVPCSubnet0'

    SlsPyDynamoVPCSubnet1RouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      DependsOn:
        - SlsPyDynamoVPCSubnet0RouteTable
        - SlsPyDynamoVPCSubnet1
      Properties:
        RouteTableId: !Ref 'SlsPyDynamoVPCSubnet0RouteTable'
        SubnetId: !Ref 'SlsPyDynamoVPCSubnet1'

    # Empty SecurityGroup
    SlsPyDynamoSG0:
      Type: AWS::EC2::SecurityGroup
      DependsOn:
        - SlsPyDynamoVPC
      Properties:
        GroupName: SlsPyDynamoSG0
        GroupDescription: SlsPyDynamoSG0
        Tags:
        - Key: Name
          Value: SlsPyDynamoSG0
        VpcId:
          Ref: SlsPyDynamoVPC

    DynamoDBEndpoint:
      Type: AWS::EC2::VPCEndpoint
      DependsOn:
        - SlsPyDynamoVPC
        - SlsPyDynamoSG0
        - SlsPyDynamoDynamoDBAstronauts
        - SlsPyDynamoVPCSubnet0RouteTable
      Properties:
        VpcId: !Ref 'SlsPyDynamoVPC'
        ServiceName: !Join [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".dynamodb" ] ]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Principal: "*"
              Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:#{AWS::AccountId}:table/${self:provider.environment.DYNAMODB_TABLE}"
        RouteTableIds:
          - !Ref 'SlsPyDynamoVPCSubnet0RouteTable'

    SlsPyDynamoDynamoDBAstronauts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: astronaut_id
            AttributeType: S
        KeySchema:
          - AttributeName: astronaut_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
