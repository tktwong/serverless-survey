# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: bdfl-trade-notifier
# app and org for use with dashboard.serverless.com
app: bdfl-trade-notifier-app
org: brookstaylor13

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

resources:

  Resources:

    playersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: players
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S        
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 22
          WriteCapacityUnits: 22

    franchisesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: franchises
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S        
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    tradesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: trades
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S        
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    waiversTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: waivers
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    BDFLMessageQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: BDFLMessageQueue
        VisibilityTimeout: 600

provider:
  name: aws
  timeout: 300
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:DescribeTable'
        - 'dynamodb:Query'
        - 'dynamodb:Scan'
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:DeleteItem'
      Resource:
        - 'arn:aws:dynamodb:*:*:table/players'
        - 'arn:aws:dynamodb:*:*:table/franchises'
        - 'arn:aws:dynamodb:*:*:table/trades'
        - 'arn:aws:dynamodb:*:*:table/waivers'
    - Effect: 'Allow'
      Action:
        - 'sqs:SendMessage'
        - 'sqs:ReceiveMessage'
        - 'sqs:DeleteMessage'
        - 'sqs:GetQueueUrl'
      Resource:
        - 'arn:aws:sqs:*:*:BDFLMessageQueue'
  runtime: python3.8
  environment:
    MFL_USERNAME: ${param:MFL_USERNAME}
    MFL_PASSWORD: ${param:MFL_PASSWORD}
    MFL_LEAGUEID: ${param:MFL_LEAGUEID}
    MFL_API_YEAR: ${param:MFL_API_YEAR}
    GROUPME_API_TOKEN: ${param:GROUPME_API_TOKEN}
    GROUPME_BOT_ID: ${param:GROUPME_BOT_ID}


functions:

  getTrades:
    handler: get_trades.handler
    events:
      - schedule: cron(30 0,14 * * ? *)

  # getCloseGames:
  #   handler: get_close_games.handler
  #   events:
  #     - schedule: cron(30 0,4,9 ? * SUN *)

  getWaivers:
    handler: get_waivers.handler
    events:
      - schedule: cron(0 0,14 * * ? *)

  getPlayers:
    handler: get_players.handler
    events:
      - schedule: cron(0 11 * * ? *)

  getFranchises:
    handler: get_franchises.handler
    events:
      - schedule: cron(0 11 1 1-12 ? *)
  
  sendBDFLMessages:
    handler: send_bdfl_messages.handler
    events:
      - sqs: 
          arn:
            Fn::GetAtt:
              - BDFLMessageQueue
              - Arn