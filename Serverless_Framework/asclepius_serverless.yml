service: asclepius-api

### Templates
.cors_template: &CORS
  origin: '*'
  headers:
    - Content-Type
    - X-Amz-Date
    - Authorization
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  allowCredentials: false

.keep_warm_template: &KEEP_WARM
  rate: rate(10 minutes)
  enabled: true

### Provider
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DEVICE_DATA_TABLE}"

  environment:
    DEVICE_DATA_TABLE: ${self:service}-${self:provider.stage}-device-data
    PUSHER_APP_ID: ${env:ASCLEPIUS_PUSHER_APP_ID}
    PUSHER_APP_KEY: ${env:ASCLEPIUS_PUSHER_APP_KEY}
    PUSHER_APP_SECRET: ${env:ASCLEPIUS_PUSHER_APP_SECRET}


functions:
  pushDeviceData:
    handler: handler.pushDeviceData
    events:
      - http:
          path: device_data
          method: post
          cors:
            <<: *CORS
      - schedule:
          <<: *KEEP_WARM

  getHeartRate:
    handler: handler.getHeartRate
    events:
      - http:
          path: heartrate
          method: get
          cors:
            <<: *CORS
      - schedule:
          <<: *KEEP_WARM

resources:
  Resources:
    DeviceDataTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: type
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: type
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DEVICE_DATA_TABLE}

