app: voting-app-api
service: voting-app-api

frameworkVersion: ">=1.1.0 <=2.0.0"

plugins:
  - serverless-python-requirements
  - serverless-offline


provider:
  name: aws
  stage: dev
  region: ap-southeast-2
  runtime: python3.8
  environment:
    MONGO_DB_USER: ${env:MONGO_DB_USER}
    MONGO_DB_PASS: ${env:MONGO_DB_PASS}
    MONGO_DB_NAME: votingdb
    MONGO_DB_URL: ${env:MONGO_DB_URL}
    ISSUE_CREATE_TOKEN: ${env:ISSUE_CREATE_TOKEN}
    PRIVATE_KEY: ${env:PRIVATE_KEY}
  iamManagedPolicies:
    - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"


package:
  individually: true
  exclude:
    - node_modules/**
    - venv/**


functions:
  getbill:
    handler: bill/get.get
    events:
      - http:
          path: bill/{id}
          method: get
          cors: true

  listbill:
    handler: bill/list.list
    events:
      - http:
          path: bill
          method: get
          cors: true

  getissue:
    handler: issue/get.get
    events:
      - http:
          path: issue/{id}
          method: get
          cors: true

  listissue:
    handler: issue/list.list
    events:
      - http:
          path: issue
          method: get
          cors: true

  makeissue:
    handler: issue/create.create
    events:
      - http:
          path: issue
          method: post
          cors: true

  getspec:
    handler: spec/get.get
    events:
      - http:
          path: spec/{id}
          method: get
          cors: true

  listspec:
    handler: spec/list.list
    events:
      - http:
          path: spec
          method: get
          cors: true

  getballot:
    handler: shitchain/get.get
    events:
      - http:
          path: shitchain/{id}
          method: get
          cors: true

  listballot:
    handler: shitchain/list.list
    events:
      - http:
          path: shitchain
          method: get
          cors: true

  makevote:
    handler: shitchain/create.create
    events:
      - http:
          path: shitchain
          method: post
          cors: true

  getresult:
    handler: result/get.get
    events:
      - http:
          path: result/{id}
          method: get
          cors: true

  listresult:
    handler: result/list.list
    events:
      - http:
          path: result
          method: get
          cors: true

  # updatebills:
  #   handler: update_bills_db.run
  #   events:
  #     - schedule: rate(24 hours)
  #     - schedule: cron(0 5 * * ? *)

  updateresults:
    handler: update_results_db.run
    events:
      - schedule: rate(5 minutes)
