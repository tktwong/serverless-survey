service: uppload-serverless-s3

plugins:
  - serverless-python-requirements
  - serverless-wsgi

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  # Fill this in or set up credentials otherwise
  profile: ${opt:profile, 'Fill Me In'}
  environment:
    IMAGES_BUCKET:
      Ref: ImagesBucket
  apiKeys:
    - ${self:provider.stage}-${self:service}-api-key
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: ImagesBucket
            - '/*'

custom:
  pythonRequirements:
    pythonBin: python3
  wsgi:
    app: src.__hug_wsgi__
    packRequirements: false
    pythonBin: python3

package:
  include:
    - src/**
  exclude:
    - node_modules/**
    - example/**

resources:
  Resources:
    ImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - '*'
            AllowedHeaders:
            - '*'

functions:
  wsgi:
    handler: wsgi_handler.handler
    events:
      - http: 
          method: post
          path: /images
          private: true
          cors: true
      - http:
          method: get
          path: /images/{id}
          cors: true
