frameworkVersion: ">=1.28.0"

# NOTE: update this with your service name
service: subscriptions-dispatcher

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline-scheduler
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude:
        - mysql

  serverless-offline:
    babelOptions:
      presets: ["env", "flow"]
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: subscriptions-dev
            sources: [./testSeedData/subscriptions.json]

  # https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html
  schedule:
    dev:
      daily: rate(1 minute)
      # daily: cron(0/1 * ? * * *)
      weekly: cron(0 9 ? * SAT *)
      monthly: cron(0 9 1 * ? *)
    stage:
      daily: cron(0 0 ? * * *)
      weekly: cron(0 9 ? * SAT *)
      monthly: cron(0 9 1 * ? *)
    prod:
      daily: cron(0 0 ? * * *)
      weekly: cron(0 9 ? * SAT *)
      monthly: cron(0 9 1 * ? *)

provider:
  name: aws
  profile: ${opt:profile, 'spreadshare'}
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  memorySize: 512
  versionFunctions: false
  environment: ${file(env.yml):${self:provider.stage}}
  tags:
    service: subscription-dispatcher
    category: subscription
  vpc:
    securityGroupIds:
      - sg-44cb5f29
    subnetIds:
      - subnet-f2efe099
      - subnet-1a0e4b67
      - subnet-190a4254
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}/index/*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:${self:provider.region}:*:function:email-dispatcher-${self:provider.stage}-digest"

functions:
  digest-aggregator:
    handler: src/handlers/digestAggregator.handler
    description: Spreadshare subscriptions digest aggregator.
    events:
      - schedule:
          rate: ${self:custom.schedule.${self:provider.stage}.daily}
          enabled: true
          name: ${self:provider.stage}-dailyEmailNotifications
          input:
            type: daily
      - schedule:
          rate: ${self:custom.schedule.${self:provider.stage}.weekly}
          enabled: true
          name: ${self:provider.stage}-weeklyEmailNotifications
          input:
            type: weekly
      - schedule:
          rate: ${self:custom.schedule.${self:provider.stage}.monthly}
          enabled: true
          name: ${self:provider.stage}-monthlyEmailNotifications
          input:
            type: monthly

package:
  individually: true

resources:
  Conditions:
    CreateTable:
      Fn::Equals:
        - ${opt:stage}
        - dev
  Resources:
    SubscriptionsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Condition: CreateTable
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: channelId
            AttributeType: S
          - AttributeName: streamId
            AttributeType: S
          - AttributeName: channelFrequency
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: channelId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: channel-frequency-stream-index
            KeySchema:
              - AttributeName: channelFrequency
                KeyType: HASH
              - AttributeName: streamId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
