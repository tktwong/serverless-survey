
service: SLS-GithubToS3

custom:
  # Provide Github Personal Access Token here
  # https://github.com/settings/tokens
  gts3_config: ${file(./config/config.json):${opt:aws-profile}}

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  timeout: 30
  # Stage name goes here (eg: dev/prod/v1)
  stage: v1
  # Make sure this matches the region you are using
  region: us-east-1
  environment:
    GITHUB_WEBHOOK_SECRET: ${self:custom.gts3_config.github_webhook_secret}
    GITHUB_PERSONAL_ACCESS_TOKEN: ${self:custom.gts3_config.github_personal_access_token}

  iamRoleStatements:
    # Required to be able to sync files from the repo to the S3 bucket
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetBucketLocation"
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:DeleteObject"
      # List all S3 buckets this should have permissions to deploy to below
      Resource: ${self:custom.gts3_config.s3_targets}
    # Uncomment the below if you already have an errorLogs table in dynamoDB
    # (Note) Need to document errorLogs some day
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource:
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:dynamodb'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'table/errorLogs'
    - Effect: "Allow"
      Action:
        - "sns:Publish"
        - "sns:ListSubscriptionsByTopic"
        - "sns:Subscribe"
      Resource:
        - "Fn::Join":
            - ""
            -
              - "arn:aws:sns:"
              - {Ref: "AWS::Region"}
              - ":"
              - {Ref: "AWS::AccountId"}
              - ":github-webhooks"

layers:
  commonModules:
    path: layers/CommonModules
    compatibleRuntimes:
      - nodejs12.x
    name: ${self:provider.stage}-githubtos3-commonModules
    description: "@octokit/rest node-stream-zip s3-client"

# Define Lambda functions
functions:
  # Listener function
  listener:
    handler: lambdas/listener.handler
    description: Lambda bot triggered by GitHub webhook to APIG, validates request, publishes to SNS
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - http:
          path: ghWebhook
          method: post
          cors: true
  # Deployer function
  deployer:
    handler: lambdas/deployer.handler
    description: Lambda bot triggered by SNS topic to deploy to S3
    timeout: 300
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - sns: github-webhooks
