service: celsus-core

plugins:
  - serverless-webpack

custom:
  config: ${file(./infra.json)}
  webpack:
    webpackConfig: './build/webpack.base.config.js'
    includeModules:
      forceExclude:
        - aws-sdk
    packager: 'yarn'

provider:
  name: aws
  runtime: nodejs12.x
  versionFunctions: false
  memorySize: 1024
  region: ${self:custom.config.region}
  stage: ${self:custom.config.environment}
  profile: serverless-admin-profile
  timeout: 30
  # >>> Lambda has to live in VPC in order to access RDS
  role: ${self:custom.config.lambdaExecutionRoleArn}
  vpc:
    securityGroupIds:
      - ${self:custom.config.coreStorageSecurityGroup} # To access the RDS instance
      - ${self:custom.config.mainVPCDefaultSecurityGroup} # To publish to SNS via the VPC Endpoint
    subnetIds:
      - ${self:custom.config.mainVPCSubnet2}
  # <<< Lambda has to live in VPC in order to access RDS
  environment:
    PGUSER: ${ssm:core_storage_username_${self:provider.stage}~true}
    PGPASSWORD: ${ssm:core_storage_password_${self:provider.stage}~true}
    PGHOST: ${ssm:core_storage_hostname_${self:provider.stage}~true}
    PGPORT: ${ssm:core_storage_port_${self:provider.stage}~true}
    PGDATABASE: ${ssm:core_storage_database_${self:provider.stage}~true}
    PGSCHEMA: ${ssm:core_storage_schema_${self:provider.stage}~true}
    REGION: ${self:custom.config.region}
    LOG_LEVEL: info

package:
  exclude:
    - .env
    - .vscode/**
    - .travis.yml
    - coverage/**
    - test/**
    - scripts/**
    - run-local-postgres.sh
    - secrets.txt

functions:
  getLibraries:
    handler: src/handler.getLibraries
    name: get-libraries
  getLibrary:
    handler: src/handler.getLibrary
    name: get-library
  postLibrary:
    handler: src/handler.postLibrary
    name: post-library
  deleteLibrary:
    handler: src/handler.deleteLibrary
    name: delete-library
  getBooksFromLibrary:
    handler: src/handler.getBooksFromLibrary
    name: get-books-from-library
  searchBooks:
    handler: src/handler.searchBooks
    name: search-books
  deleteBook:
    handler: src/handler.deleteBook
    name: delete-book
  postBook:
    handler: src/handler.postBook
    name: post-book
  getBook:
    handler: src/handler.getBook
    name: get-book
  handleMessages:
    handler: src/handler.handleMessages
    name: handle-core-messages
    events:
      - sqs:
          arn: ${self:custom.config.coreQueueArn}
          batchSize: 1
