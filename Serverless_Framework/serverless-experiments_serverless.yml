service: login-strategy # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
      Action:
      - logs:CreateLogGroup
      - logs:CreateLogStream
      - logs:PutLogEvents
      Resource:
      - 'Fn::Join':
        - ':'
        - - 'arn:aws:logs'
          - Ref: 'AWS::Region'
          - Ref: 'AWS::AccountId'
          - 'log-group:/aws/lambda/*:*:*'
    - Effect: "Allow"
      Action:
        - "cognito-identity:ListIdentityPools"
      Resource:
        Fn::Join:
        - ""
        - - "*"
    - Effect: "Allow"
      Action:
        - "cognito-identity:*"
      Resource:
        Fn::Join:
        - ":"
        -
          - "arn:aws:cognito-identity"
          - Ref: 'AWS::Region'
          - Ref: 'AWS::AccountId'
          - Fn::Join:
              - ""
              -
                - "identitypool/"
                - Ref: CognitoIdentityPool
    - Effect: "Allow"
      Action:
          - "cognito-sync:ListRecords"
          - "cognito-sync:UpdateRecords"
      Resource:
        Fn::Join:
        - ":"
        -
          - "arn:aws:cognito-sync"
          - Ref: 'AWS::Region'
          - Ref: 'AWS::AccountId'
          - Fn::Join:
            - ""
            - - "identitypool/"
              - Ref: CognitoIdentityPool
              - "/identity/*/dataset/profile"


functions:
  user:
    handler: handlers/User.handler
    environment:
      AWS_ACCOUNT_ID:
        Ref: 'AWS::AccountId'
      COGNITO_IDENTITY_POOL_ID:
        Ref: CognitoIdentityPool
      COGNITO_DEVELOPER_PROVIDER_NAME: cognito_developer_provider_name_identity_pool


    events:
      - http:
          path: v1/user/{operation}
          method: post
          cors: true
          request:
            parameters:
              paths:
                operation: true

resources:
  Resources:

    # Cognito - User pool
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: cognito_sls_backend_user_pool
    # Cognito - Client
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: cognito_sls_backend_client
        UserPoolId:
          Ref: CognitoUserPool
    # Cognito - Identity
    CognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: cognito_sls_backend_identity_pool
        DeveloperProviderName: cognito_developer_provider_name_identity_pool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [CognitoUserPool, ProviderName]
    # Cognito roles
    CognitoIdentityPoolRoles:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId:
          Ref: CognitoIdentityPool
        Roles:
          authenticated:
            Fn::GetAtt: [CognitoAuthRole, Arn]
          unauthenticated:
            Fn::GetAtt: [CognitoUnauthRole, Arn]
    CognitoAuthRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: appAuthRole
        Path: /
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
            - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud":
                  Ref: CognitoIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated
        Policies:
        - PolicyName: "CognitoAuthorizedPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
              - "mobileanalytics:PutEvents"
              - "cognito-sync:*"
              - "cognito-identity:*"
              Resource: "*"
            - Effect: "Allow"
              Action:
              - "execute-api:Invoke"
              Resource: "*"
    CognitoUnauthRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: appUnauthRole
        Path: /
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
            - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud":
                  Ref: CognitoIdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": unauthenticated
        Policies:
        - PolicyName: "CognitoUnauthorizedPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
              - "mobileanalytics:PutEvents"
              - "cognito-sync:*"
              - "cognito-identity:*"
              Resource: "*"
