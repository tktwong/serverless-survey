service: cloud-cluster

provider:
  name: aws
  runtime: java8
  timeout: 30
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action: ['cognito-idp:ListUsers']
      Resource: 'arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3'
    - Effect: Allow
      Action: ['sns:Publish*']
      Resource:
        - Ref: LoadTopic
    - Effect: Allow
      Action: ['kms:Encrypt**']
      Resource:
        - Fn::GetAtt:
            - EncryptionKey
            - Arn
    - Effect: Allow
      Action: ['s3:*']
      Resource:
        - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: Info
        - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: Info
              - '/*'
custom:
  properties:
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":LoaderTopic"
          topicName: LoaderTopic

package:
  artifact: target/cloud-resource-finder-1.0-SNAPSHOT.jar

functions:

  resourceLoader:
    handler: com.cluster.sns.ResourceLoader
    role: LoaderRole
    timeout: 300
    environment:
      BUCKET: { Ref: Info }
    events: ${self:custom.properties.events}

  resourceInfoFinder:
    handler: org.http4k.serverless.lambda.LambdaFunction::handle
    environment:
      BUCKET: { Ref: Info }
      ENCRYPTION_KEY: { Ref: EncryptionKey }
      LOAD_TOPIC: { Ref: LoadTopic }
      HTTP4K_BOOTSTRAP_CLASS: com.cluster.api.ApiReactor
    events:
      - http:
          path: /accounts/{accountId}/alias/{alias}
          cors: true
          method: put
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
      - http:
          path: /accounts/{accountId}
          cors: true
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
      - http:
          path: /accounts/{accountId}/alias/{alias}
          cors: true
          method: delete
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
      - http:
          path: /accounts/{accountId}/load
          cors: true
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
      - http:
          path: /accounts/{accountId}/collect
          cors: true
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
      - http:
          path: /users/{username}
          cors: true
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-1:432337707074:userpool/eu-west-1_4KfOFr5m3
resources:
  Resources:
    Info:
      Type: AWS::S3::Bucket
    EncryptionKey:
      Type: AWS::KMS::Key
      Properties:
        KeyPolicy: {"Version": "2012-10-17","Statement":[{"Effect":"Allow","Principal":"*","Action":"*","Resource":"*"}]}
    LoadTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: LoaderTopic


    LoaderRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: loaderPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action: ['sns:Subscribe*']
                  Resource:
                    - Ref: LoadTopic
                - Effect: Allow
                  Action:
                    - kms:Decrypt*
                  Resource:
                    Fn::GetAtt:
                      - EncryptionKey
                      - Arn
                - Effect: Allow
                  Action: ['s3:*']
                  Resource:
                    - Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - Ref: Info
                    - Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - Ref: Info
                          - '/*'