

service: complete-tutorial-test
# app and org for use with dashboard.serverless.com
app: complete-tutorial-test
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=1.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  timeout: 10
  stage: dev
  region: ap-southeast-1
  endpointType: regional
  role: queryTestDRLRole    #Khai báo role sử dụng cho tất cả function

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  readS3:
      handler: ./ExampleHandlers/readFileS3.readS3
      iamRoleStatementsInherit: true
      role: s3Role
      events:
        - http:
            path: tutorial/readS3
            method: get
  hello:
    handler: handler.hello
    iamRoleStatementsInherit: true
    #role: s3Role
    role: queryTestDRLRole
    events:
      - http:
          path: tutorial/hello
          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    S3Resource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: complete-tutorial
    queryTestDRLRole:
      Type: AWS::IAM::Role            # Loại resouce, có thể là S3 Bucket, dynamodb Table,...
      Properties:
        Path: /my/role/table/         # vị trí lưu của role
        RoleName: QueryDrlRole
        AssumeRolePolicyDocument:     # Khai báo thông tin loại service được sử dụng role :lambda /EC2/ Redshift,...
          Version: '2012-10-17'       # Khai báo version polici của document sử dụng, sử dụng mới nhất
          Statement:
            - Effect: Allow           # Cho phép service có thể sử dụng role
              Principal:
                Service:
                  - lambda.amazonaws.com  # loại service được sử dụng role :lambda function
              Action: sts:AssumeRole
        Policies:                     # Các quyền access
          - PolicyName: myPolicy  # Tên policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow                            #Cho phép quyền truy cập
                Action:                                  #Khai báo các action được thực hiện
                  - dynamodb:Query                       #Cho phép query
                  - dynamodb:Scan                        #Cho phép scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: 
                  - arn:aws:dynamodb:ap-southeast-1:531817921593:table/test_drl # arn của table cần cấp quyền truy cập
                  - arn:aws:dynamodb:ap-southeast-1:531817921593:table/test_drl/index/GSI1
    s3Role:
      Type: AWS::IAM::Role            # Loại resouce, có thể là S3 Bucket, dynamodb Table,...
      Properties:
        Path: /my/role/table/         # vị trí lưu của role
        RoleName: S3Role
        AssumeRolePolicyDocument:     # Khai báo thông tin loại service được sử dụng role :lambda /EC2/ Redshift,...
          Version: '2012-10-17'       # Khai báo version polici của document sử dụng, sử dụng mới nhất
          Statement:
            - Effect: Allow           # Cho phép service có thể sử dụng role
              Principal:
                Service:
                  - lambda.amazonaws.com  # loại service được sử dụng role :lambda function
              Action: sts:AssumeRole
        Policies:                     # Các quyền access
          - PolicyName: myPolicy     # Tên policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: 'Allow'
                Action:
                  - s3:GetObject                               #Khai báo tất cả các action trên s3
                  - s3:List*
                Resource: arn:aws:s3:::test-dyna/*          # arn của Bucket cần cấp quyền truy cập

#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
