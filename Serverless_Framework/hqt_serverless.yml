service: sms

provider:
  name: aws
  runtime: go1.x
  stage: unstable
  region: us-west-2
  environment:
    ACCOUNTS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-accounts
    NUMBERS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-numbers
    VERIFICATIONS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-verifications
    PLIVO_AUTH_TOKEN: ''
    PLIVO_AUTH_ID: ''
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ACCOUNTS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.NUMBERS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VERIFICATIONS_TABLE}"

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  receive:
    handler: bin/receive
    events:
      - http:
          path: /receive
          method: post
  create:
    handler: bin/create
    events:
      - http:
          path: /create
          method: post
  verify:
    handler: bin/verify
    events:
      - http:
          path: /verify
          method: post

plugins:
  - serverless-domain-manager
  - serverless-dynamodb-local

custom:
  customDomain:
    domainName: 
    basePath: 'z.com'
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: regional
    certificateName: '*.z.com'
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

resources:
  Resources:
    AccountsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: number
            AttributeType: S
        KeySchema:
          - AttributeName: number
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ACCOUNTS_TABLE}
    NumbersTable:
        Type: 'AWS::DynamoDB::Table'
        DeletionPolicy: Retain
        Properties:
          AttributeDefinitions:
            - AttributeName: number
              AttributeType: S
          KeySchema:
            - AttributeName: number
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          TableName: ${self:provider.environment.NUMBERS_TABLE}
    VerificationsTable:
        Type: 'AWS::DynamoDB::Table'
        DeletionPolicy: Retain
        Properties:
          AttributeDefinitions:
            - AttributeName: number
              AttributeType: S
          KeySchema:
            - AttributeName: number
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          TableName: ${self:provider.environment.VERIFICATIONS_TABLE}
