service: ${file(./config.yml):${self:custom.profile}.service}
frameworkVersion: ">=1.28.0 <2.0.0"

custom:
  stage: dev
  profile: collabo
  tableName: CI-GitHookRegistedRepositories
  region: ap-northeast-1
  triggerBucket: ${file(./config.yml):${self:custom.profile}.triggerBucket}
  deploymentBucket: ${file(./config.yml):${self:custom.profile}.deploymentBucket}

provider:
  stage: ${self:custom.stage}
  name: aws
  runtime: go1.x
  region: ap-northeast-1
  profile: ${self:custom.profile}
  memorySize: 128
  deploymentBucket:
    name: ${self:custom.deploymentBucket}
    serverSideEncryption: AES256
  tags:
    Product: GitHook
    Environment: dev

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ WebHookTable, Arn ]
    - Effect: Allow
      Action: s3:*
      Resource:
        - arn:aws:s3:::${self:custom.triggerBucket}
        - arn:aws:s3:::${self:custom.triggerBucket}/*
    - Effect: Allow
      Action: lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:*
    - Effect: Allow
      Action: codebuild:StartBuild
      Resource:
        - arn:aws:codebuild:*
  # you can define service wide environment variables here
  environment:
    TABLENAME: ${self:custom.tableName}
    REGION: ${self:custom.region}
    TRIGGERBUCKET: ${self:custom.triggerBucket}

package:
  exclude:
    - ./**
  individually: true

functions:
  hookReceiver:
    handler: bin/hookReceiver
    name: ${self:service}-hookReceiver
    environment:
      CONTAINER_EXECUTER_NAME: ${self:functions.containerExecuter.name}
    events:
      - http:
          path: /hooks
          method: POST
    package:
      include:
        - ./bin/hookReceiver
  containerExecuter:
    handler: bin/containerExecuter
    name: ${self:service}-containerExecuter
    package:
      include:
        - ./bin/containerExecuter
        - ./bin/gitConnector
        - ./bin/outer_build.sh
    timeout: 20
# you can add CloudFormation resource templates here
resources:
  Resources: ${file(./resources/dynamodb.yaml):Resources}
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
