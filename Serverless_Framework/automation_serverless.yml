service: lambda-scaler

plugins:
  - serverless-sqs-alarms-plugin
  - serverless-external-s3-event

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  stage: dev
  memorySize: 128
  stackTags:
    App: intranet
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource:
      - arn:aws:dynamodb:*:*:table/${self:custom.config}

  - Effect: Allow
    Action:
      - sqs:Get*
      - sqs:List*
      - cloudwatch:*
    Resource: "*"

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}

  config: ${self:custom.prefix}-config

package:
  include:
    - .*
  exclude:
    - docs/**
    - helpers/**
    - node_modules/**
    - test/**

functions:

  scale:
    timeout: 300
    handler: scale.handler
    events:
      - schedule: rate(5 minutes)
    environment:
      conifg: ${self:custom.config}

  set_scale:
    handler: set_scale.handler
    environment:
      config: ${self:custom.config}
    events:
      - http:
          path: set_scale
          method: get

resources:
  Resources:

    Config:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.config}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    # This seems to need to be deployed once first before it works
    PathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        BasePath: ${self:custom.stage}-scale
        DomainName: api.dnts.net
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${self:custom.stage}
