service: boilerplate

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  profile: defualt
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
plugins:
  - serverless-dynamodb-local
  - serverless-domain-manager
  - serverless-offline

custom:
  customDomain:
    domainName: serverless.gql.com # Replace with domain name
    stage: ${self:provider.stage}
    basepath: gql # Add neccessary path to api
    certificateName: '*.gql.com' # Replace with certificate
    createRoute53Record: false # Change as needed
    endpointType: 'regional'

  dynamodb:
    stages:
      - 'dev'
    start:
      port: 8000
      inMemory: true
    seed:
      main:
        sources:
          table: mock-table
          sources: [mockTableData.json]

  serverless-offline:
    httpPort: 4000

functions:
  handler:
    handler: lambda.handler
    memorySize: 1536
    timeout: 30
    description: 'Serverless gql boilerplate'
    events:
      - http:
          path: graphql
          method: post
          cors: true

resources: # CloudFormation template syntax
  Resources:
    mockTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: mock-table
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1