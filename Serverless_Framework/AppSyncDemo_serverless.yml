service: appsync-intro
plugins:
  - serverless-appsync-plugin
  - serverless-pseudo-parameters
provider:
 name: aws
 region: eu-west-2
 runtime: python3.8
custom:
  appSync:
    name: app-sync-demo
    authenticationType: API_KEY
    logConfig:
      loggingRoleArn: { Fn::GetAtt: [AppSyncLoggingServiceRole, Arn] }
      level: ALL
    schema: ./resources/schema.graphql
    mappingTemplates:
      - dataSource: Users
        type: Query
        field: getUser
        request: "getUser-request-mapping-template.vtl"
        response: "getUser-response-mapping-template.vtl"
      - dataSource: Users
        type: Mutation
        field: createUser
        request: "createUser-request-mapping-template.vtl"
        response: "createUser-response-mapping-template.vtl"
      - dataSource: Orders
        type: Query
        field: getOrder
        request: "getOrder-request-mapping-template.vtl"
        response: "getOrder-response-mapping-template.vtl"
      - dataSource: Orders
        type: Mutation
        field: createOrder
        request: "createOrder-request-mapping-template.vtl"
        response: "createOrder-response-mapping-template.vtl"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: Users
        description: Users Table
        config:
          tableName: "Users"
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamoDBServiceRole, Arn] }
      - type: AMAZON_DYNAMODB
        name: Orders
        description: Orders Table
        config:
          tableName: "Orders"
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamoDBServiceRole, Arn] }
resources:
  - ${file(resources/roles.yml)}
