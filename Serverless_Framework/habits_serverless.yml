# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: habit-handler

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

# you can overwrite defaults here
  stage: prod
  region: eu-west-2

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
  environment:
    AIRTABLE_KEY: keyhbcvvQIT6NC7iZ
    MONZO_ACCESS_TOKEN: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJlYiI6IkVSVmVUZ0hYdXhlaXhtM2VGOVY2IiwianRpIjoiYWNjdG9rXzAwMDA5V013SzFMTTVMNEtKVEZkWW4iLCJ0eXAiOiJhdCIsInYiOiI1In0.Zohx_Lkgl7D9PFuLcoaRWvYHVP4DLWjiLJlBqE_S4aq93r87XCZX1C0Lxq0b-YiS0OK-hITN5Qmm14DddW9yow
    MONZO_POT_ID: pot_00009WMwS3jh4cRM3AT6dV
    MONZO_ACCOUNT_ID: acc_00009TpT6FZ50nhiitZVwX
    MONZO_CLIENT_ID: oauth2client_00009WZc8MjBHSgC3la6Yz
    MONZO_CLIENT_SECRET: mnzconf.n44Bo+He2bE1KsU3EbLqthJSAcH8rvjPc5ZDBsR8yYmX1gDA/jdFvACm/62dx8W8JcfcVFX1apeF8gTEhUF0
    PUSHOVER_TOKEN: a72nyvga1h2q4tf4pr1dfz12r7qjo9
    PUSHOVER_USER: u2snmzbc3u6fkszekrjnftrqk1pwch
    PUSHOVER_DEVICE: sm-g900f

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - schedule: rate(1 minute)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
