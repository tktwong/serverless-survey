service: reto-rimac

plugins:
  - serverless-offline
  # - serverless-mocha-plugin

custom:
  settings:
    POST_TABLE: planetas
    URL_STARTWARS: https://swapi.py4e.com/api

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POST_TABLE}"
  include:
    - /src/**

functions:
  planetasAll:
    handler: src/controllers/getPlaneta.getPlanetasAll
    description: Funcion donde trae todos los Planetas.
    memorySize: 2048
    timeout: 30
    events:
      - http:
          path: reto-rimac/v1.0/planetas
          method: get

  planetaid:
    handler: src/controllers/getPlaneta.getPlanetaIdNombre
    description: Funcion donde trae todos los Planetas por id  y Nombre.
    memorySize: 2048
    timeout: 30
    events:
      - http:
          path: reto-rimac/v1.0/planetas/{id}
          method: get

  postPlaneta:
    handler: src/controllers/postPlaneta.postPlanetaDB
    description: Funcion donde trae todos los Planetas por id  y Nombre.
    memorySize: 2048
    timeout: 30
    events:
      - http:
          path: reto-rimac/v1.0/planetas/
          method: post

  # putPlaneta:
  #   handler: src/controllers/putPLaneta.putPlanetas
  #   description: Funcion que actualiza los campos de su Json.
  #   memorySize: 2048
  #   timeout: 30
  #   events:
  #     - http:
  #         path: reto-rimac/v1.0/planetas/
  #         method: put

  # deletePlaneta:
  #   handler: src/controllers/deletePlaneta.deletePlaneta
  #   description: Funcion que Elimina Planetas.
  #   memorySize: 2048
  #   timeout: 30
  #   events:
  #     - http:
  #         path: reto-rimac/v1.0/planetas/
  #         method: put

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POST_TABLE}
