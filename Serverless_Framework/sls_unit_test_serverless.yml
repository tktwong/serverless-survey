service: sls-unit-test

custom:
  GREETER_DYNAMODB_TABLE: sls-unit-test-names-table
  TODO_DYNAMODB_TABLE: todo-table
  
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  profile: serverless-user
  environment: ${self:custom}

  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Scan"
      Resource: '*'

functions:
  hello:
    handler: handler.hello
    events:
      - http: 
          method: get
          path: hello
  moi:
    handler: handler.moi
    events:
      - http: 
          method: get
          path: moi
          
  wasGreeted:
    handler: handler.wasGreeted
    description: "Returns 200 if the name was greeted already - 404 if not"
    events:
      - http: 
          method: get
          path: greet


  # TODO FUNCTIONS

  getAll:
    handler: handler.getAll
    events:
      - http: 
          method: get
          path: todo
  add:
    handler: handler.add
    events:
      - http: 
          method: post
          path: todo

  update:
    handler: handler.update
    events:
      - http:
          method: patch
          path: todo

resources:
  Resources:
    GreeterTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "name"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "name"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.GREETER_DYNAMODB_TABLE}
    TodoTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.TODO_DYNAMODB_TABLE}
