service: users

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  stage: dev
  region: us-east-2
  deploymentBucket: 
    name: madelabs-io-deployments
  environment:
    POOL_ID: us-east-2_RRYO7mexD
    CLIENT_ID: 75m1gtceorsm9dbdhosol8a025
    SERVICE_NAME: ${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-sync:*
        - cognito-identity:*
      Resource: "arn:aws:cognito-idp:us-east-2:054771062887:userpool/us-east-2_RRYO7mexD"

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: /
          method: post
          cors: true
          authorizer: ${self:custom.authorizer}
  delete:
    handler: handler.delete
    events:
      - http:
          path: /
          method: delete
          cors: true
          authorizer: ${self:custom.authorizer}
  single:
    handler: handler.single
    events:
      - http:
          path: /
          method: get
          cors: true
          authorizer: ${self:custom.authorizer}
  update:
    handler: handler.update
    events:
      - http:
          path: /
          method: put
          cors: true
          authorizer: ${self:custom.authorizer}

plugins:
  - serverless-domain-manager
  - serverless-offline
custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: api.madelabs.io
    staging: staging-api.madelabs.io
    dev: dev-api.madelabs.io
  authorizer: 
    name: authorizer
    arn: arn:aws:cognito-idp:us-east-2:054771062887:userpool/us-east-2_RRYO7mexD

  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: ${self:custom.stage}
    basePath: ${self:service}
    endpointType: 'regional'
    certificateName: '*.madelabs.io'