service: cloudlog

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:STAGE}
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "iot:DescribeEndpoint"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:PutObject"
        - "s3:GetObject"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "sts:AssumeRole"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "iam:CreateRole"
        - "iam:PutRolePolicy"
      Resource: "*"
  timeout: 60
  environment:
    STAGE: ${env:STAGE}
    ORIGIN: ${env:ORIGIN}
    GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}

functions:
  index:
    handler: src/handler.index
    events:
      - http:
          path: /
          method: get
  realtime:
    handler: src/handler.realtime
    events:
      - http:
          path: /realtime
          method: get
          cors: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      packagePath: "./package.json" # relative path to custom package.json file.
      forceExclude:
        - aws-sdk
  customDomain:
    domainName: api.istdiestrassedes17tenjunigesperrt.de
    certificateName: api.istdiestrassedes17tenjunigesperrt.de
    createRoute53Record: true
    endpointType: "regional"
    securityPolicy: tls_1_2
    basePath: v2
