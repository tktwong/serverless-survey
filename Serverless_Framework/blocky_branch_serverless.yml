# Welcome to Serverless!
#
# This file is the main config file for your service.
service: blocky

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    BOARDS_TABLE: blocky-${opt:stage, self:provider.stage}-boards
    SCRIPTS_TABLE: blocky-${opt:stage, self:provider.stage}-scripts
    DASHBOARDS_TABLE: blocky-${opt:stage, self:provider.stage}-dashboards
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/blocky-${opt:stage, self:provider.stage}-*"

  # you can overwrite defaults here
  stage: dev
  region: us-east-1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  board_create:
    handler: boards/create.create
    events:
      - http:
          path: boards
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:369779819427:userpool/us-east-1_JMGZrBm5x
  
  board_get:
    handler: boards/get.get
    events:
      - http:
          path: boards/{id}
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:369779819427:userpool/us-east-1_JMGZrBm5x

  board_list:
    handler: boards/list.list
    events:
      - http:
          path: boards
          method: get
          cors: true
          #authorizer:
          #  arn: arn:aws:cognito-idp:us-east-1:369779819427:userpool/us-east-1_JMGZrBm5x

  board_update:
    handler: boards/update.update
    events:
      - http:
          path: boards/{id}
          method: put
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:369779819427:userpool/us-east-1_JMGZrBm5x

resources:
  Resources:
    BoardsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BOARDS_TABLE}
    
    ScriptsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.SCRIPTS_TABLE}
    
    DashboardsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DASHBOARDS_TABLE}

plugins:
  - serverless-dynamodb-local
  - serverless-offline