handler: lambdas/{{name}}/{{name}}.handler
name: {{name}}
# customize as needed to connect your lambda function to layers
layers:
  - { Ref: ApiLayerLambdaLayer }
package:
  include:
    - lambdas/{{name}}/{{name}}.js
    - lambdas/{{name}}/node_modules/**
events:
  - http:
      method: {{method}}
      path: {{path}}
      cors: true
      # custom fields allowing you to describe your endpoint in order to automatically document it
      kaskadi-docs:
        description: placeholder endpoint # describe what this endpoint is used for
        # this field helps you describe any query string parameter accepted by this endpoint
        queryStringParameters:
          - key: key1
            description: first key
          - key: key2
            description: second key
            default: 35 # you can give a default value
        # this field helps you describe the body expected by your endpoint
        body:
          - key: param1
            description: first body param
            default: 'hello'
          - key: param2
            description: second body param
            default: true
        # this field allows you to define a set of request/response examples to display in the documentation
        examples:
          - request:
              pathParameters: # any path parameters specified in here will be swapped by their respective value in the example request
                id: 123
                some-param: true
                another_param: hey
                proxy+: hello
              headers:
                'Content-Type': 'application/json'
              queryStringParameters:
                key1: hello
                key2: test
              body:
                param1: does not make sense in GET
                param2: but this is a test
            response:
              statusCode: 200
              headers:
                'x-kaskadi-data': some data
              body:
                resParam1: hello
                resParam2: test
