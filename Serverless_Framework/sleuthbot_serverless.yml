service: diagnostic-tool

provider:
  name: aws
  region: ap-southeast-2
  runtime: nodejs12.x
  timeout: 29
  stage: ${opt:stage, env:STAGE, "dev"}
  apiGateway:
    restApiId: !Ref PublicApiGateway
    restApiRootResourceId: !GetAtt PublicApiGateway.RootResourceId
  environment:
    STAGE: ${self:provider.stage}
    NODE_OPTIONS: --enable-source-maps
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    INCOMING_SNS_TOPIC_ARN: !Ref IncomingSlackMessageTopic
    OUTGOING_SNS_TOPIC_ARN: !Ref OutgoingSlackMessageTopic
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
      Resource:
        - !Ref IncomingSlackMessageTopic
        - !Ref OutgoingSlackMessageTopic
    # For searching for resources
    - Effect: 'Allow'
      Action:
        [
          'resource-groups:Get*',
          'resource-groups:List*',
          'resource-groups:Search*',
          'tag:Get*',
          'cloudformation:DescribeStacks',
          'cloudformation:ListStackResources',
          'ec2:DescribeInstances',
          'ec2:DescribeSecurityGroups',
          'ec2:DescribeSnapshots',
          'ec2:DescribeVolumes',
          'ec2:DescribeVpcs',
          'elasticache:DescribeCacheClusters',
          'elasticache:DescribeSnapshots',
          'elasticache:ListTagsForResource',
          'elasticbeanstalk:DescribeEnvironments',
          'elasticmapreduce:DescribeCluster',
          'elasticmapreduce:ListClusters',
          'glacier:ListVaults',
          'glacier:DescribeVault',
          'glacier:ListTagsForVault',
          'kinesis:ListStreams',
          'kinesis:DescribeStream',
          'kinesis:ListTagsForStream',
          'opsworks:DescribeStacks',
          'opsworks:ListTags',
          'rds:DescribeDBInstances',
          'rds:DescribeDBSnapshots',
          'rds:ListTagsForResource',
          'redshift:DescribeClusters',
          'redshift:DescribeTags',
          'route53domains:ListDomains',
          'route53:ListHealthChecks',
          'route53:GetHealthCheck',
          'route53:ListHostedZones',
          'route53:GetHostedZone',
          'route53:ListTagsForResource',
          'storagegateway:ListGateways',
          'storagegateway:DescribeGatewayInformation',
          'storagegateway:ListTagsForResource',
          's3:ListAllMyBuckets',
          's3:GetBucketTagging',
          'elasticloadbalancing:DescribeLoadBalancers',
          'elasticloadbalancing:DescribeTags',
          'ssm:ListDocuments',
          'cloudtrail:LookupEvents',
          'cloudformation:DescribeStacks',
        ]
      Resource: '*'
      # TODO: Restrict to only logs in this stack/stage
    - Effect: 'Allow'
      Action:
        [
          'logs:GetQueryResults',
          'logs:StartQuery',
          'logs:StopQuery',
          cloudwatch:GetMetricStatistics,
        ]
      Resource: '*'

custom:
  prune:
    automatic: true
    number: 5
  domain: sluthbot.sammurphy.dev

functions:
  # Slack Frontend - Gets events from Slack
  slackApp:
    handler: src/handlers/slackApp.handler
    events:
      - http:
          path: slack/events
          method: get
      - http:
          path: slack/events
          method: post

  # Inspectors - Do some investigation on behalf of Detective SleuthBot
  welcomeMessageInspector:
    handler: src/handlers/inspectors/welcomeMessageInspector.handler
    events:
      - snsSqs:
          name: WM # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to
  collectCloudwatchLogsInspector:
    handler: src/handlers/inspectors/collectCloudwatchLogsInspector.handler
    events:
      - snsSqs:
          name: CCL # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to
  collectCloudwatchMetricsInspector:
    handler: src/handlers/inspectors/collectCloudwatchMetricsInspector.handler
    events:
      - snsSqs:
          name: CMI # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to
  collectCloudTrail:
    handler: src/handlers/inspectors/collectCloudTrail.handler
    events:
      - snsSqs:
          name: CCT # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to
  collectCloudFormation:
    handler: src/handlers/inspectors/collectCloudFormation.handler
    events:
      - snsSqs:
          name: CCF # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to

  # Outgoing handlers - Send messages out to Slack
  handleOutgoingSlackMessage:
    handler: src/handlers/handleOutgoingSlackMessage.handler
    events:
      - snsSqs:
          name: HOSM # Required - choose a name prefix for the event queue
          topicArn: !Ref OutgoingSlackMessageTopic # Required - SNS topic to subscribe to

resources:
  Resources:
    PublicApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: diagnostic-tool-publicApiGateway-${self:provider.stage}
        MinimumCompressionSize: 1024
        EndpointConfiguration:
          Types:
            - EDGE
    PublicApiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId: !Ref PublicApiGateway
    IncomingSlackMessageTopic:
      Type: AWS::SNS::Topic
    OutgoingSlackMessageTopic:
      Type: AWS::SNS::Topic
    PublicApiGatewayBasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      DependsOn:
        - PublicApiGatewayDeployment
      Properties:
        DomainName: !Ref PublicApiGatewayDomainName
        Stage: ${self:provider.stage}
        RestApiId: !Ref PublicApiGateway
    PublicApiGatewayDomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        CertificateArn: arn:aws:acm:us-east-1:#{AWS::AccountId}:certificate/becfa201-6302-4676-be72-5e8b49d1ee56
        DomainName: ${self:provider.stage}.${self:custom.domain}
        EndpointConfiguration:
          Types:
            - EDGE
        SecurityPolicy: TLS_1_2
    PublicAliasRecord:
      Type: AWS::Route53::RecordSet
      DependsOn:
        - PublicApiGatewayDomainName
      Properties:
        AliasTarget:
          DNSName: !GetAtt PublicApiGatewayDomainName.DistributionDomainName
          EvaluateTargetHealth: false
          HostedZoneId: !GetAtt PublicApiGatewayDomainName.DistributionHostedZoneId
        Type: A
        Name: ${self:provider.stage}.${self:custom.domain}
        HostedZoneName: ${self:custom.domain}.
  Outputs:
    PublicApiGateway:
      Description: The ID of the REST API.
      Value: !Ref PublicApiGateway
      Export:
        Name: PublicApiGateway-${self:provider.stage}
    PublicApiGatewayRootResource:
      Description: The ID of the root resource of the REST API.
      Value: !GetAtt PublicApiGateway.RootResourceId
      Export:
        Name: PublicApiGatewayRootResource-${self:provider.stage}

plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-offline
  - '@agiledigital/serverless-sns-sqs-lambda'
