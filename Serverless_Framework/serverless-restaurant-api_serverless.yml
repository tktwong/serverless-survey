service: api-restaurant

custom:
  restaurantsTableName: 'restaurants-table-${self:provider.stage}'
  menusTableName: 'menus-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
      inMemory: true
      # noStart: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["RestaurantsDynamoDBTable", "Arn"] }
  environment:
    RESTAURANTS_TABLE: ${self:custom.restaurantsTableName}
    MENUS_TABLE: ${self:custom.restaurantsTableName}

functions:
  app:
    handler: build/app.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list

resources:
  Resources:
    RestaurantsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: restaurantId
            AttributeType: S
          # -
          #   AttributeName: created
          #   AttributeType: S
        KeySchema:
          -
            AttributeName: restaurantId
            KeyType: HASH
          # -
          #   AttributeName: created
          #   KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.restaurantsTableName}
    MenusDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: restaurantId
            AttributeType: S
          -
            AttributeName: menuId
            AttributeType: S
        KeySchema:
          -
            AttributeName: restaurantId
            KeyType: HASH
          -
            AttributeName: menuId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.menusTableName}
