app: it-ticketing-system

service:
  name: it-ticketing-system-auth
  description: |
    This service is used to authenticate users for the IT Ticketing System

frameworkVersion: ">=1.9.0 <2.0.0"

custom:
  props: ${file(env_config/env_${opt:stage, self:provider.stage}.yml)}

package:
  artifact: ${self:custom.props.artifactPath}

provider:
  name: aws
  runtime: java8
  stage: dev
  region: ${self:custom.props.region}
  memorySize: ${self:custom.props.memorySize}
  timeout: ${self:custom.props.timeout}
  deploymentBucket: ${self:custom.props.deploymentBucketName}
  role: ${self:custom.props.lambdaRole}

functions:
  TicketingSystemAuthHandler:
    handler: com.ntwhitfi.it.ticketing.system.auth.handler.AuthHandler
    name: TicketingSystemAuthHandler-${opt:stage, self:provider.stage}
    environment:
      COGNITO_CLIENT_ID: ${self:custom.props.cognitoClientId}
      USER_POOL_ID: ${self:custom.props.userPoolId}
      REGION: ${self:custom.props.region}
    events:
      - http:
          path: /user/login
          method: GET
          integration: lambda

  TicketingSystemCreateUserHandler:
    handler: com.ntwhitfi.it.ticketing.system.auth.handler.CreateUserHandler
    name: TicketingSystemCreateUserHandler-${opt:stage, self:provider.stage}
    environment:
      COGNITO_CLIENT_ID: ${self:custom.props.cognitoClientId}
      USER_POOL_ID: ${self:custom.props.userPoolId}
      REGION: ${self:custom.props.region}
    events:
      - http:
          path: /user/create
          method: POST
          integration: lambda
          authorizer: ${self:custom.props.lambdaAuthorizer}