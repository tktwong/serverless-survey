service:
  name: kishor-workshop
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - local


# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, env:STAGE, 'dev'}
  region: ${opt:region, env:AWS_DEFAULT}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    tags:
      Application: kishor-workshop
      Environment: ${self:provider.stage}
      GitRepo: github.com/getndazn/myaccount-subscriptions-be
      ManagedBy: kishor-workshop
      Owner: ares@dazn.com
  iamRoleStatements: ${file(./resources/iamRolePolicies.yml):iamRolesStatements}

functions:
  createSubscription:
    handler: handlers/createSubscription.subscribe
    events:
      - http:
          method: post
          path: /subscription
        

resources: # CloudFormation template syntax
  Resources:
    HelloLambdaEventSourceMappingDynamodbKishorSubscription:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config/${self:provider.stage}.yml):dynamoDB.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1