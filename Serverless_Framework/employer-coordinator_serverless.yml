service: employer-api
frameworkVersion: '2'

provider:
  name: aws
  stage: dev
  runtime: python3.8

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::${self:custom.enrolmentBucket.${self:custom.stage}}"
        - "arn:aws:s3:::${self:custom.callBackBucket.${self:custom.stage}}"
        - "arn:aws:s3:::${self:custom.codeBucket.${self:custom.stage}}"
    - Effect: Allow
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
        - "s3:DeleteObject"
      Resource:
        - "arn:aws:s3:::${self:custom.enrolmentBucket.${self:custom.stage}}/*"
        - "arn:aws:s3:::${self:custom.callBackBucket.${self:custom.stage}}/*"
        - "arn:aws:s3:::${self:custom.codeBucket.${self:custom.stage}}/*"

plugins:
  - serverless-python-requirements

custom:
  stage: ${opt:stage, self:provider.stage}
  callBackBucket:
    dev: acwic-employer-callback-dev
    prod: acwic-employer-callback
  codeBucket:
    dev: acwic-employer-code-dev
    prod: acwic-employer-code
  enrolmentBucket:
    dev:  acwic-employer-enrolment-dev
    prod: acwic-employer-enrolment

  pythonRequirements:
    fileName: requirements/serverless.txt

package:
  individually: true  # serverless-python-requirements: different dependencies for each function

functions:
  admin:
    handler: handler.handler
    module: admin # location of the lambda function app
    environment:
      STAGE_PREFIX: /${self:custom.stage}
      SERVICE_PREFIX: /admin
      CALLBACK_BUCKET: ${self:custom.callBackBucket.${self:custom.stage}}
      ENROLMENT_BUCKET: ${self:custom.enrolmentBucket.${self:custom.stage}}
      CODE_BUCKET: ${self:custom.codeBucket.${self:custom.stage}}
    events:
      - http:
          path: /admin/{proxy+}
          method: ANY
  callback:
    handler: handler.handler
    module: callback  # location of the lambda function app
    environment:
      STAGE_PREFIX: /${self:custom.stage}
      SERVICE_PREFIX: /cb
      CALLBACK_BUCKET: ${self:custom.callBackBucket.${self:custom.stage}}
      CODE_BUCKET: ${self:custom.codeBucket.${self:custom.stage}}
      ENROLMENT_BUCKET: ${self:custom.codeBucket.${self:custom.stage}}
    events:
      - http:
          path: /cb/{proxy+}
          method: ANY


# CloudFormation resources
resources:
  Resources:
    callBackBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.callBackBucket.${self:custom.stage}}
    codeBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.codeBucket.${self:custom.stage}}
    enrolmentBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.enrolmentBucket.${self:custom.stage}}