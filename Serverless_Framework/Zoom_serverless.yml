service: ${self:custom.environment.app}

custom: ${file(./serverless.${opt:stage,"production"}.json)}

provider:
  stage: ${opt:stage,"production"}
  deploymentBucket:
     name: ${env:bucket,self:custom.bucket}
  timeout: ${self:custom.timeout}
  RestapiId:
    Fn::GetAtt:
      - ApiGatewayRestApi
      - RootResourceId
  apiGateway:
    restApiId: ${env:restApiId,self:custom.restApiId,""}
    restApiRootResourceId: ${env:restApiRootResourceId,self:custom.restApiRootResourceId,""}
  #   escription: bot apigateway
  name: aws
  region: ${env:region,self:custom.environment.region,"us-east-1"}
  runtime: nodejs8.10
  role: ${env:role,self:custom.role}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  
package:
  exclude: ${self:custom.exclude}
  include: ${self:custom.include}

functions:
  app:
    environment: ${self:custom.environment}
    handler: ${self:custom.handler,"server.handler"}
    name: ${opt:stage,"production"}-nodebots-${self:custom.environment.app}
    events:
      - http:
         method: ANY
         path: /
        #  cors: ${self:custom.cors,false}
      - http:
         method: ANY
        #  cors: ${self:custom.cors,false}
         path: /{proxy+}


