org: unshift
app: helium-graphql
service: helium-graphql

plugins:
  - serverless-plugin-typescript

custom:
  stage: prod
  debug: "*"
  deploymentBucket: 'global-deployment-bucket'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.stage}
  region: us-east-1
  deploymentBucket:
    name: ${self:custom.deploymentBucket}
  environment:
    PGHOST: ${secrets:chat-pg-host}
    PGUSER: ${secrets:chat-pg-user}
    PGDATABASE: ${secrets:chat-pg-database}
    PGPASSWORD: ${secrets:chat-pg-password}
    PGPORT: ${secrets:chat-pg-port}
    CLIENT_SESSION_ID: ${secrets:chat-client-session-id}
    CLIENT_SESSION_SECRET: ${secrets:chat-client-session-secret}
    AWS_IOT_HOST: ${ssm:/helium-ws/aws-iot-host}
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "iot:Connect"
        - "iot:Publish"
        - "iot:Subscribe"
        - "iot:Receive"
        - "iot:GetThingShadow"
        - "iot:UpdateThingShadow"

functions:
  handler:
    disableLogs: false
    handler: src/graphql.handler
    timeout: 300
    events:
      - http:
          path: graphql
          method: any
          integration: lambda-proxy
          cors: true

resources:
  Resources:
    HandlerLogGroup:
      Properties:
        RetentionInDays: 7