# serverless.yml
# for sidecar

service: sidecar-manoj-testing-2
custom:
  tableName: 'sidecar-manoj-users-table-${self:provider.stage}-2'
  #myStage: ${opt:stage, self:provider.stage}
  # myProfile:
    # prod: yogesh_local
    # dev: mjp
    #stage: ${self:provider.stage}
provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  #profile: ${self:custom.myProfile.${self:custom.myStage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    #STAGE: ${opt:stage}
    USERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    package:
      include:
        - 'node_modules'
  getUser:
    handler: index.handler
    events:
      - http: 'GET /users/{proxy+}'
  createUser:
    handler: index.handler
    events:
      - http: 'POST /users'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
