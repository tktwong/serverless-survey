# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: asEvent

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  HostedZoneId: xxxxx
  ClusterDNSName: aaa.cc
  AutoScalingGroupName: abc

plugins:
  - serverless-plugin-include-dependencies
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: true # optional, default is true
# you can overwrite defaults here
  stage: dev
  region: us-west-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "route53:ListTagsForResources"
        - "route53:ChangeResourceRecordSets"
        - "route53:ListResourceRecordSets"
        - "route53:GetHealthCheck"
        - "route53:GetHostedZoneLimit"
        - "route53:ListTagsForResource"
      Resource:
        - "arn:aws:route53:::hostedzone/*"
        - "arn:aws:route53:::healthcheck/*"
        - "arn:aws:route53:::delegationset/*"
    - Effect: "Allow"
      Action:
        - "ec2:DescribeInstances"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "autoscaling:CompleteLifecycleAction"
      Resource: "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/*"

#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
  environment:
    DNS: ${self:custom.ClusterDNSName}
    HostedZoneId: ${self:custom.HostedZoneId}

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**
package:
  exclude:
    - src/**
    - node_modules/aws-sdk
  include:
    - handler.js
  excludeDevDependencies: true # Config if Serverless should automatically exclude dev dependencies in the deployment package. Defaults to true

functions:
  initEC2:
    handler: handler.initEC2
    name: initEC2
    timeout: 60
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.autoscaling"            
            detail-type:
              - "EC2 Instance Launch Successful"
              - "EC2 Instance-terminate Lifecycle Action"
            detail:
              AutoScalingGroupName:
                - ${self:custom.AutoScalingGroupName}
# you can add CloudFormation resource templates here
#resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

