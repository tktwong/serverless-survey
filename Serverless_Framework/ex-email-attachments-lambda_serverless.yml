service: "${env:SERVICE_NAME}"

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    forceExclude:
      - aws-sdk
      - serverless
    packager: 'yarn'

plugins:
  - serverless-plugin-existing-s3
  - serverless-webpack

provider:
  name: aws
  region: ${env:REGION}
  stage: ${env:STAGE}
  runtime: nodejs10.x
  memorySize: 256
  timeout: 30
  versionFunctions: false
  deploymentBucket:
    name: "${env:SERVICE_NAME}-${env:REGION}-deployment"
  environment:
    DYNAMO_TABLE: ${env:DYNAMO_TABLE}
    S3_BUCKET: ${env:S3_BUCKET}
    EMAIL_DOMAIN: ${env:EMAIL_DOMAIN}
  cfnRole: ${env:CLOUDFORMATION_ROLE_ARN}
  role: ${env:LAMBDA_EXECUTION_ROLE_ARN}
  stackTags:
    KeboolaStack: ${env:KEBOOLA_STACK}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:PutBucketNotification"
       Resource:
         - "arn:aws:s3:::${env:S3_BUCKET}"

package:
  include:
    - src/handler.js
    - node_modules/**
  exclude:
    - .env
    - docker-compose.yml
    - Dockerfile
    - package.json
    - yarn.lock

functions:

  s3Handler:
    handler: src/handler.handler
    tags:
      KeboolaStack: ${env:KEBOOLA_STACK}
    events:
      -
        existingS3:
          bucket: "${env:S3_BUCKET}"
          events:
            - "s3:ObjectCreated:*"
          rules:
            - prefix: _incoming/

