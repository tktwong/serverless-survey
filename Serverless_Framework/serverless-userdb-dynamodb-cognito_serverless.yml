service: revive-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  secrets: ${file(secrets.json)}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-2

  # 'iamRoleStatement' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  create:
    handler: functionsUsers/create.main
    events:
      - http:
          path: revive
          method: post
          cors: true
          authorizer: aws_iam

  get:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /revive/{id}
    # - method: GET request
    handler: functionsUsers/get.main
    events:
      - http:
          path: revive/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /revive
    # - method: GET request
    handler: functionsUsers/list.main
    events:
      - http:
          path: revive
          method: get
          cors: true
          authorizer: aws_iam

  update:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /revive/{id}
    # - method: PUT request
    handler: functionsUsers/update.main
    events:
      - http:
          path: revive/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete:
    # Defines an HTTP API endpoint that calls the main function in delete.js
    # - path: url path is /revive/{id}
    # - method: DELETE request
    handler: functionsUsers/delete.main
    events:
      - http:
          path: revive/{id}
          method: delete
          cors: true
          authorizer: aws_iam


  # stripe functions section
  fetchProducts:
    handler: functionsStripe/fetchProducts.handler
    events:
      - http:
          path: products
          method: get
          cors: true