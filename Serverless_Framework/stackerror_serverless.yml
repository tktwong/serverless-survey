service: stackerror

custom:
  deploymentBucket: 'global-deployment-bucket'

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  deploymentBucket:
    name: ${self:custom.deploymentBucket}
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DEBUG: true
    GITHUB_CLIENT_ID: ${ssm:/raisinquery/GITHUB_CLIENT_ID~true}
    GITHUB_CLIENT_SECRET: ${ssm:/raisinquery/GITHUB_CLIENT_SECRET~true}
    REDIS_URL: ${ssm:/raisinquery/REDIS_URL~true}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "*"

functions:
  #github:
  #  handler: src/handler.handler
  #  events:
  #    - schedule: rate(60 minutes)

  repos:
    handler: src/api.repos
    events: 
      - http:
          path: repos
          method: get
          cors: true
  repo:
    handler: src/api.repo
    events:
      - http:
          path: repo
          method: get
          cors: true
          
  message:
    handler: src/api.message
    events:
      - http:
          path: message
          method: get
          cors: true
  log:
    handler: src/api.log
    events:
      - http:
          path: log
          method: get
          cors: true

resources:
  Resources:
    MessagesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}-messages
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ReposDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}-repos
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    StateDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}-state
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
