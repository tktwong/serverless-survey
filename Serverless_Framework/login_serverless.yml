service: cw-login

stage: ${self:provider.stage}

provider:
  name: aws
  runtime: nodejs10.x
  timeout: 30
  region: ${opt:region, 'ap-south-1'}

  environment: 
    STAGE: ${opt:stage}
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:CreateTable
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem        
      Resource: '*'
    - Effect: Allow
      Action:
        - lambda:Invoke
        - lambda:InvokeFunction
      Resource: '*'
    - Effect: Allow
      Action: 
        - cognito-idp:*
      Resource: '*'

functions:
   login:
    handler: handlers/login.login
    events:
      - http:
          path: /
          method: post
          cors: true

resources:
  Resources:
    AdminCustomerStateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-admin-customer-state
        AttributeDefinitions:
          - AttributeName: ip
            AttributeType: S
        KeySchema:
          - AttributeName: ip
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-pseudo-parameters
  - serverless-cognito-add-custom-attributes


Type: AWS::IAM::Role
Properties: 
  AssumeRolePolicyDocument:
    Version: 2012-10-17
    Statement: 
     -
       Effect: Allow
       Action:
         - sns:publish
       Resource: '*'
  Description: IAM role for send SMS using AWS SNS
  ManagedPolicyArns: 
    - arn:aws:iam::738146172566:policy/service-role/Cognito-1509099821021
  Policies: 
    - SNS
  RoleName: PoonamSMS-Role-test