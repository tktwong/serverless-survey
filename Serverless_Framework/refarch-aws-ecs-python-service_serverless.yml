# FIXME: Needs CloudWatch alarms

service: refarch-ecs-python-service

plugins:
  - serverless-parameters

custom:
  stage: "${opt:stage, env:SLS_STAGE, 'dev'}"

  parameters:
    ServiceName:
      Type: String
      Description: "Service name"
      Default: "${self:service}-${self:provider.stage}"

    ServiceVersion:
      Type: String
      Description: "Service release build"
      Default: "${env:PARAM_SVC_VERSION, 'latest'}"

    ServiceMemory:
      Type: Number
      Description: "Service memory in MB"
      Default: 128

    ServicePort:
      Type: Number
      Description: "Serivce port"
      Default: 8080

    ServiceInstancesMin:
      Type: Number
      Description: "Minimum number of task instances"
      Default: "${env:PARAM_SVC_INST_MIN, '3'}"

    ServiceInstancesMax:
      Type: Number
      Description: "Maximum number of task instances"
      Default: "${env:PARAM_SVC_INST_MAX, '4'}"

    EcsClusterName:
      Type: String
      Description: "ECS cluster to run service"
      Default: "refarch-ecs-${self:provider.stage}"

    VpcId:
      Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
      Description: "VPC ID"
      Default: "/infra/vpc/prime/VpcId"

    AlbListenerArn:
      Type: AWS::SSM::Parameter::Value<String>
      Description: "ARN of ECS cluster ALB Listener"
      Default: "/refarch-ecs/${self:provider.stage}/AlbListenerArn"

    AlbUrl:
      Type: AWS::SSM::Parameter::Value<String>
      Description: "URL of ALB"
      Default: "/refarch-ecs/${self:provider.stage}/AlbUrl"

    UrlPath:
      Type: String
      Description: "Path to register with ALB"
      Default: "/${self:service}-${self:provider.stage}"

    EcsServiceDefaultPolicyArn:
      Type: AWS::SSM::Parameter::Value<String>
      Description: "IAM policy ARN for ECS cluster"
      Default: "/refarch-ecs/${self:provider.stage}/EcsServiceDefaultPolicyArn"

    InitDeploy:
      Type: String
      Description: "Create only projectbasics"
      AllowedValues:
        - true
        - false
      Default: "${env:INIT_DEPLOY, 'false'}"

provider:
  name: aws
  stage: "${self:custom.stage}"
  cfnRole: "${ssm:/infra/deploy/prime/DeployRoleArn}"
  stackTags:
    x-service: "${self:service}"
    x-stack: "${self:service}-${self:provider.stage}"

resources:

  Conditions:
    IsNotInitDeploy:
      Fn::Equals:
        - Ref: InitDeploy
        - false

  Resources:
    CloudWatchLogsGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName:
          Ref: AWS::StackName
        RetentionInDays: 365

    EcrRepo:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName:
          Ref: AWS::StackName

    ServiceRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Statement:
            Effect: Allow
            Principal:
              Service: ecs.amazonaws.com
            Action:
              - sts:AssumeRole
        ManagedPolicyArns:
          - Ref: EcsServiceDefaultPolicyArn

    TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        VpcId:
          Ref: VpcId
        Port:
          Ref: ServicePort
        Protocol: HTTP
        Matcher:
          HttpCode: 200
        HealthCheckIntervalSeconds: 10
        HealthCheckPath:
          Fn::Join:
            - '/'
            - - Ref: UrlPath
              - 'health'
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 2

    ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        ListenerArn:
          Ref: AlbListenerArn
        Priority: 2
        Conditions:
          - Field: path-pattern
            Values:
              - Fn::Join:
                - '/'
                - - Ref: UrlPath
                  - '*'
        Actions:
          - TargetGroupArn:
              Ref: TargetGroup
            Type: forward

    TaskDefinition:
      Type: AWS::ECS::TaskDefinition
      Properties:
        Family:
          Ref: ServiceName
        ContainerDefinitions:
          - Name:
              Ref: AWS::StackName
            Essential: true
            Environment:
              - Name: URL_ROOT
                Value:
                  Fn::Join:
                    - ''
                    - - '/'
                      - Ref: ServiceName
            Image:
              Fn::Join:
                - ''
                - - Ref: AWS::AccountId
                  - '.dkr.ecr.'
                  - Ref: AWS::Region
                  - '.amazonaws.com/'
                  - Ref: EcrRepo
                  - ':'
                  - Ref: ServiceVersion
            Memory:
              Ref: ServiceMemory
            PortMappings:
              - ContainerPort:
                  Ref: ServicePort
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group:
                  Ref: CloudWatchLogsGroup
                awslogs-region:
                  Ref: AWS::Region

    Service:
      Type: AWS::ECS::Service
      DependsOn: ListenerRule
      Condition: IsNotInitDeploy
      Properties:
        Cluster:
          Ref: EcsClusterName
        Role:
          Ref: ServiceRole
        DesiredCount:
          Ref: ServiceInstancesMin
        TaskDefinition:
          Ref: TaskDefinition
        DeploymentConfiguration:
          MinimumHealthyPercent: 100
          MaximumPercent: 200
        LoadBalancers:
          - ContainerName:
              Ref: ServiceName
            ContainerPort:
              Ref: ServicePort
            TargetGroupArn:
              Ref: TargetGroup

    EcrRepoUrlSsmParam:
      Type: AWS::SSM::Parameter
      Properties:
        Name: "/${self:service}/${self:provider.stage}/EcrRepoUrl"
        Description: "URL of ECR repository"
        Type: String
        Value:
          Fn::Join:
            - ''
            - - Ref: AWS::AccountId
              - '.dkr.ecr.'
              - Ref: AWS::Region
              - '.amazonaws.com/'
              - Ref: EcrRepo

    SvcUrlSsmParam:
      Type: AWS::SSM::Parameter
      Properties:
        Name: "/${self:service}/${self:provider.stage}/SvcUrl"
        Description: "URL of service."
        Type: String
        Value:
          Fn::Join:
            - ''
            - - Ref: AlbUrl
              - Ref: UrlPath
