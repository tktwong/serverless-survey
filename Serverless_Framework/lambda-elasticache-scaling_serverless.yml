service: redis-scaling
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-northeast-2
  memorySize: 256
  timeout: 30
  profile: ${file(config.yml):awsProfile}

  # service wide environment variable
  environment:
    REDIS_CLUSTER_REPGID: ${file(config.yml):redisCluster}
    REDIS_SCALEUP_NODE: 'cache.m5.large'
    REDIS_SCALEDOWN_NODE: 'cache.t3.medium'

  # IAM Role for Lambda
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "elasticache:*"
        - "sns:Publish"
      Resource: "*"

functions:
  redis-scaleup:
    handler: handler.redisScaleup
    onError:
      Ref: DeadLetterQueue
    events:
      # Invoke Lambda function Sat on 2AM
      - schedule: cron(0 2 ? * SAT *)

  redis-scaledown:
    handler: handler.redisScaledown
    onError:
      Ref: DeadLetterQueue
    events:
      # Invoke Lambda function Sun on 11PM
      - schedule: cron(0 23 ? * SUN *)

resources:
  Resources:
    DeadLetterQueue:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
          - Endpoint: ${file(config.yml):email}
            Protocol: email

package:
  exclude:
    - node_modules/**
