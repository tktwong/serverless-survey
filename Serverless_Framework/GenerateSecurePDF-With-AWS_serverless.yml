service: secure-pdf-book-2020

provider:
    name: aws
    runtime: go1.x
    profile: serverless-user
    region: ap-northeast-1
    iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - !GetAtt PDFBookBucket.Arn
            - !Join 
                - ""
                - - !GetAtt PDFBookBucket.Arn
                  - "/*"
    environment:
        BUCKET_NAME: !Ref PDFBookBucket
        HOME: /tmp 

package:
    exclude:
        - ./**
    include:
        - ./bin/**

functions:
    copyobject:
        handler: bin/copyobject/main
    encrypt:
        handler: bin/encrypt/main
        layers:
            - （QPDFの含まれるレイヤ－ARN）
        environment:
            LD_LIBRARY_PATH: "/opt/qpdf/lib:$LD_LIBRARY_PATH"
            PATH: "/opt/qpdf/bin:$PATH"
    property:
        handler: bin/property/main
    sign:
        handler: bin/sign/main
    watermark:
        handler: bin/watermark/main

resources:
    Resources:
        PDFBookBucket:
            Type: AWS::S3::Bucket
            Properties:
                LifecycleConfiguration:
                    Rules:
                    - Prefix: "tmp"
                      ExpirationInDays: 1
                      Status: Enabled
                    - Prefix: "public"
                      ExpirationInDays: 7
                      Status: Enabled
        PDFBookBucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket: !Ref PDFBookBucket
                PolicyDocument:
                    Version: "2008-10-17"
                    Id: "PolicyForCloudFrontPrivateContent"
                    Statement:
                        - Sid: 1
                          Effect: "Allow"
                          Principal: 
                            CanonicalUser: !GetAtt PDFBookCloudFromtOriginAccessIdentity.S3CanonicalUserId
                          Action: "s3:GetObject"
                          Resource: 
                            - !Join 
                              - ""
                              - - !GetAtt PDFBookBucket.Arn
                                - "/*"
        PDFBookCloudFromtOriginAccessIdentity:
            Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
            Properties:
                CloudFrontOriginAccessIdentityConfig:
                    Comment: "PDFBookCloudFromtOriginAccessIdentity"
        PDFBookCloudFront:
            Type: AWS::CloudFront::Distribution
            Properties:
                DistributionConfig:
                    Enabled: True
                    DefaultCacheBehavior:
                        ForwardedValues:
                          QueryString: True
                        TargetOriginId: "S3-secure-pdf-book-2020"
                        ViewerProtocolPolicy: "redirect-to-https"
                    Origins:
                        - Id: "S3-secure-pdf-book-2020"
                          DomainName: !GetAtt PDFBookBucket.RegionalDomainName
                          OriginPath: "/public"
                          S3OriginConfig:
                              OriginAccessIdentity: !Join
                                - ""
                                - - "origin-access-identity/cloudfront/"
                                  - !Ref PDFBookCloudFromtOriginAccessIdentity
    Outputs:
        PDFBookBucketName:
            Description: PDFBookBucketName
            Value: !Ref PDFBookBucket
            Export: 
                Name: ${self:service}-PDFBookBucketName
        PDFBookBucketArn:
            Description: PDFBookBucketArn
            Value: !GetAtt PDFBookBucket.Arn
            Export: 
                Name: ${self:service}-PDFBookBucketArn
        CopyobjectLambdaFunctionQualifiedArn:
            Export:
                Name: CopyobjectLambdaFunctionQualifiedArn
        EncryptLambdaFunctionQualifiedArn:
            Export:
                Name: EncryptLambdaFunctionQualifiedArn
        PropertyLambdaFunctionQualifiedArn:
            Export:
                Name: PropertyLambdaFunctionQualifiedArn
        SignLambdaFunctionQualifiedArn:
            Export:
                Name: SignLambdaFunctionQualifiedArn
        WatermarkLambdaFunctionQualifiedArn:
            Export:
                Name: WatermarkLambdaFunctionQualifiedArn