service: foodpedia

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  region: ${self:custom.regions.${self:provider.stage}}
  role: ${self:custom.roles.${self:provider.stage}}
  memorySize: 3008
  timeout: 10
  versionFunctions: true # if set to false, past versions can't be invoked by their qualifier

plugins:
  - serverless-plugin-optimize
  - serverless-plugin-scripts

package:
  individually: true

functions:
  funcOne:
    handler: lambda/index.handler
    name: foodpedia-${self:provider.stage} # name as displayed on the AWS Lambda dashboard
    description: foodpedia for restaurant search based on recipe
    events:
      - alexaSkill
      - http:
          path: action
          method: post
          cors: true
    environment:
      APP_ID: ${self:custom.appid.${self:provider.stage}}

custom:
  defaultStage: dev
  appid:
    dev: ${file(env.yml):APP_ID_DEV}
  profiles:
    dev: default
  regions:
    dev: eu-west-1
  languages:
    dev: GB-EN
  roles:
    dev: arn:aws:iam::254839603819:role/lambdafull
  optimize:
    debug: true # set to true to keep _optimize folder, required if running npm test
    minify: false # no need to minify every time
    global: false # minify imported node modules - significantly increases build time
    presets: ["babel-preset-node8"] # lighter alternative to es2015 default preset, which isn't necessary now that AWS Lambda supports Node v6
  scripts:
    hooks: # any other custom scripts can be run at any stage of the deployment process
      "deploy:cleanup": echo cleanup
      "deploy:initialize": echo initialize
      "deploy:setupProviderConfiguration": echo setupProviderConfiguration
      "deploy:createDeploymentArtifacts": echo createDeploymentArtifacts
      "deploy:compileFunctions": echo compileFunctions
      "deploy:compileEvents": echo compileEvents
      "deploy:deploy": echo deploy
      "deploy:function:deploy": echo function:deploy
