# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-firehose-elasticsearch # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

custom:
  myPublicIp: "72.21.196.64"
  esDomainName: kabits-com-${self:provider.stage}
  esInstanceType: t2.small.elasticsearch
  esVolumeSize: 10

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
        - firehose:Put*
      Resource: "*"

functions:
  sendLogsToFirehose:
    handler: handler.hello
    timeout: 30

# you can add CloudFormation resource templates here
resources:
  Resources:

    S3Bucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain

    ElasticsearchDomain:
      Type: AWS::Elasticsearch::Domain
      Properties:
        DomainName: ${self:custom.esDomainName}
        ElasticsearchVersion: '6.7'
        ElasticsearchClusterConfig:
          InstanceCount: '1'
          InstanceType: ${self:custom.esInstanceType}
        EBSOptions:
          EBSEnabled: 'true'
          Iops: 0
          VolumeSize: ${self:custom.esVolumeSize}
          VolumeType: gp2
        SnapshotOptions:
          AutomatedSnapshotStartHour: '0'
        AccessPolicies:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action: 'es:*'
              Resource: !Join
                - ''
                - - 'arn:aws:es:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':domain/'
                  - ${self:custom.esDomainName}
                  - '/*'
              Condition:
                IpAddress:
                  "aws:SourceIp": ${self:custom.myPublicIp}
        AdvancedOptions:
          rest.action.multi.allow_explicit_index: 'true'

    FirehoseRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "firehose.amazonaws.com" 
              Action: 
                - "sts:AssumeRole"
        Path: "/"
        Policies:
          -
            PolicyName: "root"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action: 
                    - "s3:AbortMultipartUpload"
                    - "s3:GetBucketLocation"
                    - "s3:GetObject"
                    - "s3:ListBucket"
                    - "s3:ListBucketMultipartUploads"
                    - "s3:PutObject"
                  Resource:
                    - !Join ["",["arn:aws:s3:::",!Ref S3Bucket]]
                    - !Join ["",["arn:aws:s3:::",!Ref S3Bucket,"/*"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "lambda:InvokeFunction"
                    - "lambda:GetFunctionConfiguration"
                  Resource:
                    - !Join ["",["arn:aws:lambda:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "es:DescribeElasticsearchDomain"
                    - "es:DescribeElasticsearchDomains"
                    - "es:DescribeElasticsearchDomainConfig"
                    - "es:ESHttpPost"
                    - "es:ESHttpPut"
                  Resource:
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain ]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/*"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "es:ESHttpGet"
                  Resource: 
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_all/_settings"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_cluster/stats"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/data*/_mapping/events"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_nodes"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_nodes/stats"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_nodes/*/stats"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/_stats"]]
                    - !Join ["",["arn:aws:es:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":domain/",!Ref ElasticsearchDomain,"/data*/_stats"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "logs:PutLogEvents"
                  Resource: !Join ["",["arn:aws:logs:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":log-group:/aws/kinesisfirehose/",!Ref ElasticsearchDomain,":log-stream:*"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "kinesis:DescribeStream"
                    - "kinesis:GetShardIterator"
                    - "kinesis:GetRecords"
                  Resource: !Join ["",["arn:aws:kinesis:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":stream/%FIREHOSE_STREAM_NAME%"]]
                -
                  Effect: "Allow"
                  Action: 
                    - "kms:Decrypt"
                  Resource: !Join ["",["arn:aws:kms:",!Ref 'AWS::Region',":",!Ref 'AWS::AccountId',":key/%SSE_KEY_ID%"]]
                  Condition:
                    StringEquals:
                      kms:ViaService: "kinesis.%REGION_NAME%.amazonaws.com"
                    StringLike:
                      kms:EncryptionContext:aws:kinesis:arn: !Join ["",["arn:aws:kinesis:%REGION_NAME%:",!Ref 'AWS::AccountId',":stream/%FIREHOSE_STREAM_NAME%"]]

    FirehoseLogGroup:
      Type: AWS::Logs::LogGroup
      Properties: 
        LogGroupName: !Join ["",["/aws/kinesisfirehose/",!Ref ElasticsearchDomain]]
        RetentionInDays: 7

    FirehoseLogStreamES:
      Type: AWS::Logs::LogStream
      DependsOn: FirehoseLogGroup
      Properties: 
        LogGroupName: !Join ["",["/aws/kinesisfirehose/",!Ref ElasticsearchDomain]]
        LogStreamName: ElasticsearchDeliveryLog

    FirehoseLogStreamS3:
      Type: AWS::Logs::LogStream
      DependsOn: FirehoseLogGroup
      Properties: 
        LogGroupName: !Join ["",["/aws/kinesisfirehose/",!Ref ElasticsearchDomain]]
        LogStreamName: S3DeliveryLog

    FirehoseDeliverystream:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamType: DirectPut
        ElasticsearchDestinationConfiguration:
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: !Join ["",["/aws/kinesisfirehose/",!Ref ElasticsearchDomain]]
            LogStreamName: ElasticsearchDeliveryLog
          BufferingHints: 
            IntervalInSeconds: 60
            SizeInMBs: 10
          DomainARN:
            Fn::GetAtt:
              - ElasticsearchDomain
              - DomainArn
          IndexName: logs
          IndexRotationPeriod: OneDay
          RetryOptions: 
            DurationInSeconds: 10
          RoleARN: !GetAtt FirehoseRole.Arn
          S3BackupMode: FailedDocumentsOnly
          S3Configuration: 
            BucketARN: 
              Fn::GetAtt:
                - S3Bucket
                - Arn
            BufferingHints: 
              IntervalInSeconds: 60
              SizeInMBs: 10
            CloudWatchLoggingOptions:
              Enabled: true
              LogGroupName: !Join ["",["/aws/kinesisfirehose/",!Ref ElasticsearchDomain]]
              LogStreamName: S3DeliveryLog
            CompressionFormat: ZIP
            ErrorOutputPrefix: String
            RoleARN: !GetAtt FirehoseRole.Arn
          TypeName: events

