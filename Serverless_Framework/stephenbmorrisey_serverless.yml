service: stephenbmorrisey

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${self:service}-emailsTable-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "arn:aws:ses:${opt:region, self:provider.region}:*:identity/*"


plugins:
- serverless-s3-deploy

custom:
  assets:
    targets:
      - bucket: www.stephenbmorrisey.com
        files:
          - source: client/build/
            globs: "**/*"

functions:
  signUp:
    handler: services/signUpService.signUp
    name: ${self:service}-signUp-${self:provider.stage}
    description: Add email to dynamoDB, ready for confirmation
    events:
      - http:
          method: post
          path: signUp
          cors: true
  confirm:
    handler: services/signUpService.confirm
    name: ${self:service}-confirm-${self:provider.stage}
    description: Confirm email address should be added to the mailing list
    events:
      - http:
          method: post
          path: confirm
          cors: true

package:
  exclude:
    - client/**

resources:
  Resources:
    emailsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1