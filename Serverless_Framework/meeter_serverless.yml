service: dynamodb-schedule

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, self:custom.defaultStage}
  profile: hugy
  role: ${self:custom.role}
  region: ap-northeast-1

# Custom Setting
custom:
  defaultStage: dev
  role: arn:aws:iam::335326279392:role/lambda_basic_execution
  dynamodb:
    provisioned-capacity-unit:
      read:
        default: 2
      write:
        default: 1
    auto-scaling:
      read:
        target-utilization: 75.0
        min: 2
        max: 1000
      write:
        target-utilization: 75.0
        min: 1
        max: 500



# Related AWS resources.
resources: # CloudFormation template syntax
  Resources:
    DynamoDBTableSchedule:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: schedule-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: organization_id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dynamodb.provisioned-capacity-unit.read.default}
          WriteCapacityUnits: ${self:custom.dynamodb.provisioned-capacity-unit.write.default}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        GlobalSecondaryIndexes:
          - IndexName: schedule-byorganization-${self:provider.stage}
            KeySchema:
              - AttributeName: organization_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: ${self:custom.dynamodb.provisioned-capacity-unit.read.default}
              WriteCapacityUnits: ${self:custom.dynamodb.provisioned-capacity-unit.write.default}

    # AutoScaling setting for Schedule.
    TableReadCapacityScalableSchedule:
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties:
        MaxCapacity: ${self:custom.dynamodb.auto-scaling.read.max}
        MinCapacity: ${self:custom.dynamodb.auto-scaling.read.min}
        ResourceId:
          Fn::Join:
            - /
            - - table
              - Ref: DynamoDBTableSchedule
        RoleARN: arn:aws:iam::335326279392:role/meeter_dynamo_auto_scaling # 事前作成済み
        ScalableDimension: dynamodb:table:ReadCapacityUnits
        ServiceNamespace: dynamodb
    TableReadCapacityScalingPolicySchedule:
      Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties:
        PolicyName: TableReadScalingPolicySchedule
        PolicyType: TargetTrackingScaling
        ScalingTargetId:
          Ref: TableReadCapacityScalableSchedule
        TargetTrackingScalingPolicyConfiguration:
          PredefinedMetricSpecification:
            PredefinedMetricType: DynamoDBReadCapacityUtilization
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          TargetValue: ${self:custom.dynamodb.auto-scaling.read.target-utilization}
    TableWriteCapacityScalableSchedule:
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties:
        MaxCapacity: ${self:custom.dynamodb.auto-scaling.write.max}
        MinCapacity: ${self:custom.dynamodb.auto-scaling.write.min}
        ResourceId:
          Fn::Join:
            - /
            - - table
              - Ref: DynamoDBTableSchedule
        RoleARN: arn:aws:iam::335326279392:role/meeter_dynamo_auto_scaling # 事前作成済み
        ScalableDimension: dynamodb:table:WriteCapacityUnits
        ServiceNamespace: dynamodb
    TableWriteCapacityScalingPolicySchedule:
      Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties:
        PolicyName: TableWriteScalingPolicySchedule
        PolicyType: TargetTrackingScaling
        ScalingTargetId:
          Ref: TableWriteCapacityScalableSchedule
        TargetTrackingScalingPolicyConfiguration:
          PredefinedMetricSpecification:
            PredefinedMetricType: DynamoDBWriteCapacityUtilization
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          TargetValue: ${self:custom.dynamodb.auto-scaling.write.target-utilization}
    GSIReadCapacityScalableSchedule:
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties:
        MaxCapacity: ${self:custom.dynamodb.auto-scaling.read.max}
        MinCapacity: ${self:custom.dynamodb.auto-scaling.read.min}
        ResourceId:
          Fn::Join:
            - /
            - - table
              - Ref: DynamoDBTableSchedule
              - index
              - schedule-byorganization-${self:provider.stage}
        RoleARN: arn:aws:iam::335326279392:role/meeter_dynamo_auto_scaling # 事前作成済み
        ScalableDimension: dynamodb:index:ReadCapacityUnits
        ServiceNamespace: dynamodb
    GSIReadCapacityScalingPolicySchedule:
      Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties:
        PolicyName: GSIReadScalingPolicySchedule
        PolicyType: TargetTrackingScaling
        ScalingTargetId:
          Ref: GSIReadCapacityScalableSchedule
        TargetTrackingScalingPolicyConfiguration:
          PredefinedMetricSpecification:
            PredefinedMetricType: DynamoDBReadCapacityUtilization
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          TargetValue: ${self:custom.dynamodb.auto-scaling.read.target-utilization}
    GSIWriteCapacityScalableSchedule:
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties:
        MaxCapacity: ${self:custom.dynamodb.auto-scaling.write.max}
        MinCapacity: ${self:custom.dynamodb.auto-scaling.write.min}
        ResourceId:
          Fn::Join:
            - /
            - - table
              - Ref: DynamoDBTableSchedule
              - index
              - schedule-byorganization-${self:provider.stage}
        RoleARN: arn:aws:iam::335326279392:role/meeter_dynamo_auto_scaling # 事前作成済み
        ScalableDimension: dynamodb:index:WriteCapacityUnits
        ServiceNamespace: dynamodb
    GSIWriteCapacityScalingPolicySchedule:
      Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties:
        PolicyName: GSIWriteScalingPolicySchedule
        PolicyType: TargetTrackingScaling
        ScalingTargetId:
          Ref: GSIWriteCapacityScalableSchedule
        TargetTrackingScalingPolicyConfiguration:
          PredefinedMetricSpecification:
            PredefinedMetricType: DynamoDBWriteCapacityUtilization
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          TargetValue: ${self:custom.dynamodb.auto-scaling.write.target-utilization}

  Outputs:
    DynamoDBStreamSchedule:
      Description: DynamoDB Stream ARN of Schedule.
      Value:
        Fn::GetAtt:
          - DynamoDBTableSchedule
          - StreamArn
      Export:
        Name: dynamodb-${self:provider.stage}-DynamoDBStreamSchedule
