service: ${env.SERVICE, 'xenon-pokemonsimulator-calculator'}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: './Webpack/config.server.js'
    includeModules: true
  serverless-offline:
    port: 3001

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt.stage, 'integration'}
  region: ${env.REGION, 'eu-west-2'}
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:*'
      Resource: '*'

package:
  individually: true

functions:
  # authApi:
  #   handler: ./Core/Server/src/handler/authentication/index.handler
  #   events:
  #     - http:
  #         method: GET
  #         path: /auth/is-logged-in
  #     - http:
  #         method: POST
  #         path: /auth/login
  #     - http:
  #         method: POST
  #         path: /auth/logout

  # calculateApi:
  #   handler: ./Core/Server/src/handler/calculate-damage/index.handler
  #   events:
  #     - http:
  #         method: GET
  #         path: /api/calculate-damage

  pokemonApi:
    handler: Core/Server/src/handler/pokemon/index.handler
    events:
      - http:
          method: GET
          path: /api/get-pokemon
      - http:
          method: GET
          path: /api/get-all-pokemon
      - http:
          method: POST
          path: /api/add-new-pokemon
      - http:
          method: POST
          path: /api/update-pokemon
      - http:
          method: POST
          path: /api/delete-pokemon

  # pokemonTeamApi:

  # pokemonTypeApi:

