service: sls-api
frameworkVersion: '2'

custom:
  settings:
    POSTS_TABLE: user-info

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${self:custom.settings}
  region: us-east-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createPost:
    handler: handler.createPost
    events:
    - http:
        path: /user
        method: post
  getAllPosts:
    handler: handler.getAllPosts
    events:
    - http:
        path: /users
        method: get
  getPost:
    handler: handler.getPost
    events:
    - http:
        path: /user/{username}
        method: get
  updatePost:
    handler: handler.updatePost
    events:
    - http:
        path: /user/{username}
        method: put
  deletePost:
    handler: handler.deletePost
    events:
    - http:
        path: /user/{username}
        method: delete

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "username"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "username"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}