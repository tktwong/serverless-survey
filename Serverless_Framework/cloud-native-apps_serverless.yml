service: cna-products

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  tableName: 'products-table-${self:provider.stage}'
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    PRODUCTS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getProduct:
    handler: index.handler
    events:
      - http: 'GET /products/{productId}'
  getProducts:
    handler: index.handler
    events:
      - http: 'GET /products'
  createProduct:
    handler: index.handler
    events:
      - http: 'POST /products'
  updateProduct:
    handler: index.handler
    events:
      - http: 'PUT /products/{productId}'
  deleteProduct:
    handler: index.handler
    events:
      - http: 'DELETE /products/{productId}'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          -
            AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

