service: ily-${self:custom.name}

custom:
  name: 'sahar'
  stage: ${opt:stage, self:provider.stage}
  apiGatewayThrottling:
    maxRequestsPerSecond: 5
    maxConcurrentRequests: 5

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    serviceName: ${self:service}
    stage: ${self:custom.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

functions:
  sendText:
    handler: functions/sendText.handler
    events:
      - http:
          path: /sendText
          method: post
    environment:
      reasons_table: !Ref ReasonsTable
      bus_name: !Ref EventBus
      service_name: ${self:service}
      stage: ${self:custom.stage}
      twilio_webhook_endpoint:
        Fn::Join:
          - ""
          - - https://
            - !Ref ApiGatewayRestApi
            - .execute-api.${self:provider.region}.amazonaws.com/${self:custom.stage}/sendText
    iamRoleStatements:
      - Effect: Allow
        Action: execute-api:Invoke
        Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:#{ApiGatewayRestApi}/${self:custom.stage}/POST/sendText
      - Effect: Allow
        Action:
          - dynamodb:Scan
          - dynamodb:UpdateItem
        Resource: !GetAtt ReasonsTable.Arn
      - Effect: Allow
        Action: events:PutEvents
        Resource: "*"
      - Effect: Allow
        Action: ssm:GetParameters*
        Resource:
          - arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${self:service}/${self:custom.stage}/twilioAuthToken

  resetReasons:
    handler: functions/resetReasons.handler
    events:
      - eventBridge:
          eventBus: arn:aws:events:#{AWS::Region}:#{AWS::AccountId}:event-bus/ily_events_${self:custom.stage}
          pattern:
            source:
              - 52_reasons_ily
            detail-type:
              - reset_reasons
    environment:
      reasons_table: !Ref ReasonsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt ReasonsTable.Arn
        

resources:
  Resources:
    ReasonsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    EventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ily_events_${self:custom.stage}

  Outputs:
    ReasonsTableName:
      Value: !Ref ReasonsTable
    EventBusName:
      Value: !Ref EventBus

plugins:
  - serverless-pseudo-parameters
  - serverless-export-env
  - serverless-api-gateway-throttling
  - serverless-iam-roles-per-function