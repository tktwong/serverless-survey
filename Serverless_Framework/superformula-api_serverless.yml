service: superformula-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["SeedTable", "Arn" ] }
  environment:
    SEED_TABLE: ${self:custom.tableName}
    EXPIRATION: ${env:EXPIRATION, 2}

functions:
  getSeed:
    handler: wsgi.handler
    events:
      - http: 'GET /seed'
  validateSeed:
    handler: wsgi.handler
    events:
      - http: 'POST /seed/validate'

custom:
  tableName: 'seed-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  serverless-offline:
    httpPort: 4000
  dynamodb:
    start:
      migrate: true
    stages:
      - dev

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

resources:
  Resources:
    SeedTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: seed
            AttributeType: S
        KeySchema:
          -
            AttributeName: seed
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}