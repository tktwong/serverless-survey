service: boilerx-back # NOTE: update this with your service name

plugins:
  - serverless-webpack
  - serverless-mocha-plugin

custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  role: arn:aws:iam::462630007467:role/boilerx-app-dev-us-east-1-lambdaRole

functions:
  insert_user:
    handler: app/user/create_user.main
    events:
      - http:
          path: user/create
          method: post
          cors: true
          authorizer: aws_iam

  get_items_popularity:
    handler: app/content/get_items_popularity.main
    events:
      - http:
          path: content/item_pop
          method: get
          cors: true
          authorizer: aws_iam

  get_items_price:
    handler: app/content/get_items_price.main
    events:
      - http:
          path: content/items_price
          method: get
          cors: true
          authorizer: aws_iam      

  get_items:
    handler: app/content/get_items.main
    events:
      - http:
          path: content/
          method: get
          cors: true
          authorizer: aws_iam 

  faulty_get_items:
    handler: app/content/faulty_get_items.main
    events:
      - http:
          path: content/f
          method: get
          cors: true
          authorizer: aws_iam 
  
  get_item_by_id:
    handler: app/content/get_item_by_id.main
    events:
      - http:
          path: content/{itemID}
          method: get
          cors: true
          authorizer: aws_iam 

  post_item:
    handler: app/content/post_item.main
    events:
      - http: 
          path: content/create
          method: post
          cors: true
          authorizer: aws_iam
        
  update_item:
    handler: app/content/update_item.main
    events:
      - http: 
          path: content/{itemID}
          method: put
          cors: true
          authorizer: aws_iam

  delete_item:
    handler: app/content/delete_item.main
    events:
      - http: 
          path: content/{itemID}
          method: delete
          cors: true
          authorizer: aws_iam

  update_profile:
    handler: app/user/update_profile.main
    events:
      - http: 
          path: user/profile
          method: put
          cors: true
          authorizer: aws_iam

  get_profile:
    handler: app/user/get_profile.main
    events:
      - http: 
          path: user/profile
          method: get
          cors: true
          authorizer: aws_iam

  update_popularity:
    handler: app/content/inc_pop.main
    events:
      - http: 
          path: content/{itemID}/pop
          method: put
          cors: true
          authorizer: aws_iam

  get_items_by_user:
    handler: app/user/get_items_by_owner.main
    events:
      - http:
          path: user/items
          method: get
          cors: true
          authorizer: aws_iam
  
  get_user_by_id:
    handler: app/user/get_user_by_id.main
    events:
      - http: 
          path: user/{userId}
          method: get
          cors: true
          authorizer: aws_iam
