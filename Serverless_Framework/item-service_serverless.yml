service: item-service

custom:
  itemTableName: 'item-table-${self:provider.stage}'

provider:
  name: aws
  runtime: java11
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  #configure timeout
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ItemsDynamoDBTable", "Arn" ] }
  environment:
    ITEM_TABLE_NAME: ${self:custom.itemTableName}

package:
  artifact: build/libs/${self:service}-${self:provider.stage}-all.jar

functions:
  getItem:
    handler: com.example.GetItemHandler
    events:
      - http:
          path: /items/{id}
          method: GET
  createItem:
    handler: com.example.CreateItemHandler
    events:
      - http:
          path: /items
          method: POST

resources:
  Resources:
    ItemsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.itemTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
#          - AttributeName: name
#            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
#          - AttributeName: name
#            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1