service: products
provider:
  name: aws
  endpointType: REGIONAL
  vpc:                                           
    securityGroupIds:
      - sg-0bfa4de0b5f56b80f
    subnetIds:
      - subnet-025a38c272c3930ea
      - subnet-0a4b3a9e252d54087     
  runtime: nodejs12.x
  region: us-east-2                                                                   # re-define AWS Region if needed instead of default "us-east-1"
  deploymentBucket: nbcu-nonprod-lambda-artifactory-8e630m03                          # define existing AWS S3 bucket if you don't want to create a new one
  role: arn:aws:iam::039631622975:role/serverless-lambda-deploy                       # define existing IAM role
#  apiGateway:
#    restApiId:
#      'Fn::ImportValue': MyApiGateway-restApiId
#    restApiRootResourceId:
#      'Fn::ImportValue': MyApiGateway-rootResourceId

functions:
#  sync:
#    handler: src/jobs/products.synchronize
  getProducts:
    handler: src/bff/product.get
    events:
      - http: GET /product
#    role: serverless-lambda-deploy

#resources:
#
#  Resources:
#
#    serverless-lambda-deploy:
#      Type: "AWS::IAM::Role"
#      Properties:
#        RoleName: serverless-lambda-deploy
#resources:
#  Resources:
#    MyApiGW:
#      Type: AWS::ApiGateway::RestApi
#      Properties:
#        Name: MyApiGW
#  Outputs:
#    apiGatewayRestApiId:
#      Value:
#        Ref: MyApiGW
#      Export:
#        Name: MyApiGateway-restApiId
#    apiGatewayRestApiRootResourceId:
#      Value:
#        Fn::GetAtt:
#          - MyApiGW
#          - RootResourceId
#      Export:
#        Name: MyApiGateway-rootResourceId