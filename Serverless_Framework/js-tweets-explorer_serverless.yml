org: shpionka
app: js-tweets-explorer
service: js-tweets-explorer

provider:
  name: aws
  runtime: nodejs12.x

functions:
  api:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    environment:
      DB_CONNECTION_STRING: ${param:dbConnectionString}
      JS_TWEETS_ES_HOSTNAME: ${param:jsTweetsEsHostname}
      JS_TWEETS_ES_USERNAME: ${param:jsTweetsEsUsername}
      JS_TWEETS_ES_PASSWORD: ${param:jsTweetsEsPassword}
      JS_TWEETS_TWEETER_CONSUMER_KEY: ${param:jsTweetsTweeterConsumerKey}
      JS_TWEETS_TWEETER_CONSUMER_SECRET: ${param:jsTweetsTweeterConsumerSecret}
      NODE_ENV: 'PROD'
  collector:
    handler: collector-entry-point.handler
    events:
      - schedule: rate(1 minute)
    environment:
      DB_CONNECTION_STRING: ${param:dbConnectionString}
      JS_TWEETS_ES_HOSTNAME: ${param:jsTweetsEsHostname}
      JS_TWEETS_ES_USERNAME: ${param:jsTweetsEsUsername}
      JS_TWEETS_ES_PASSWORD: ${param:jsTweetsEsPassword}
      JS_TWEETS_TWEETER_CONSUMER_KEY: ${param:jsTweetsTweeterConsumerKey}
      JS_TWEETS_TWEETER_CONSUMER_SECRET: ${param:jsTweetsTweeterConsumerSecret}
      NODE_ENV: 'PROD'
  esSync:
    handler: es-sync-entry-point.handler
    events:
      - schedule: rate(1 minute)
    environment:
      DB_CONNECTION_STRING: ${param:dbConnectionString}
      JS_TWEETS_ES_HOSTNAME: ${param:jsTweetsEsHostname}
      JS_TWEETS_ES_USERNAME: ${param:jsTweetsEsUsername}
      JS_TWEETS_ES_PASSWORD: ${param:jsTweetsEsPassword}
      NODE_ENV: 'PROD'

plugins:
  - serverless-offline
