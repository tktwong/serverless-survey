
service: komposer-email

provider:
  name: aws
  runtime: nodejs6.10
  # role: myDefaultRole

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

  iamRoleStatements:
      - Effect: "Allow"
        Resource: "*"
        Action:
          - "sns:*"
      - Effect: "Allow"
        Resource: "*"
        Action:
          - "ses:*"
          - "ses:SendEmail"


# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
#  include:
#    - lib/**
 exclude:
    - README.md
    - node_modules/**

functions:
  send:
    # handler: bucketlist.handler
    handler: handler.send
    events:
      - sns: komposer-test
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'

#    Define function environment variables here
#    environment:
#      variable2: value2

# resources:
#   Resources:
#     myDefaultRole:
#       Type: AWS::IAM::Role
#       Properties:
#         Path: /my/default/path
#         RoleName: MyDefaultRole
#         AssumeRolePolicyDocument:
#           Version: '2017'
#           Statement:
#             - Effect: Allow
#               Action: ses:*



#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
