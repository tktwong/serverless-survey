service:
  name: terraform-deptno-test

provider:
  name: aws
  profile: deptno
  stage: test
  region: ${opt:region, 'ap-northeast-2'}
  runtime: nodejs12.x
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:GetBucketLocation
        - s3:ListBucket
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
        - s3:AbortMultipartUpload
        - s3:CreateBucket
      Resource: "arn:aws:s3:::*"
  apiGateway:
    binaryMediaTypes:
      - '*/*'

package:
  individually: true
  exclude:
    - '.terraform/**'
    - 'node_modules/**'
    - 'next/**'

plugins:
  - serverless-jetpack

functions:
  html-to-png:
    description: "test: puppeteer, html -> png -> s3"
    handler: handler/html-to-png.handler
    timeout: 15
    memorySize: 1024
    environment:
      HOME: /opt/fonts
    layers:
      - arn:aws:lambda:ap-northeast-2:705189870797:layer:chrome:1
      - arn:aws:lambda:ap-northeast-2:705189870797:layer:font_noto_cjk_regular:1
      - arn:aws:lambda:ap-northeast-2:705189870797:layer:font_color_emoji:1
    events:
      - http:
          path: png
          method: post
          cors:
            origin: '*'
            maxAge: 86400
      - http:
          path: png
          method: get
          cors:
            origin: '*'
            maxAge: 86400

  serve-html:
    description: "test: next server for service dynamic html content"
    handler: server.handler
    package:
      artifact: next/.artifact/next.zip
    events:
      - http:
          path: /
          method: get
          cors:
            origin: '*'
            maxAge: 86400
      - http:
          path: /{proxy+}
          method: get
          cors:
            origin: '*'
            maxAge: 86400
