org: rickhenry
app: instrument-inventory-app
service: instrument-inventory

plugins:
  - serverless-pseudo-parameters
  - serverless-python-requirements
  - serverless-cf-vars
  - serverless-dynamodb-local
  - serverless-offline
custom:
  pythonRequirements:
    dockerizePip: true
    usePipenv: true
    slim: true
    slimPatterns:
      - "**/examples*"
      - "bin/*"
      - "**/pydantic/*.py"
      - "**/*.egg-info*"
      - "**/*.pyi"
  stage: ${opt:stage, self:provider.stage}
  tableNames:
    todos: ${self:custom.stage}-instrument-inventory-todos
    instruments: ${self:custom.stage}-instrument-inventory-instruments
    bows: ${self:custom.stage}-instrument-inventory-bows
    strings: ${self:custom.stage}-instrument-inventory-strings
    other: ${self:custom.stage}-instrument-inventory-other
  photosPermanentBucketName: ${self:custom.stage}-instrument-inventory-permanent-photos
  tableThroughputs:
    prod: 5
    default: 3
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  dynamodb:
    stages:
      - dev

package:
  exclude:
    - ./**
  include:
    - app/**

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  environment:
    TODOS_TABLE_NAME: ${self:custom.tableNames.todos}
    PHOTOS_BUCKET_NAME: ${self:custom.photosPermanentBucketName}
    INSTRUMENTS_TABLE_NAME: ${self:custom.tableNames.instruments}
    BOWS_TABLE_NAME: ${self:custom.tableNames.bows}
    STRINGS_TABLE_NAME: ${self:custom.tableNames.strings}
    OTHER_TABLE_NAME: ${self:custom.tableNames.other}
    VERSION: '19.8.1'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:PutItem
      Resource:
        - Fn::Sub: "#{TodosTable.Arn}"
        - Fn::Sub: "#{InstrumentsTable.Arn}"
        - Fn::Sub: "#{BowsTable.Arn}"
        - Fn::Sub: "#{StringsTable.Arn}"
        - Fn::Sub: "#{OtherTable.Arn}"
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - Fn::Sub: "#{PhotosPermanentBucket.Arn}"
        - Fn::Sub: "#{PhotosPermanentBucket.Arn}/*"

functions:
  create:
    handler: app/create.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: instruments
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: app/get.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: instruments/{id}
          method: get
          cors: true
          authorizer: aws_iam

  get-all:
    handler: app/get.all_
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: instruments/all
          method: get
          cors: true
          authorizer: aws_iam

  update-full:
    handler: app/update.full
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: instruments/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete:
    handler: app/delete.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: instruments/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  retrieve-single:
    handler: app/retrieve.single
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: retrieve-single
          method: post
          cors: true
          authorizer: aws_iam

  retrieve-multiple:
    handler: app/retrieve.multiple
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: retrieve-multiple
          method: post
          cors: true
          authorizer: aws_iam

  sign-out:
    handler: app/sign_out.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: sign-out
          method: post
          cors: true
          authorizer: aws_iam

  sign-out-multiple:
    handler: app/sign_out.multiple
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: sign-out/multiple
          method: post
          cors: true
          authorizer: aws_iam

  search-number:
    handler: app/search.number
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: search/number
          method: post
          cors: true
          authorizer: aws_iam

  search-assigned:
    handler: app/search.assigned
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
         path: search/assigned
         method: post
         cors: true
         authorizer: aws_iam

  search-history:
    handler: app/search.history
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: search/history
          method: post
          cors: true
          authorizer: aws_iam

  search-assigned-history:
    handler: app/search.history_and_assigned
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: search/assigned-history
          method: post
          cors: true
          authorizer: aws_iam

  schema:
    handler: app/schema.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: schema
          method: get
          cors: true
          authorizer: aws_iam

  autocomplete-options:
    handler: app/schema.ac_options
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: schema/ac-options
          method: get
          cors: true
          authorizer: aws_iam

  create-bow:
    handler: app/bows/create.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: bows
          method: post
          cors: true
          authorizer: aws_iam

  get-bows:
    handler: app/bows/get.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: bows
          method: get
          cors: true
          authorizer: aws_iam

  use-bows:
    handler: app/bows/update.use_bows
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: bows/use
          method: post
          cors: true
          authorizer: aws_iam

  add-bows:
    handler: app/bows/update.add_bows
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: bows/add
          method: post
          cors: true
          authorizer: aws_iam

  create-string:
    handler: app/strings/create.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: strings
          method: post
          cors: true
          authorizer: aws_iam

  get-strings:
    handler: app/strings/get.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: strings
          method: get
          cors: true
          authorizer: aws_iam

  use-strings:
    handler: app/strings/update.use_strings
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: strings/use
          method: post
          cors: true
          authorizer: aws_iam

  add-strings:
    handler: app/strings/update.add_strings
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: strings/add
          method: post
          cors: true
          authorizer: aws_iam

  create-other:
    handler: app/other/create.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/create
          method: post
          cors: true
          authorizer: aws_iam

  get-other:
    handler: app/other/get.main
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other
          method: get
          cors: true
          authorizer: aws_iam

  use-other:
    handler: app/other/update.use_items
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/use
          method: post
          cors: true
          authorizer: aws_iam

  add-other:
    handler: app/other/update.add_items
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/add
          method: post
          cors: true
          authorizer: aws_iam

  sign-out-other:
    handler: app/other/update.sign_out
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/sign_out
          method: post
          cors: true
          authorizer: aws_iam

  retrieve-other:
    handler: app/other/update.retrieve
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/retrieve
          method: post
          cors: true
          authorizer: aws_iam

  lose-other:
    handler: app/other/update.lose
    tags:
      CostCenter: 'Instrument Inventory'
    events:
      - http:
          path: other/lose
          method: post
          cors: true
          authorizer: aws_iam


resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/s3-bucket.yml)}
  - ${file(resources/dynamodb-table.yml)}
