service: book-service

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  environment:
    BOOKS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BOOKS_TABLE}"

functions:
  createBook:
    handler: handlers/index.create
    description: Add new book to library
    events:
      - http:
          path: book/add
          method: POST
  listBooks:
    handler: handlers/index.getAll
    description: Get all books from library
    events:
      - http:
          path: books
          method: GET
  detailsBook:
    handler: handlers/index.getOne
    description: Get specific book from library
    events:
      - http:
          path: book/{uuid}
          method: GET
  updateBook:
    handler: handlers/index.update
    description: Update book in library
    events:
      - http:
          path: book/{uuid}/update
          method: POST
  deleteBook:
    handler: handlers/index.deleteOne
    description: Delete book from library
    events:
      - http:
          path: book/{uuid}/delete
          method: POST

resources:
  Resources:
    BooksDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: uuid
            AttributeType: S
        KeySchema:
          -
            AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BOOKS_TABLE}
