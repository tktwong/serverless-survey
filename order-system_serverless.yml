service: order-system

frameworkVersion: ">=1.2.0 <2.0.0"

plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function  
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage} 
  logLevel:
    prod: WARN
    default: DEBUG  
  serverless-iam-roles-per-function:
    defaultInherit: true  
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

    
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  profile: petark
  environment:
    log_level: ${self:custom.logLevel.${self:custom.stage}, self:custom.logLevel.default}  
    STAGE: ${self:custom.stage}  

functions:
  place-order:
    handler: functions/place-order.handler
    memorySize: 128
    events:
      - http:
          path: /orders
          method: post  
          #authorizer:
          #  arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/${ssm:/order-system/${self:custom.stage}/cognito_user_pool_id}        
    environment:        
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events-${self:custom.stage} 
      - Effect: Allow
        Action: ssm:GetParameters*
        Resource: arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/order-system/${self:custom.stage}/*        

resources:
  Resources:
    orderEventsStream:
      Type: AWS::Kinesis::Stream
      Properties: 
        Name: ${ssm:/order-system/${self:custom.stage}/order_events_stream}
        ShardCount: 1      
