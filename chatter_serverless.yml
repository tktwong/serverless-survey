service: tudor-serverless
# app and org for use with dashboard.serverless.com
app: tudor
org: pfoucht

provider:
  name: aws
  runtime: nodejs12.x
  role: arn:aws:iam::358614248599:role/TudorServerlessRole
  stage: dev
  environment:
    MEETINGS_TABLE: Meetings--${self:service}-${self:provider.stage}
    USERS_TABLE: Users--${self:service}-${self:provider.stage}
    CONNECTIONS_TABLE: Connections--${self:service}-${self:provider.stage}
  websocketsApiRouteSelectionExpression: $request.body.action

functions:
  join:
    handler: handlers/chime/join.join
    events:
      - http:
          path: meeting/join
          method: post
          cors: true
  # leave:
  #   handler: handlers/chime/join.leave
  #   events:
  #     - http:
  #         path: meeting/leave
  #         method: post
  #         cors: true

  signup:
    handler: handlers/users/signup.handler
    events:
      - http:
          path: auth/signup
          method: post
          cors: true

  signin:
    handler: handlers/users/signin.handler
    events:
      - http:
          path: auth/signin
          method: post
          cors: true

  # Websocket

  connectionHandler:
    handler: handlers/websocket/connection.handler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $default
      - websocket:
          route: $disconnect

  whiteboardHandler:
    handler: handlers/websocket/whiteboard.handler
    events:
      - websocket:
          route: whiteboard

resources:
  Resources:
    # MEETINGS TABLE

    meetingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.MEETINGS_TABLE}
        AttributeDefinitions:
          - AttributeName: 'Title'
            AttributeType: 'S'
          - AttributeName: 'Passcode'
            AttributeType: 'S'
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: 'Title'
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: 'Passcode'
            KeySchema:
              - AttributeName: 'Passcode'
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TimeToLiveSpecification:
          AttributeName: 'TTL'
          Enabled: true

    # USERS TABLE

    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: 'ID'
            AttributeType: 'S'
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: 'ID'
            KeyType: HASH

    # CONNECTIONS TABLE

    connectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CONNECTIONS_TABLE}
        AttributeDefinitions:
          - AttributeName: 'ConnectionId'
            AttributeType: 'S'
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: 'ConnectionId'
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: 'TTL'
          Enabled: true

Outputs:
  MeetingsTableArn:
    Description: The ARN for the Meetings's Table
    Value:
      'Fn::GetAtt': [meetingsTable, Arn]
    Export:
      Name: ${self:provider.environment.MEETINGS_TABLE}
