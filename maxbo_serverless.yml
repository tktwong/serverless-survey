# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: maxbo 

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 512
  timeout: 30
  stage: dev

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    productsTableName: ${self:custom.productsTableName}
    customersTableName: ${self:custom.customersTableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ productsTable, Arn ]
        - "Fn::GetAtt": [ customersTable, Arn ]

package:
  individually: true 
  exclude:
    - ./**

functions:
  data2dynamo:
    handler: src/business/testing/data2dynamo.main
    package:
      include: # Specify the directories and files which should be included in the deployment package for this specific function.
        - src/business/testing/data2dynamo.js
        - src/business/testing/data.js
        - src/jsUtils/jsUtils.js

  #API:
  #Webhook
  apiWebhookPost: ${file(src/api/webhook/functions.yml):apiWebhookPost}
  apiWebhookGet: ${file(src/api/webhook/functions.yml):apiWebhookGet}
  #---------------------------------------------------------------------------------------------------------
  #Pages -> Products
  apiPagesProductsGetOne: ${file(src/api/pages/products/functions.yml):apiPagesProductsGetOne}
  #Pages -> Customers
  apiPagesCustomersGetOne: ${file(src/api/pages/customers/functions.yml):apiPagesCustomersGetOne}
  apiPagesCustomersPut: ${file(src/api/pages/customers/functions.yml):apiPagesCustomersPut}
  #Pages -> Customers -> Carts
  apiPagesCustomersCartsGet: ${file(src/api/pages/customers/carts/functions.yml):apiPagesCustomersCartsGet}  
  #---------------------------------------------------------------------------------------------------------

  
resources:
  #DynamoDB
  - ${file(resources/dynamodb-tables.yml)}

custom:
  stage: ${opt:stage, self:provider.stage}
  productsTableName:  ${self:service}-${self:custom.stage}-abvinosProducts
  customersTableName:  ${self:service}-${self:custom.stage}-abvinosCustomers
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}