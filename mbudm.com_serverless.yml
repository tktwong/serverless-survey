service: mbudm

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-s3-sync
  - serverless-s3-remover
  - serverless-cloudfront-invalidate

custom:
  s3Sync:
    - bucketName: ${self:provider.environment.BUCKET_NAME}
      localDir: public
  remover:
    buckets:
      - ${self:provider.environment.BUCKET_NAME}
  cloudfrontInvalidate:
    distributionIdKey: 'MbudmCloudFrontDistributionId'
    items:
      - '/*'
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  environment:
    CUSTOM_DOMAIN: steve.sosnowski-roberts.com
    BUCKET_NAME: mbudm
    HOSTED_ZONE_NAME: sosnowski-roberts.com.
    ACM_CERT_ARN: arn:aws:acm:us-east-1:366399188066:certificate/e0ac4f7d-cd06-4d98-8b7b-3d17e3f9c346
resources:
  Resources:
    Mbudm:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        AccessControl: PublicRead
        WebsiteConfiguration:
           IndexDocument: index.html
           ErrorDocument: error.html
    MbudmS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Mbudm
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "Mbudm"
                    },
                    "/*"
                  ]
                ]
    MbudmCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:provider.environment.CUSTOM_DOMAIN}
          Origins:
            - DomainName: ${self:provider.environment.BUCKET_NAME}.s3-website-us-east-1.amazonaws.com
              Id: Mbudm
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: http-only
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /error.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: Mbudm
            Compress: 'true'
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: ${self:provider.environment.ACM_CERT_ARN}
            SslSupportMethod: sni-only
    DnsRecord:
      Type: "AWS::Route53::RecordSet"
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [ MbudmCloudFrontDistribution, DomainName ]
          HostedZoneId: 'Z2FDTNDATAQYW2' # cloudfront specific
        HostedZoneName: ${self:provider.environment.HOSTED_ZONE_NAME}
        Name: ${self:provider.environment.CUSTOM_DOMAIN}.
        Type: 'A'
  Outputs:
    MbudmCloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [ MbudmCloudFrontDistribution, DomainName ]
    MbudmCloudFrontDistributionId:
      Description: MbudmCloudFrontDistribution distribution id.
      Value:
        Ref: MbudmCloudFrontDistribution
