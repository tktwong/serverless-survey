service:
  name: serveless-decode-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-offline
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'ap-southeast-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 1024
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  apiKeys:
    - decodeApiKey-${opt:stage, 'dev'}

custom:
  # Prune Plugin - automatically remove previous version of this service.
  prune:
    automatic: true
    number: 3
  pseudoParameters:
    allowReferences: false
  corsValue:
    origin: '*'
    headers:
      - Content-Type
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - X-Amz-User-Agent
      - Access-Control-Allow-Headers
      - Access-Control-Allow-Origin
      - x-app-token
      - x-user-token
    allowCredentials: true
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  hello:
    handler: handler.decode
    events:
      - http:
          method: post
          path: decode/text
          cors: ${self:custom.corsValue}
          private: true
