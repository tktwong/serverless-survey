service: worthawatch-import
app: worthawatch-import
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  timeout: 120
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    ENV: ${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameterHistory"
        - "ssm:GetParametersByPath"
        - "ssm:GetParameters"
        - "ssm:GetParameter"
      Resource: "arn:aws:ssm:us-east-1:*:parameter/*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "arn:aws:ses:us-east-1:*:identity/*"

resources:
  Resources:
    WorthAWatchDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          -
            AttributeName: date
            AttributeType: S
        KeySchema:
          -
            AttributeName: date
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES


functions:
  import:
    handler: handler.import
    events:
      - schedule: cron(0 0-7,20-23 * * ? *) # run daily, every hour, from 8pm until 7am
  token:
    handler: handler.token
    events:
      - schedule: cron(0 8 * * ? *) # run daily at 8am

package:
  exclude:
    - test/**
