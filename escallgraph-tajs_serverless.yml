frameworkVersion: '>=1.0.0 <2.0.0'

service: helloRetail-product-catalog-api

provider:
  name: aws
  deploymentBucket: helloRetailBucket
  runtime: nodejs8.10
  profile: DEFAULT_PROFILE
  region: us-east-1

functions:
  categories:
    role:
      Fn::GetAtt: [ ProductCatalogApiCategoriesReader, Arn ]
    handler: catalogApi.categories
    environment:
      TABLE_PRODUCT_CATEGORY_NAME:  PRODUCT_CATEGORY_TABLE
    events:
      - http:
          path: categories
          method: get
          cors: true
  products:
    role:
      Fn::GetAtt: [ ProductCatalogApiProductsReader, Arn ]
    handler: catalogApi.products
    environment:
      TABLE_PRODUCT_CATALOG_NAME:  PRODUCT_TABLE
    events:
      - http:
          path: products
          method: get
          cors: true

resources:
  Resources:
    # Log Group
    CategoriesLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-dev-categories
        RetentionInDays: 7
    ProductsLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-dev-products
        RetentionInDays: 7
    # Product Catalog Roles
    ProductCatalogApiCategoriesReader: # role for Categories Lambda
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devProductCatalogApiCategoriesReader_v1
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - DEFAULT_TEAM_POLICY
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:CreateLogStream'
                  Resource:
                    Fn::GetAtt: [ CategoriesLogGroup, Arn ]
                - Effect: Allow
                  Action:
                    - 'logs:PutLogEvents'
                  Resource:
                    Fn::Join:
                      - ':'
                      - - Fn::GetAtt: [ CategoriesLogGroup, Arn ]
                        - '*'
          - PolicyName: ReadFromCategories
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'dynamodb:Scan'
                   Resource:
                    Fn::ImportValue: PRODUCT_CATEGORY_TABLE
    ProductCatalogApiProductsReader: # role for Products Lambda
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devProductCatalogApiProductsReader_v1
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - DEFAULT_TEAM_POLICY
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:CreateLogStream'
                  Resource:
                    Fn::GetAtt: [ ProductsLogGroup, Arn ]
                - Effect: Allow
                  Action:
                    - 'logs:PutLogEvents'
                  Resource:
                    Fn::Join:
                      - ':'
                      - - Fn::GetAtt: [ ProductsLogGroup, Arn ]
                        - '*'
          - PolicyName: ReadFromProducts
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
# TODO enable once we are getting single items.
#                -  Effect: Allow
#                   Action:
#                     - 'dynamodb:GetItem'
#                   Resource:
#                    Fn::ImportValue: ${self:custom.productCatalogBuilder.custom.exportProductCatalogTableArn}
                -  Effect: Allow
                   Action:
                     - 'dynamodb:Query'
                   Resource:
                    Fn::ImportValue: PRODUCT_CATALOG_TABLE_INDEX
