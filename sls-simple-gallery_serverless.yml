service: gallery
frameworkVersion: '2'

plugins:
  - serverless-reqvalidator-plugin

 #############################################################
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}

  environment:
    GALLERY_TABLE: gallery-${self:provider.stage}
    MEDIA_TABLE: media-${self:provider.stage}
    MEDIA_S3_BUCKET: gallery-${self:provider.stage}-866937819247
    SIGNED_URL_AGE: 300

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: 
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GALLERY_TABLE}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.MEDIA_TABLE}
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: 'arn:aws:s3:::${self:provider.environment.MEDIA_S3_BUCKET}/*'

#############################################################################
functions:
  auth: 
    handler: src/lambda/auth/auth.handler

  getGallery: 
    handler: src/lambda/http/getGallery.handler
    events:
      - http:
          method: get
          path: gallery
          cors: true

  createGallery: 
    handler: src/lambda/http/createGallery.handler
    events:
      - http:
          method: post
          path: gallery
          cors: true
          authorizer: auth
          reqValidatorName: RequestValidator
          request:
            schema:
              application/json: ${file(models/create-gallery-request.json)}

##########################################################
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Header: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    RequestValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: 'request-body-validator'
        RestApiId: 
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false

    GalleryDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.GALLERY_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    MediaDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.MEDIA_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    
    galleryBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.MEDIA_S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - POST
                - DELETE
                - PUT
                - HEAD
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              MaxAge: ${self:provider.environment.SIGNED_URL_AGE}

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref galleryBucket
        PolicyDocument:
            Id: galleryBucketPolicy
            Statement:
              - Sid: PublicReadForGetBucketObjects
                Effect: Allow
                Principal: '*'
                Action: 's3:GetObject'
                Resource: 'arn:aws:s3:::${self:provider.environment.MEDIA_S3_BUCKET}/*'