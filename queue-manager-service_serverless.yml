service: "qms-${env:ENV}"

provider:
  name:               aws
  runtime:            python3.6
  region:             ${env:AWS_DEFAULT_REGION, 'us-west-2'}
  stage:              ${opt:stage}
  logRetentionInDays: 7
  memorySize:         128
  timeout:            2

  environment:
    ALLOW_CIDR:       ${env:ALLOW_CIDR, 'x.x.x.x'}
    REDIS_IP:         ${env:REDIS_IP, 'r.e.d.i.s'}
    REDIS_HOST:       ${env:REDIS_HOST, 'redis.url'}
    REDIS_PORT:       ${env:REDIS_PORT, '6379'}
    REDIS_QUERY_KEY:  ${env:REDIS_QUERY_KEY, 'group:foo:key'}
    REDIS_QUERY_USER: ${env:REDIS_QUERY_USER, 'group:bar:user'}

  vpc:
    securityGroupIds:
      - { Ref: lambdaVpcSecurityGroup }
    subnetIds: { Fn::Split: [ "\t" , "${env:VPC_SUBNETS}" ] }

package:
  include:
    - node_modules/*
    - src/*.py
  exclude:
    - ./**

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    pythonBin: ./venv/bin/python3
    fileName: requirements/prod.txt

functions:
  list:
    handler: src/list.list
    events:
      - http:
          path:   qms/list
          method: get
          cors:   yes

resources:
  Resources:
    lambdaVpcSecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        GroupName:        "${self:service}-${opt:stage}-vpc-sg"
        GroupDescription: 'allow lambda function to access vpc'
        VpcId:            "${env:VPC_ID}"
        SecurityGroupIngress:
          - IpProtocol: tcp
            CidrIp:     0.0.0.0/0
            FromPort:   "${self:provider.environment.REDIS_PORT}"
            ToPort:     "${self:provider.environment.REDIS_PORT}"
    lambdaVpcRole:
      Type: 'AWS::IAM::Role'
      Properties:
        Path:     /
        RoleName: "${self:service}-${opt:stage}-lambda-vpc"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
              Effect: Allow
              Action: 'sts:AssumeRole'
              Principal:
                Service:
                  - lambda.amazonaws.com
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
