service:
  name: decompte

plugins:
  - serverless-webpack
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: decompte-admin-site
      localDir: '../decompte-admin/build'
      acl: public-read # optional
      followSymlinks: true # optional
      defaultContentType: text/html # optional
      params: # optional
        - index.html:
            CacheControl: 'no-cache'
        - "*.js":
            CacheControl: 'public, max-age=31536000'

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  timeout: 20
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:UpdateTable
      Resource:
        - { "Fn::GetAtt": ["CodesTable", "Arn" ] }
        - { "Fn::GetAtt": ["UsersTable", "Arn" ] }
        - { "Fn::GetAtt": ["ScoresTable", "Arn" ] }

functions:
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: user
          method: POST
          cors: true
  getUsers:
    handler: handler.getUsers
    events:
      - http:
          path: users
          method: GET
          cors: true
  addScores:
    handler: handler.addScores
    events:
      - http:
          path: add
          method: POST
          cors: true

  exportCSV:
    handler: handler.exportCSV
    events:
      - http:
          path: csv/{minDate}/{maxDate}/scores.csv
          method: GET
          cors: true
          request:
            parameters:
              paths:
                minDate: true
                maxDate: true


resources:
  Resources:
    AdminSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: decompte-admin-site
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    CodesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: codes
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: pseudo
            AttributeType: S
        KeySchema:
          - AttributeName: pseudo
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    ScoresTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: scores
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5