service: securitybot

frameworkVersion: ">=1.26.1 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-east-2"}
  timeout: 120
  logRetentionInDays: 7
  deploymentBucket:
    serverSideEncryption: AES256
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "iam:GenerateCredentialReport"
        - "iam:GetCredentialReport"
        - "iam:ListUsers"
        - "iam:ListAccessKeys"
        - "iam:ListMFADevices"
        - "iam:GetLoginProfile"
        - "s3:ListAllMyBuckets"
        - "s3:GetBucketAcl"
      Resource: 
        - "*"

# you can define service wide environment variables here
  environment:
    IAM_KEYS: ${ssm:/SECBOT_IAM_KEYS}
    IAM_KEYS_CHANNEL: ${ssm:/SECBOT_IAM_KEYS_CHANNEL}
    IAM_KEYS_EXPIRE_AGE: ${ssm:/SECBOT_IAM_KEYS_EXPIRE_AGE}
    IAM_KEYS_NAG_USERS: ${ssm:/SECBOT_IAM_KEYS_NAG_USERS}
    IAM_KEYS_WARN_AGE: ${ssm:/SECBOT_IAM_KEYS_WARN_AGE}
    MFA: ${ssm:/SECBOT_MFA}
    MFA_CHANNEL: ${ssm:/SECBOT_MFA_CHANNEL}
    MFA_NAG_USERS: ${ssm:/SECBOT_MFA_NAG_USERS}
    PUBLIC_S3: ${ssm:/SECBOT_PUBLIC_S3}
    PUBLIC_S3_CHANNEL: ${ssm:/SECBOT_PUBLIC_S3_CHANNEL}
    SLACK_TOKEN: ${ssm:/SECBOT_SLACK_TOKEN~true}
    VERBOSE: ${ssm:/SECBOT_VERBOSE}

functions:
  securitybot:
    handler: aws-security-bot.main
    events:
      - schedule: 
          rate: cron(55 10 ? * MON-FRI *)

plugins:
  - serverless-python-requirements
