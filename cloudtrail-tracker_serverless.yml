service: cloudtrailTracker

provider: 
  name: aws
  stage: dev
  region: us-east-1 
  memorySize: 256
  deploymentBucket:
    name: cursocloudaws-trail
  role: arn:aws:iam::111111111111:role/your-iam-role

  plugins:
   - serverless-python-requirements

package: # Optional deployment packaging configuration
    include: # Specify the directories and files which should be included in the deployment package
      - dynamodb/Logs.py

functions: 
  EventUploads:
    handler: lambda/eventuploads/Upload.handler
    name: ctt-upload-test
    description: CloudTrail-Tracker (Event Uploads)
    runtime: python3.6
    memorySize: 128
    timeout: 30
    reservedConcurrency: 5

  Query:
    handler: lambda/query/getQuery.handler
    name: ctt-query-test
    description: cloudTrail-Tracker results
    runtime: python3.6
    memorySize: 512
    timeout: 30
    reservedConcurrency: 5
    events:
      - http:
          path: scan/
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              querystrings:
                count: false
                eventName: false
                from: false
                to: false
                param: false
                value: false
            template:
              application/json: '{ "scan" : "scan",
                                   "count" : "$input.params(''count'')",
                                   "eventName" : "$input.params(''eventName'')",
                                   "from" : "$input.params(''from'')",
                                   "to" : "$input.params(''to'')",
                                   "param" : "$input.params(''param'')",
                                   "value" : "$input.params(''value'')"}'
      - http:
          path: users
          method: get
          cors: true
          integration: lambda
          request:
            template:
              application/json: '{ "list_users" : "list_users" }'

      - http:
          path: users/{user}
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              querystrings:
                count: false
                eventName: false
                from: false
                to: false
                param: false
                value: false
            template:
              application/json: '{ "user" : "$input.params(''user'')",
                                   "count" : "$input.params(''count'')",
                                   "eventName" : "$input.params(''eventName'')",
                                   "from" : "$input.params(''from'')",
                                   "to" : "$input.params(''to'')",
                                   "param" : "$input.params(''param'')",
                                   "value" : "$input.params(''value'')"}'
      - http:
          path: services
          method: get
          cors: true
          integration: lambda
          request:
            template:
              application/json: '{ "services_list" : "services_list" }'
      - http:
          path: parameters
          method: get
          cors: true
          integration: lambda
          request:
            template:
              application/json: '{ "parameters_list" : "parameters_list" }'
      - http:
          path: services/{service}
          method: get
          cors: true
          integration: lambda
          request:
            parameters:
              querystrings:
                count: false
                eventName: false
                from: false
                to: false
                param: false
                value: false
            template:
              application/json: '{ "service" : "$input.params(''service'')",
                                   "count" : "$input.params(''count'')",
                                   "eventName" : "$input.params(''eventName'')",
                                   "from" : "$input.params(''from'')",
                                   "to" : "$input.params(''to'')",
                                   "param" : "$input.params(''param'')",
                                   "value" : "$input.params(''value'')"}'