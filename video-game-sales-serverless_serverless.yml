service: video-game-sales
app: video-game-sales
org: sreiter

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  stage: dev
  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${self:provider.environment.accountId}:table/${self:provider.environment.DYNAMO_TABLE}"

  environment:
    accountId: "#{AWS::AccountId}"
    BUCKET_NAME: ${env:BUCKET_NAME}

functions:
  aggregate_data:
    handler: aggregate_data.aggregate_data_by_console
  upload_games:
    handler: move_sales_data.move_data_to_dynamo
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: processed/
            - suffix: .json
          existing: true
  get_all_games:
    handler: crud_scripts/retrieve_games.retrieve_all_games
    events:
      - http:
          path: games_sales
          method: get
          cors: true
  get_console_games:
    handler: crud_scripts/retrieve_console_games.retrieve_console_games
    events:
      - http:
          path: games_sales/{platform}
          method: get
          cors: true
resources:
  Resources:
    NewResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
    VideoGamesDynamoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
          - AttributeName: platform
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
          - AttributeName: platform
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        GlobalSecondaryIndexes:
          - IndexName: consoleGSI
            KeySchema:
              - AttributeName: _id
                KeyType: HASH
              - AttributeName: platform
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: "5"
              WriteCapacityUnits: "5"
        TableName: "VideoGames"

plugins:
  - serverless-pseudo-parameters
  - serverless-s3-sync
  - serverless-dotenv-plugin
  - ./custom_plugin

custom:
  stage: ${opt:stage, self:provider.stage}
  s3Sync:
    - bucketName: ${self:provider.environment.BUCKET_NAME}
      localDir: data
