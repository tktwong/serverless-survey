service: task-list-api
provider:
  name: aws
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ssm:GetParametersByPath'
      Resource:
        - 'arn:aws:ssm:eu-west-1:271413084678:parameter/todo/*'
plugins:
  - serverless-offline
functions:
  ping:
    handler: dist/controllers/health-check-controller.ping
    events:
      - http:
          path: ping
          method: get

  # Task
  createTask:
    handler: dist/controllers/task-controller.createTask
    events:
      - http:
          path: task
          method: post
          cors: true

  deleteTask:
    handler: dist/controllers/task-controller.deleteTask
    events:
      - http:
          path: task/{id}
          method: delete
          cors: true

  getTask:
    handler: dist/controllers/task-controller.getTask
    events:
      - http:
          path: task/{id}
          method: get
          cors: true

  getAllTasks:
    handler: dist/controllers/task-controller.getAllTasks
    events:
      - http:
          path: task
          method: get
          cors: true

  updateTask:
    handler: dist/controllers/task-controller.updateTask
    events:
      - http:
          path: task/{id}
          method: put
          cors: true

  #User
  createUser:
    handler: dist/controllers/user-controller.createUser
    events:
      - http:
          path: user
          method: post
          cors: true

  deleteUser:
    handler: dist/controllers/user-controller.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  getUser:
    handler: dist/controllers/user-controller.getUser
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  getAllUsers:
    handler: dist/controllers/user-controller.getAllUsers
    events:
      - http:
          path: user
          method: get
          cors: true

  updateUser:
    handler: dist/controllers/user-controller.updateUser
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  #User-Task
  createUserTask:
    handler: dist/controllers/user-task-controller.createUserTask
    events:
      - http:
          path: user-task
          method: post
          cors: true

  deleteUserTask:
    handler: dist/controllers/user-task-controller.deleteUserTask
    events:
      - http:
          path: user-task/{id}
          method: delete
          cors: true

  getUserTask:
    handler: dist/controllers/user-task-controller.getUserTask
    events:
      - http:
          path: user-task/{id}
          method: get
          cors: true

  getAllUsersTask:
    handler: dist/controllers/user-task-controller.getAllUsersTask
    events:
      - http:
          path: user-task
          method: get
          cors: true

  updateUserTask:
    handler: dist/controllers/user-task-controller.updateUserTask
    events:
      - http:
          path: user-task/{id}
          method: put
          cors: true
          
  getUserTasksByUserId:
    handler: dist/controllers/user-task-controller.getUserTasksByUserId
    events:
      - http:
          path: user-task/user/{userId}
          method: get
          cors: true

  getUserTasksByTaskId:
    handler: dist/controllers/user-task-controller.getUserTasksByTaskId
    events:
      - http:
          path: user-task/task/{taskId}
          method: get
          cors: true

  getUserTasksByWeekday:
    handler: dist/controllers/user-task-controller.getUserTasksByWeekday
    events:
      - http:
          path: user-task/weekday/{weekday}
          method: get
          cors: true

  #User-Task-Log
  createUserTaskLog:
    handler: dist/controllers/user-task-log-controller.createUserTaskLog
    events:
      - http:
          path: user-task-log
          method: post
          cors: true

  deleteUserTaskLog:
    handler: dist/controllers/user-task-log-controller.deleteUserTaskLog
    events:
      - http:
          path: user-task-log/{id}
          method: delete
          cors: true

  getUserTaskLog:
    handler: dist/controllers/user-task-log-controller.getUserTaskLog
    events:
      - http:
          path: user-task-log/{id}
          method: get
          cors: true

  getAllUsersTaskLog:
    handler: dist/controllers/user-task-log-controller.getAllUsersTaskLog
    events:
      - http:
          path: user-task-log
          method: get
          cors: true

  updateUserTaskLog:
    handler: dist/controllers/user-task-log-controller.updateUserTaskLog
    events:
      - http:
          path: user-task-log/{id}
          method: put
          cors: true
          
  getUserTaskLogsByUserTaskId:
    handler: dist/controllers/user-task-log-controller.getUserTaskLogsByUserTaskId
    events:
      - http:
          path: user-task-log/task/{id}
          method: get
          cors: true
          
  getUserTaskLogsByUserTaskIdAndDate:
    handler: dist/controllers/user-task-log-controller.getUserTaskLogsByUserTaskIdAndDate
    events:
      - http:
          path: user-task-log/{id}/{date}
          method: get
          cors: true

