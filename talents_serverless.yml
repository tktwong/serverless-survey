service: talents
# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom: ${file(../../serverless.common.yml):custom}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  tracing:
    apiGateway: true
    lambda: true

  environment:
    stage: ${self:custom.stage}
    tableName: candidates

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

useDotenv: true
cors:
  origin: '*'
  headers:
    - Content-Type
    - X-Amz-Date
    - Authorization
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  allowCredentials: false

functions:
  create:
    handler: create.main
    events:
      - http:
          path: candidates
          method: post
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: candidates/{id}
          method: get
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: candidates
          method: get
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: candidates/{id}
          method: put
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          path: candidates/{id}
          method: delete
          authorizer: aws_iam
