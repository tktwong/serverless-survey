service: bus-backend-app

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage}
  region: ap-southeast-1
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        - 'Fn::Join':
          - ':'
          - - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'parameter/bus/*'

functions:
  get_buses:
    handler: buses.get
    memorySize: 128
    events:
      - http:
          path: api/buses
          method: get
  get_busstops:
    handler: busstops.get
    memorySize: 128
    events:
      - http:
          path: api/bus-stops
          method: get
  get_arrival:
    handler: arrival.get
    memorySize: 128
    events:
      - http:
          path: api/arrival/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

plugins:
  - serverless-offline-scheduler
  - serverless-offline
  - serverless-python-requirements
  - serverless-ssm-publish

custom:
  ssmPublish:
    enabled: true
    params:
      - path: ${self:custom.apiGatewayKeyPath.${opt:stage}}
        source: ServiceEndpoint
        description: API Gateway endpoint url
        secure: true
  apiGatewayKeyPath:
    dev: /bus-backend-app/dev/apiGateway/endpoint
    staging: /bus-backend-app/staging/apiGateway/endpoint
    prod: /bus-backend-app/prod/apiGateway/endpoint
