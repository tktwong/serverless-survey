service: serverless-keyvalue

frameworkVersion: ">=1.25.0"

plugins:
  - serverless-domain-manager
  - serverless-dynamodb-autoscaling

custom:
  tableName: "keyvalues"
  customDomain:
    domainName: keyvalue.serverlessteam.com
    endpointType: 'regional'
    certificateRegion: ${opt:region}
    createRoute53Record: false
  capacities:
    - table: KeyValuesDynamoDBTable
      read:
        minimum: 5
        maximum: 50
        usage: 0.8  # 4 out of 5
      write:
        minimum: 10
        maximum: 100
        usage: 0.5  # 5 out of 10

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: ${opt:region}
  endpointType: regional
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        "Fn::GetAtt":
            - KeyValuesDynamoDBTable
            - Arn
  environment:
    KEY_TABLE:
      Ref: KeyValuesDynamoDBTable

functions:
  getKey:
    handler: handlers/get_key.main
    events:
      - http:
          path: /{key}
          method: get
          cors: true
  setKey:
    handler: handlers/set_key.main
    events:
      - http:
          path: /{key}
          method: post
          cors: true

resources:
  Resources:
    KeyValuesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          -
            AttributeName: key
            AttributeType: S
        KeySchema:
          -
            AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
