service: coffee-app-server

plugins:
  - serverless-pseudo-parameters

custom:
  tables:
    coffeeItems: '${self:service}-${self:provider.stage}-table-coffee-items'
    coffeeTypes: '${self:service}-${self:provider.stage}-table-coffee-types'
    coffeeSizes: '${self:service}-${self:provider.stage}-table-coffee-sizes'
    coffeeLocations: '${self:service}-${self:provider.stage}-table-coffee-locations'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - states:StartExecution
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["CoffeeItemsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["CoffeeTypesDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["CoffeeSizesDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["CoffeeLocationsDynamoDBTable", "Arn" ] }
        
  environment:
    TABLE_COFFEEITEMS: ${self:custom.tables.coffeeItems}
    TABLE_COFFEETYPES: ${self:custom.tables.coffeeTypes}
    TABLE_COFFEESIZES: ${self:custom.tables.coffeeSizes}
    TABLE_COFFEELOCATIONS: ${self:custom.tables.coffeeLocations}
  
functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    CoffeeItemsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        # BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.tables.coffeeItems}
    CoffeeTypesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        # BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.tables.coffeeTypes}
    CoffeeSizesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        # BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.tables.coffeeSizes}
    CoffeeLocationsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        # BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.tables.coffeeLocations}
      
