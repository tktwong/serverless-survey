# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: wykop-sl

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7

# you can overwrite defaults here
  stage: dev
  region: eu-west-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:*:*:table/RequestsTable

    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
      Resource: arn:aws:dynamodb:*:*:table/CategoriesQueryTable

    - Effect: "Allow"
      Action:
        - kinesis:PutRecord
      Resource: arn:aws:kinesis:*:*:stream/testx

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - http: POST wykop/crawler
  get_categories:
    handler: handler.get_all_categories_handler
    events:
      - http: GET wykop/categories
  categories:
    handler: handler.categories_tree_handler
    events:
      - stream:
          arn: arn:aws:kinesis:eu-west-1:039898779445:stream/testx
          batchSize: 1
          startingPosition: LATEST
          enabled: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
  # ----------------------------------
    RequestsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "PageId"
            AttributeType: "S"

        KeySchema:
          -
            AttributeName: "PageId"
            KeyType: "HASH"

        ProvisionedThroughput:

          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

        TableName: "RequestsTable"

  # ----------------------------------
    CategoriesQueryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "category_name"
            AttributeType: "S"

        KeySchema:
          -
            AttributeName: "category_name"
            KeyType: "HASH"

        ProvisionedThroughput:

          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"

        TableName: "CategoriesQueryTable"

  # ----------------------------------
    CategoriesStream:
      Type: "AWS::Kinesis::Stream"
      Properties:
        Name: "CategoriesTreeQueryStream"
        ShardCount: 1

