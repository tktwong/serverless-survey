# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ddb-streams-es # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: dev
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:ListStreams
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
      Resource:
        - "arn:aws:dynamodb:eu-west-1:468923470896:table/UsersTable"
    - Effect: Allow
      Action:
        - es:ESHttpGet
        - es:ESHttpPost
        - es:ESHttpPut
        - es:ESHttpDelete
      Resource:
        - "arn:aws:es:eu-west-1:468923470896:domain/ddb-streams-es/*"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE

functions:
  PutItem:
    handler: handler.PutItem
    events:
      - http:
          path: users
          method: post
          cors: true
  DeleteItem:
    handler: handler.DeleteItem
    events:
      - http:
          path: users/{userId}
          method: delete
          cors: true
  UpdateItem:
    handler: handler.UpdateItem
    events:
      - http:
          path: users/{userId}
          method: put
          cors: true
  Scan:
    handler: handler.Scan
    events:
      - http:
          path: users
          method: get
          cors: true
  triggerStream:
    handler: handler.triggerStream
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - UsersTable
              - StreamArn
  Search:
    handler: handler.Search
    events:
      - http:
          path: search
          method: get
          cors: true
  # PingEs:
  #   handler: handler.PingEs


# aws es create-elasticsearch-domain --domain-name ddb-streams-es --elasticsearch-version 6.2 --elasticsearch-cluster-config InstanceType=t2.small.elasticsearch,InstanceCount=1 --ebs-options EBSEnabled=true,VolumeType=standard,VolumeSize=10


