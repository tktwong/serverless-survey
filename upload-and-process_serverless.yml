service: aws-node-singned-uploads

plugins:
  - serverless-webpack
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'yarn'
  serverless-offline:
    port: 4000

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, file(config.json):stage, 'dev'}
  region: ${opt:region, file(config.json):region, 'ap-southeast-2'}
  profile: ${opt:profile, file(config.json):profile, 'ben'}
  bucket_name: ${opt:bucket_name, file(config.json):bucket_name, 'fishar-uploads'}
  environment:
    REGION: ${self:provider.region}
    # Bucket to which signed uploads will be possible.
    BUCKET: ${self:provider.bucket_name}-${self:provider.stage}
  versionFunctions: false
  iamRoleStatements:
  -  Effect: "Allow"
     Action:
       - "s3:*"
     Resource: "*"

functions:
  upsert-objects:
    handler: src/upload.handler
    name: ${self:provider.stage}-${self:service}-upload
    memorySize: 128
    events:
      - http:
          path: upload
          method: put
          cors: true


resources:
  Resources:
    FisharBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.bucket_name}-${self:provider.stage} 
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"
            MaxAge: '3000'

