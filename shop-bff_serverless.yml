service:
  name: import-service

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  s3ImportCatalog: ${ssm:/${self:provider.stage}/env/S3-import-products~true}

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  profile: aws-rs-cli
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    S3_IMPORT_PRODUCTS: ${self:custom.s3ImportCatalog}
    SQS_URL: ${cf:product-service-${self:provider.stage}.catalogSQSUrl}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:*"
      Resource: "arn:aws:s3:::${self:custom.s3ImportCatalog}/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - "${cf:product-service-${self:provider.stage}.catalogSQSArn}"


functions:
  importProductsFile:
    handler: src/handlers/index.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            arn:
              !Join
                - ':'
                - - 'arn:aws:lambda'
                  - !Ref AWS::Region
                  - !Ref AWS::AccountId
                  - 'function:authorization-service-${self:provider.stage}-basicAuthorizer'
            resultTtlInSeconds: 0
            type: token
            identitySource: method.request.header.Authorization

  importFileParser:
    handler: src/handlers/index.importFileParser
    events:
      - s3:
          bucket: ndjs-aws-import-products
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    ApiGwAccessDeniedResponse:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: ACCESS_DENIED
        RestApiId: !Ref ApiGatewayRestApi
    ApiGwAccessUnathorizedResponse:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId: !Ref ApiGatewayRestApi