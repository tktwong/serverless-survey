service: apilogin

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 256
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: "4code"
    JWT_SECRET: "4code@123"
    JWT_TIMEOUT_MOBILE: "60d"
    JWT_TIMEOUT_WEB: "2h"
    LINK_RESET: "https://4i5neys2n4.execute-api.us-east-1.amazonaws.com/dev/reset"
    MAIL_USER: "4codenotreply@gmail.com"
    MAIL_PASSWORD: "4code@123"
    MAIL_ADRESS: "4codenotreply@gmail.com"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:038212463531:table/4code"

functions:
  login:
    handler: src/routes/login.handle
    events:
      - http:
          path: login
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - x-auth-token
  reset:
    handler: src/routes/reset.handle
    events:
      - http:
          path: reset
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - x-auth-token
  create:
    handler: src/routes/create.handle
    events:
      - http:
          path: create
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - x-auth-token
  userdata:
    handler: src/routes/userdata.handle
    events:
      - http:
          path: userdata
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - x-auth-token
  forgotpassword:
    handler: src/routes/forgotpassword.handle
    events:
      - http:
          path: forgotpassword
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - x-auth-token
  getusers:
    handler: src/routes/getusers.handle
    events:
      - http:
          path: getusers
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
  edit:
    handler: src/routes/edit.handle
    events:
      - http:
          path: edit
          method: put
          cors:
            origin: "*"
            headers:
              - Content-Type
  delete:
    handler: src/routes/delete.handle
    events:
      - http:
          path: delete
          method: put
          cors:
            origin: "*"
            headers:
              - Content-Type
# resources:
#   Resources:
#     UsersTable:
#       Type: "AWS::DynamoDB::Table"
#       DeletionPolicy: Retain
#       Properties:
#         AttributeDefinitions:
#           - AttributeName: email
#             AttributeType: S
#         KeySchema:
#           - AttributeName: email
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
#         TableName: 4code

plugins:
  - serverless-offline
