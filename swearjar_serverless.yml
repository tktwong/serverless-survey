service: SwearJar

custom:
  app_acronym: podcast-swearjar
  default_stage: dev
  stage: ${opt:stage, self:custom.default_stage}
  stack_name: ${self:custom.app_acronym}-${self:custom.stage}

  podcast_feed: "http://feeds.feedburner.com/InvertTheWhy"
  podcast_name: "InvertTheWhy"

  region: ${opt:region, self:provider.region}

  # Default to using app_acronym as bucket name
  s3_bucket: ${opt:s3_bucket, self:custom.stack_name}
  s3_bucket_arn: arn:aws:s3:::${self:custom.s3_bucket}
  s3_role_resource: ${self:custom.s3_bucket_arn}/*

  pythonRequirements:
    dockerizePip: non-linux

  customDomain:
    domainName: api.rc.convoy-apac.com
    stage: ${self:provider.stage}
    createRoute53Record: true

functions:
  PodCastTranscribePostProcessor:
    handler: src/handlers.transcribe_postprocessor
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.transcribe"
            detail-type:
              - "Transcribe Job State Change"
            detail:
              TranscriptionJobStatus:
                - COMPLETED
                - FAIL
              TranscriptionJobName:
                - "${self:custom.stack_name}-*"

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3_bucket}

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: ap-southeast-2

  environment:
    TRANSCRIPTION_JOB_PREFIX: "${self:custom.stack_name}-"
    REGION: ${self:custom.region}
    S3_BUCKET: ${self:custom.s3_bucket}
    PODCAST_NAME: ${self:custom.podcast_name}
    PODCAST_FEED: ${self:custom.podcast_feed}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: ${self:custom.s3_role_resource}

package:
  include:
    - src/**
    - psycopg2/**
  exclude:
    - ./**


plugins:
  - serverless-python-requirements
#  - serverless-domain-manager
#  - serverless-reqvalidator-plugin
#  - serverless-attach-managed-policy
