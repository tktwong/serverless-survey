# org: zuzatoy
# app: my-first-app


service: serverless


provider:
  name: aws
  runtime: nodejs12.x
  profile: default
  region: ap-southeast-2
  stage: dev

  environment:
    CANDIDATE_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    CANDIDATE_EMAIL_TABLE: "candidate-email-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.CANDIDATE_TABLE}

plugins:
    - serverless-offline


functions:
    # app:
    #   handler: src/api/index.handler
    #   events:
    #     - http: ANY /
    #     - http: 'ANY {proxy+}'

    listCandidates:
        handler: src/api/candidate.list
        memorySize: 128
        description: List all candidates
        events:
          - http: 
              path: candidates
              method: get
              cors: true

    candidateSubmission:
            handler: src/api/candidate.submit
            memorySize: 128
            description: Submit candidate information and starts interview process.
            events:
              - http: 
                  path: candidates
                  method: post
                  cors: true

    candidateDetails:
      handler: src/api/candidate.get
      events:
        - http:
            path: candidates/{id}
            method: get
            cors: true
