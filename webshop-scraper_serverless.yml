# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: webshop-scraper
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  # pythonRequirements:
  #   dockerizePip: non-linux
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Name of the SST app that's deploying our infrastructure
  sstApp: ${self:custom.stage}-webshop-scraper-infra

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin

provider:
  name: aws
  stage: dev
  region: eu-central-1
  runtime: python3.8
  lambdaHashingVersion: 20201221
  

  environment:
    s3ResponseBucketName: !ImportValue '${self:custom.sstApp}-s3ResponseBucketName'
    # webshopResponseBucketName: 'sjaakie'

  iamRoleStatements:
  - Effect: Allow
    Action:
      - s3:GetObject
      - s3:PutObject
      - s3:ListBucket
    # Restrict our IAM role permissions to
    # the specific table for the stage
    Resource:      
      Fn::Join:
        - ""
        - - !ImportValue '${self:custom.sstApp}-s3ResponseBucketARN'
          - "/*"
      # - !ImportValue '${self:custom.sstApp}-s3ResponseBucketARN'

functions:
  saveProductResponse:
    timeout: 60
    handler: bijenkorf/src/save_product_response.store_response


