service: bracket


plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  customDomain:
    domainName: iot.pho.im
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  memorySize: 128
  timeout: 5
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    SLS_STAGE: ${self:custom.stage}
  iamRoleStatements:
    - Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
      Effect: Allow

functions:
  main:
    handler: main/index.handler
    events:
      - http:
          path: /
          method: get
  qrcode:
    handler: qrcode/index.main
    events:
      - http:
          path: /q/
          method: get
  base:
    handler: qrcode/update.status
    events:
      - http:
          path: /q/{uuid}
          method: get
  create:
    handler: qrcode/create.handler
    events:
      - http:
          path: /q/
          method: post
  on:
    handler: qrcode/update.on
    events:
      - http:
          path: /q/{uuid}/on
          method: get
  off:
    handler: qrcode/update.off
    events:
      - http:
          path: /q/{uuid}/off
          method: get
  status:
    handler: qrcode/update.status
    events:
      - http:
          path: /q/{uuid}/status
          method: get

resources:
  Resources:
    LinkDB:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
