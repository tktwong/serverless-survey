service:
  name: auction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-west-1
  environment:
    AUCTION_TABLE_NAME: ${self:custom.AuctionTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTION_BUCKET_NAME: ${self:custom.AuctionBucket.name}
  iamRoleStatements:
    - ${file(iam/AuctionTableIAM.yml):AuctionTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
    - ${file(iam/AuctionBucketIAM.yml):AuctionBucketIAM}

resources:
  Resources:
    AuctionTable: ${file(resources/AuctionTable.yml):AuctionTable}
    AuctionBucket: ${file(resources/AuctionBucket.yml):AuctionBucket}
    AuctionBucketPolicy: ${file(resources/AuctionBucket.yml):AuctionBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auctions
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auctions/{id}
          authorizer: ${self:custom.authorizer}
  uploadPicture:
    handler: src/handlers/uploadPicture.handler
    events:
      - http:
          method: PATCH
          path: /auctions/{id}/uploadPicture
          authorizer: ${self:custom.authorizer}
  placeBidAuction:
    handler: src/handlers/placeBidAuction.handler
    events:
      - http:
          method: PATCH
          path: /auctions/{id}/bid
          authorizer: ${self:custom.authorizer}
  processAuction:
    handler: src/handlers/processAuction.handler
    # events:
    #   - schedule: rate(1 minute)
custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionTable:
    name: !Ref AuctionTable
    arn: !GetAtt AuctionTable.Arn
  MailQueue:
    arn: ${cf:notification-services-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-services-${self:provider.stage}.MailQueueUrl}
  AuctionBucket:
    name: auction-bucket-prueba-${self:provider.stage}
  bundle:
    linting: false
