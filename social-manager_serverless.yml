service: twitter

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: eu-central-1
  memorySize: 128 # optional, in MB, default is 1024
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:eu-central-1:*:table/*'

package:
  individually: true

plugins:
  - serverless-ssm-fetch
custom:
  serverlessSsmFetch:
    TWITTER_CONSUMER_KEY: /twitter/consumer_key~true
    TWITTER_CONSUMER_SECRET: /twitter/consumer_secret~true
    TWITTER_ACCESS_TOKEN: /twitter/access_token~true
    TWITTER_ACCESS_TOKEN_SECRET: /twitter/access_token_secret~true

functions:
  get-user-data:
    handler: twitter-get-user-data/handler.main
    description: Get Twitter user's data from it's screen name given in parameter.
    timeout: 10
    layers:
      - { Ref: TweepyLambdaLayer }
    ssmToEnvironment:
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - TWITTER_ACCESS_TOKEN
      - TWITTER_ACCESS_TOKEN_SECRET
    tags:
      App: social-manager
      Environment: dev
      Runtime: python3.8

  get-user-followers:
    handler: twitter-get-user-followers/handler.main
    description: Function used to retrive followers of user given in parameter.
    timeout: 180
    layers:
      - { Ref: TweepyLambdaLayer }
    ssmToEnvironment:
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - TWITTER_ACCESS_TOKEN
      - TWITTER_ACCESS_TOKEN_SECRET
    tags:
      App: social-manager
      Environment: dev
      Runtime: python3.8

  get-rate-limit-status:
    handler: twitter-get-rate-limit-status/handler.main
    description: Function used to get Twitter API limit status.
    timeout: 4
    layers:
      - { Ref: TweepyLambdaLayer }
    ssmToEnvironment:
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - TWITTER_ACCESS_TOKEN
      - TWITTER_ACCESS_TOKEN_SECRET
    tags:
      App: social-manager
      Environment: dev
      Runtime: python3.8

  follow-user:
    handler: twitter-follow-user/handler.main
    description: Function used to follow user, and mute it.
    timeout: 4
    layers:
      - { Ref: TweepyLambdaLayer }
    ssmToEnvironment:
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - TWITTER_ACCESS_TOKEN
      - TWITTER_ACCESS_TOKEN_SECRET
    tags:
      App: social-manager
      Environment: dev
      Runtime: python3.8

layers:
  tweepy:
    package:
      artifact: ../layers/tweepy.zip
    name: tweepy # optional, Deployed Lambda layer name
    description: Tweepy package use to communicate with Twitter API. # optional, Description to publish to AWS
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - python3.8
    licenseInfo: GPLv3
    retain: false # optional, false by default. If true, layer versions are not deleted as new ones are created
