custom: 
  service: ${file(env.yml):service}
  awsProfile: ${file(env.yml):awsProfile}
  awsTagName: ${file(env.yml):awsTagName}
  cognitoUserPoolId: ${file(env.yml):${opt:stage, 'dev'}.cognitoUserPoolId}
  region: ${file(env.yml):${opt:stage, 'dev'}.region}

service: ${self:custom.service}

frameworkVersion: ">=1.23.0 <2.0.0"

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  region: ${self:custom.region}
  memorySize: 128
  profile: ${self:custom.awsProfile} # aws named profile
  stage: ${opt:stage, 'dev'} # `sls deploy --stage production` if --stage is provided, else use dev
  stackTags: # Optional CF stack tags
    Name: ${self:custom.awsTagName}
    Stage: ${opt:stage, 'dev'}
  environment:
    cognitoUserPoolId: ${self:custom.cognitoUserPoolId}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:ListUsers
      # resource arn follow this format `arn:partition:service:region:account-id:resourcetype/resource`
      # refer to https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-arns for more information
      Resource: "arn:aws:cognito-idp:${self:custom.region}:*:userpool/${self:provider.environment.cognitoUserPoolId}"

functions:
  sendEmails:
    handler: handler.sendEmails
  validateUniqueEmailsOnSignup:
    handler: handler.validateUniqueEmailsOnSignup
