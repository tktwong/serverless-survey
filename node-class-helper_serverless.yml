service:
  name: node-class-helper

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs6.10
  environment:
      DYNAMODB_TABLE_STUDENT: ${self:service}-Student-${opt:stage, self:provider.stage}
      DYNAMODB_TABLE_TEACHER: ${self:service}-Teacher-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:*"
    - Effect: Allow
      Action:
        - "kinesis:*"
      Resource: "*"

functions:
  hello:
      handler: handler.hello
      events:
        - http:
            method: get
            path: hello
  createStudent:
      handler: src/database/student/createStudent.create
      events:
        - http:
            path: student
            method: post
            cors: true
  listStudents:
      handler: src/database/student/listStudents.list
      events:
        - http:
            path: student
            method: get
            cors: true
  getStudent:
      handler: src/database/student/getStudent.get
      events:
        - http:
            path: student/{id}
            method: get
            cors: true
  updateStudent:
      handler: src/database/student/updateStudent.update
      events:
        - http:
            path: student/{id}
            method: put
            cors: true
  deleteStudent:
      handler: src/database/student/deleteStudent.deleteStudent
      events:
        - http:
            path: student/{id}
            method: delete
            cors: true
  createTeacher:
      handler: src/database/teacher/createTeacher.create
      events:
        - http:
            path: teacher
            method: post
            cors: true

resources:
  Resources:
    StudentTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain # Keeps around the DynamoDB resource when we redeploy/destroy
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_STUDENT}
    TeacherTable:
          Type: AWS::DynamoDB::Table
          DeletionPolicy: Retain # Keeps around the DynamoDB resource when we redeploy/destroy
          Properties:
            AttributeDefinitions:
              -
                AttributeName: id
                AttributeType: S
            KeySchema:
              -
                AttributeName: id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            TableName: ${self:provider.environment.DYNAMODB_TABLE_TEACHER}