service: async-invocation

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  tableName: ${self:custom.stage}-JOB_STATUS
  region: ${opt:region, self:provider.region}

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    accountId: '#{AWS::AccountId}'
    region: ${self:custom.region}
    tableName: ${self:custom.tableName}
    snsTopicArn: "arn:aws:sns:${self:provider.region}:#{AWS::AccountId}:${self:service}-${self:provider.stage}-calculate-sns-topic"
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
resources:
  # DynamoDB tables
  - ${file(resources/dynamodb-table.yml)}

  # Topics and Queues
  - ${file(resources/topics-and-queues.yml)}

  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}

functions:
  # Lambda Functions
  - ${file(functions/lambda-functions.yml)}
