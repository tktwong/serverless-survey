service: site-translations-service

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${env:GDL_ENVIRONMENT, 'test'}
  region: eu-central-1
  endpointType: private
  role: arn:aws:iam::${env:GDL_ACCOUNT, 'DEV'}:role/${env:SERVERLESS_IAM_ROLE, 'DEV'}
  tags:
    VERSION: '1.0.1'
    TAG: ${env:TAG, 'test'}
  deploymentBucket:
    name: ${env:GDL_SERVERLESS_DEPLOYMENT_BUCKET, 'DEV'}
  resourcePolicy:
    - Effect: Allow
      Principal: '*'
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*/*/*
      Condition:
        StringEquals:
          aws:SourceVpce:
            - "${env:VPC_ENDPOINT, 'DEV'}"

package:
  individually: true
  exclude:
    - '**__tests__/**'

functions:
  site-translations:
    handler: handler.translations
    description: 'Translation service'
    events:
      - http:
          path: /{language}
          method: GET
          request:
            parameters:
              paths:
                language: true

custom:
  warmup:
    enabled:
      - prod
  serverless-offline:
    port: 5000
  vpc:
    vpcName: ${env:VPC, 'DEV'}
    subnetNames:
      - "${env:GDL_ENVIRONMENT, 'DEV'}.private_a.gdl"
      - "${env:GDL_ENVIRONMENT, 'DEV'}.private_b.gdl"
    securityGroupNames:
      - 'serverless-security_group'
  alerts:
    stages:
      - prod
    topics:
      alarm: ${env:GDL_SURVEILLANCE_SNS_ARN, 'DEV'}
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration
    definitions:
      functionDuration:
        namespace: 'AWS/Lambda'
        metric: Duration
        threshold: 500
        statistic: Average
        period: 60
        evaluationPeriods: 2
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: missing

plugins:
  - serverless-plugin-warmup
  - serverless-plugin-aws-alerts
  - serverless-vpc-discovery
  - serverless-offline #!OBS: serverless-offline needs to be last in the list
