service: thichdoc-api

frameworkVersion: ">=1.5.0 <2.0.0"

plugins:
  # - serverless-dynamodb-local
  - serverless-offline
  - serverless-babel-plugin

custom:
  babelPresets:
    - latest
    - stage-1
  serverless-offline:
    babelOptions:
      presets: ["latest", "stage-1"]

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: ap-southeast-1
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-1:*:*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  graphql:
    handler: handler.graphql
    memory: 256
    events:
    - http:
        path: graphql
        method: post
        cors: true
        # integration: lambda
        response:
          headers:
            Access-Control-Allow-Origin: "'*'"
    - http:
        path: graphql
        method: get
        cors: true
        response:
          headers:
            Access-Control-Allow-Origin: "'*'"

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
