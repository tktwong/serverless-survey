# For full config options, check the docs: docs.serverless.com

# See the following link for details and examples on using API Endpoints
# with Serverlesson AWS Lambda:
# https://www.serverless.com/framework/docs/providers/aws/events/apigateway/

service: political-contributions-api
frameworkVersion: "=1.70.0"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  sentry:
    dsn: https://b45d0fc373a64ada951b41c67a081134@o408459.ingest.sentry.io/5279299

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  region: us-west-2
  profile: political-contributions-api-serverless
  environment: ${file(./env.yaml):${opt:stage, self:provider.stage}}
  apiKeys:
    - value: ${file(./env.yaml):${opt:stage, self:provider.stage}.api_key}

functions:
  uptime:
    name: uptime-${opt:stage, self:provider.stage}
    handler: src/handlers/uptime.up
    events:
      - http:
          path: up/
          method: get
          private: true
  ca-contributions:
    name: ca-contributions-${opt:stage, self:provider.stage}
    handler: src/handlers/caContributions.query
    events:
      - http:
          path: caContributions/
          method: get
          private: true
  # create-logs:
  #   name: create-logs-${opt:stage, self:provider.stage}
  #   handler: src/handlers/logs.create
  #   events:
  #     - http:
  #         path: att/
  #         method: post
  #         private: true
  #     - http:
  #         path: tmobile/
  #         method: post
  #         private: true
  #     - http:
  #         path: verizon/
  #         method: post
  #         private: true
  #     - http:
  #         path: sprint/
  #         method: post
  #         private: true
