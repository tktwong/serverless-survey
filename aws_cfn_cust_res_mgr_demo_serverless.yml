service: display-api
plugins:
  - serverless-s3-sync
custom:
  s3Sync:
    - bucketName: ${self:service}-${self:provider.stage}-static-site
      localDir: static
provider:
  name: aws
  runtime: ruby2.5
  logRetentionInDays: 1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
      Resource:
        - ${cf:cfn-res-mgr-demo.StateManagerArn}

functions:
  lookup:
    environment:
      STATE_TBL_NAME: ${cf:cfn-res-mgr-demo.StateManagerName}
    handler: handler.lambda_handler
    events:
      - http:
          path: get_heads
          method: get
          cors: true
resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:service}-${self:provider.stage}-static-site
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]
