service: theodo-link

plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-appsync-plugin

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs12.x
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:custom.stage}
    ADMIN_URL: ${self:custom.stageConfig.adminUrl}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

custom:
  stage: ${opt:stage, self:provider.stage}
  stageConfig: ${file(./config.yml):${self:custom.stage}}
  webpack:
    packager: "yarn"
    webpackConfig: ./webpack.config.js
    includeModules: true
  customDomain:
    domainName: ${self:custom.stageConfig.domainName}
    basePath: ""
    stage: ${self:custom.stage}
    createRoute53Record: true
  appSync:
    name: ${self:service}-${self:custom.stage}
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      defaultAction: ALLOW
      userPoolId: { Ref: UserPool }
    mappingTemplates:
      - dataSource: Links
        type: Mutation
        field: createLink
        request: "createLink-request.vtl"
        response: "createLink-response.vtl"
      - dataSource: Links
        type: Mutation
        field: updateLink
        request: "updateLink-request.vtl"
        response: "updateLink-response.vtl"
      - dataSource: Links
        type: Mutation
        field: deleteLink
        request: "deleteLink-request.vtl"
        response: "deleteLink-response.vtl"
      - dataSource: Links
        type: Query
        field: listLinks
        request: "listLinks-request.vtl"
        response: "listLinks-response.vtl"
      - dataSource: Links
        type: Query
        field: getLink
        request: "getLink-request.vtl"
        response: "getLink-response.vtl"
    schema: schema.graphql
    dataSources:
      - type: AMAZON_DYNAMODB
        name: Links
        description: Theodo Links Table
        config:
          tableName: { Ref: LinksDynamoDbTable }

functions:
  link:
    handler: src/link.handler
    events:
      - http:
          path: "/{link+}"
          method: get
  home:
    handler: src/link.handler
    events:
      - http:
          path: "/"
          method: get

resources:
  Resources:
    LinksDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:custom.stage}
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: true
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      DependsOn: GoogleIdp
      Properties:
        ClientName: web-app
        GenerateSecret: false
        SupportedIdentityProviders:
          - "Google"
        CallbackURLs:
          - ${self:custom.stageConfig.adminUrl}
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthScopes:
          - openid
        UserPoolId: { Ref: UserPool }
    UserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: ${self:service}-${self:custom.stage}
        UserPoolId: { Ref: UserPool }
    GoogleIdp:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        UserPoolId: { Ref: UserPool }
        ProviderName: "Google"
        ProviderDetails:
          client_id: ${ssm:/theodo-link-google-client-id~true}
          client_secret: ${ssm:/theodo-link-google-client-secret~true}
          authorize_scopes: "profile email openid"
        ProviderType: "Google"
        AttributeMapping:
          email: "email"
