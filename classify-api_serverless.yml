service: classify-api

provider:
  name: aws
  runtime: nodejs12.x
  region: af-south-1
  stage: ${opt:stage, 'dev'}
  profile: classifydepl
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
  environment:
    CLASSIFY_TABLE: ${self:custom.ClassifyTable.name}
    CLASSIFY_S3: ${self:custom.ClassifyS3.name}
  iamRoleStatements:
    - ${file(iam/ClassifyTableIAM.yml):ClassifyTableIAM}
    - ${file(iam/ClassifyS3IAM.yml):ClassifyS3IAM}

plugins:
  - serverless-offline

package:
  exclude:
    - .git/**
    - src/**
    - test/**
    - e2e/**
    - nodemon.json
    - README.md

resources:
  Resources:
    ClassifyTable: ${file(resources/ClassifyTable.yml):ClassifyTable}
    AttachmentsBucket: ${file(resources/ClassifyS3Bucket.yml):AttachmentsBucket}
    SQSAdvertindex: ${file(resources/ClassifySQSAdvertindex.yml):SQSAdvertindex}
    SQSAdvertindexDeadLetter: ${file(resources/ClassifySQSAdvertindex.yml):SQSAdvertindexDeadLetter}

functions:
  index:
    handler: dist/index.handler
    events:
    - http:
        cors: true
        path: '/'
        method: any
    - http:
        cors: true
        path: '{proxy+}'
        method: any

custom:
  ClassifyTable:
    arn: !GetAtt ClassifyTable.Arn
    name: !Ref ClassifyTable
  ClassifyS3:
    arn: !GetAtt AttachmentsBucket.Arn
    name: !Ref AttachmentsBucket
  SQSAdvertindex:
    arn: !GetAtt SQSAdvertindex.Arn
    name: !Ref SQSAdvertindex
  SQSAdvertindexDeadLetter:
    arn: !GetAtt SQSAdvertindexDeadLetter.Arn
    name: !Ref SQSAdvertindexDeadLetter
#  serverless-offline:
#    httpPort: 4334

