service: serverless-smtp

# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:ENV, 'dev'}
  region: ${env:AWS_REGION, "sa-east-1"}
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: "*"
  versionFunctions: false

#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: email.handler
    events:
      - http:
          path: /send-email
          method: POST
          cors: true
    environment:
      SEND_TO: ${env:SEND_TO}

resources:
  Resources:

    #Custom Domain Naming (ie. test-framework.dev.laava.id )
    DomainName:
      Type: "AWS::ApiGateway::DomainName"
      Properties:
        DomainName: ${env:CUSTOM_DOMAIN_NAME}
        CertificateArn: ${env:CERTIFICATE_ARN}
        EndpointConfiguration:
          Types:
            - EDGE #PRIVATE or EDGE

    #Base Mappings  (points CustomDomain Name to specific ApiGateway)
    BasePathMapping:
      Type: "AWS::ApiGateway::BasePathMapping"
      Properties:
#        BasePath: ${env:BASE_PATH, ''}
        DomainName:
          Ref: DomainName
        RestApiId: { "Ref": "ApiGatewayRestApi" }
        Stage: ${self:provider.stage}
      DependsOn:
        - ApiGatewayDeployment

    # Record Set in route 53
    RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${env:HOSTED_ZONE_NAME}
        Name: ${env:CUSTOM_DOMAIN_NAME}
        Type: A
        AliasTarget:
          HostedZoneId:
            Fn::GetAtt: [ "DomainName", "DistributionHostedZoneId" ]
          DNSName:
            Fn::GetAtt: [ "DomainName", "DistributionDomainName" ]

    # Api Gateway Deployment
    ApiGatewayDeployment:
      Type: 'AWS::ApiGateway::Deployment'
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        StageName: ${self:provider.stage}

