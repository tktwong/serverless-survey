service: videoanalyzer

provider:
  name: aws
  runtime: python3.8
  profile: ${file(../config.dev.json):videoanalyzer.profile}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        # Giving permissions to objects in the bucket not the bucket itself
        - Fn::Join:
          - ''
          - - ${self:custom.videosBucketArn}
            - '/*'
    - Effect: "Allow"
      # Giving access for the lamba to get and pass the role
      Action:
        - iam:GetRole
        - iam:PassRole
      Resource:
        Fn::GetAtt:
          - RekognitionSNSPublishRole
          - Arn
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource:
        - Fn::GetAtt:
          - videoAnalyzerTable
          - Arn


  environment:
    VIDEO_ANALYZER_TABLE: ${self:custom.videoAnalyzerTable}
    REKOGNITION_SNS_TOPIC_ARN: ${self:custom.rekognitionSNSTopicArn}
    REKOGNITION_ROLE_ARN:
      Fn::GetAtt:
        - RekognitionSNSPublishRole
        - Arn

custom:
  videoAnalyzerTable: ${file(../config.dev.json):videoanalyzer.videos_table}
  rekognitionSNSTopicArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - handleLableDetectionTopic
  videosBucketArn:
      # Building the bucket arn(arn:aws:s3:::video-analyze-nk-01)
      Fn::Join:
        - ':'
        - - arn
          - aws
          - s3
          - ''
          - ''
          - ${file(../config.dev.json):videoanalyzer.videos_bucket}


functions:
  startProcessingVideo:
    handler: handler.start_processing_video
    events:
      - s3:
          bucket: ${file(../config.dev.json):videoanalyzer.videos_bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .mp4

  handleLableDetection:
    handler: handler.handle_lable_detection
    events:
      - sns: handleLableDetectionTopic

resources:
  Resources:
    videoAnalyzerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: Video_Name
            AttributeType: S
        KeySchema:
          -
            AttributeName: Video_Name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.videoAnalyzerTable}
    RekognitionSNSPublishRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - rekognition.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: RekognitionSNSPublishPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - sns:publish
                  Resource: ${self:custom.rekognitionSNSTopicArn}
