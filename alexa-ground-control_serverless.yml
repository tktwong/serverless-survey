service: drone-control

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters

custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []
  environment:
    DYNAMO_NAME: dronecontrol

package:
  exclude:
    - .venv/**
    - node_modules/**

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
      Resource:
        - "Fn::GetAtt": [ DynamoDbdronecontrol, Arn ]
  environment:
    DYNAMO_TABLE: ${self:custom.environment.DYNAMO_NAME}

functions:
  altitude:
    handler: handler.altitude
    events:
      - http:
          path: altitude
          method: post
          cors: true
  waypoint:
    handler: handler.waypoint
    events:
      - http:
          path: waypoint
          method: post
          cors: true
  poll:
    handler: handler.poll
    events:
      - http:
          path: poll
          method: get
          cors: true

resources:
  Resources:
    DynamoDbdronecontrol:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.environment.DYNAMO_NAME}
        AttributeDefinitions:
          - AttributeName: droneId
            AttributeType: S
        KeySchema:
          - AttributeName: droneId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
