service: chucknorris-jokes # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
# enable required plugins, in order to make what we want
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  stage: dev

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  graphql:
    handler: src/handler.main # where the actual code is located
    # to call our function from outside, we need to expose it to the outer world
    # in order to do so, we create a REST endpoint
    events:
      - http:
          path: graphql # path for the endpoint
          method: any # HTTP method for the endpoint, could be only 'post' or 'get', etc
          cors: true

custom:
  webpack:
    webpackConfig: "webpack.config.js" # name of webpack configuration file
    includeModules: true # add excluded modules to the bundle
    packager: "npm" # package manager we use
