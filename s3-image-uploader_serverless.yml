service: image-uploader

frameworkVersion: '>=1.26.0 <2.0.0'

custom:
  # ${self:custom.xxxx}で参照できるようにする
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  bucketName: ${opt:bucket-name, '${self:service}-${self:custom.region}-${self:custom.stage}'}
  cognitoArn: ${opt:cognito-arn}
  bucketURL: "${opt:bucket-url, 'http://${self:custom.bucketName}.s3-website-${self:custom.region}.amazonaws.com'}"
  uploadSizeLimit: "${opt:upload-size-limit, '2'}"
  subDir: "${opt:sub-dir, 'upload'}"
  resizeDomain: "${opt:resize-domain, ''}"
  resizeUrl: "${'https://${self:custom.resizeDomain}/images/resize'}"

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
        - 's3:PutObjectAcl'
      Resource: 'arn:aws:s3:::${self:custom.bucketName}/*'

    - Effect: 'Allow'
      Action:
        - 's3:ListBucket'
      Resource:
        {
          'Fn::Join':
            ['', ['arn:aws:s3:::', {'Ref': 'ServerlessDeploymentBucket'}]],
        }
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
        - 's3:PutObjectAcl'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - 'Ref': 'ServerlessDeploymentBucket'
            - '/*'
  environment:
    BUCKET_NAME: '${self:custom.bucketName}'
    BUCKET_URL: '${self:custom.bucketURL}'
    UPLOAD_SIZE_LIMIT_MB: '${self:custom.uploadSizeLimit}'
    SUB_DIR: '${self:custom.subDir}'
    RESIZE_DOMAIN: '${self:custom.resizeDomain}'
    RESIZE_URL: '${self:custom.resizeUrl}'

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  sale:
    handler: bin/upload
    timeout: 30
    environment:
      APPEND_DATE: 'true'
    events:
      - http:
          path: sale
          method: post
          cors: true
          headers:
            Content-Type: application/json
          authorizer:
            arn: ${self:custom.cognitoArn}
  avator:
    handler: bin/upload
    timeout: 30
    environment:
      APPEND_DATE: 'false'
    events:
      - http:
          path: avator
          method: post
          cors: true
          headers:
            Content-Type: application/json
          authorizer:
            arn: ${self:custom.cognitoArn}
  # preSignURL:
  #   handler: bin/presignurl
  #   events:
  #     - http:
  #         path: presignurl
  #         method: post
  #         cors: true
  #         headers:
  #           Content-Type: text/plain
# resources:
#   Resources:
#     ImageBucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:custom.bucketName}
# Outputs:
#   NewOutput:
#     Description: "Description for the output"
#     Value: "ImageBucket"
