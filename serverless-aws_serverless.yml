service: service-01-serverless-service

provider:
    name: aws
    runtime: nodejs12.x
    region: ap-south-1
    environment:
        IS_OFFLINE: false
        JOBS_TABLE: ${self:service}-${self:opt, self:provider.stage}-jobs
        DYNAMODB_TABLE: jobsPortal
    iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"

plugins:
    - serverless-offline
    - serverless-dynamodb-local

custom:
  dynamodb:
    start:
        port: 8082
        inMemory: true
        migrate: true
        onStart: true # Check if dynamodb already started. Start only if it isn't already started.
    stages:
      - ${self:provider.stage}

functions:
    hello:
        handler: handler.hello
    jobs:
        handler: src/jobs/handler.handler
    listJobs:
        handler: src/jobs/list.handler
        events:
            - http:
                method: GET
                path: /jobs
    createJob:
        handler: src/jobs/create.handler
        events:
            - http:
                method: POST
                path: /jobs
    findJob:
        handler: src/jobs/find.handler
        events:
            - http:
                method: GET
                path: /jobs/{id}
                request:
                    parameters:
                        id: true
    deleteJob:
        handler: src/jobs/delete.handler
        events:
            - http:
                method: DELETE
                path: /jobs/{id}
                request:
                    parameters:
                        id: true
    updateJob:
        handler: src/jobs/update.handler
        events:
            - http:
                method: PUT
                path: /jobs/{id}
                request:
                    parameters:
                        id: true

resources:
    Resources:
        JobsDynamoDBTable:
            Type: "AWS::DynamoDB::Table"
            Properties:
                TableName: ${self:provider.environment.JOBS_TABLE}
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1