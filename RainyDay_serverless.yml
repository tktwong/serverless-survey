service: notifySubscribers

frameworkVersion: '2'

plugins:
  - serverless-jest-plugin
  - serverless-plugin-tracing

custom:
  allowHeaders:
    - Accept
    - Content-Type
    - Content-Length

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: prod
  memorySize: 128
  timeout: 5
  tracing: true
  endpoint: regional
  environment:
    CITY_TABLE: city-table-${opt:stage, self:provider.stage}
    PUBLISH_MESSAGE_LAMBDA_NAME: ${self:service}-${opt:stage, self:provider.stage}-PublishMessageToTopic
    WEATHER_API_KEY: 6fa7c41ae8724c3e9f2153649200910
    ACCOUNT_ID: '209148561688'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: '*'
    - Effect: Allow
      Action:
        - dynamodb:Scan
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CITY_TABLE}'
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: '*'
    - Effect: 'Allow' # xray permissions (required)
      Action:
        - 'xray:PutTraceSegments'
        - 'xray:PutTelemetryRecords'
      Resource:
        - '*'

functions:
  ScanDynamoDB:
    handler: scanTable.handler
    warmup: false
    description: retrieve all cities with associated topics
    events:
      - schedule: cron(00 7 * * ? *)

  PublishMessageToTopic:
    handler: publishMessageToTopic.handler
    description: publishMessageToTopic
