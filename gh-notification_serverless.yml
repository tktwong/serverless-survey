service: ghnotifications

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
  github: ${ssm:/aws/reference/secretsmanager/gh-notifications/github~true}
  discord: ${ssm:/aws/reference/secretsmanager/gh-notifications/discord~true}

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
  stage: dev
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
environment: &default-env

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  github:
    handler: src/handler.github
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
          path: github
          method: post
    environment:
      GITHUB_CLIENT_ID: ${self:custom.github.GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${self:custom.github.GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK: ${self:custom.github.GITHUB_CALLBACK}
  github-auth:
    handler: src/handler.github-auth
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
          path: github-auth
          method: get
    environment:
      GITHUB_CLIENT_ID: ${self:custom.github.GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${self:custom.github.GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK: ${self:custom.github.GITHUB_CALLBACK}
  github-start:
    handler: src/handler.github-start
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
          path: github-start
          method: get
    environment:
      GITHUB_CLIENT_ID: ${self:custom.github.GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${self:custom.github.GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK: ${self:custom.github.GITHUB_CALLBACK}
  discordtest:
    handler: src/handler.discord-auth
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
          path: discord-auth
          method: get
    environment:
      DISCORD_CLIENT_ID: ${self:custom.discord.clientId}
      DISCORD_CLIENT_SECRET: ${self:custom.discord.secret}

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ghn-githubInstallations
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1