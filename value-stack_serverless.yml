# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: value-stack

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:164971268962:table/FandualWeekNine"
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can add packaging information here
package:
  exclude:
    - node_modules/**
    - .git/**
    - client/**

functions:
  graphql:
    handler: handler.graphql
    events:
      - http:
          path: graphql
          method: post
          cors: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

# you can add CloudFormation resource templates here
resources:
 Resources:
   fandualTable:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: FandualWeekNine
       AttributeDefinitions:
         - AttributeName: playerId
           AttributeType: S
        #  - AttributeName: first_name
        #    AttributeType: S
        #  - AttributeName: fppg
        #    AttributeType: N
        #  - AttributeName: game
        #    AttributeType: S
        #  - AttributeName: injury_details
        #    AttributeType: S
        #  - AttributeName: injury_indicator
        #    AttributeType: S
        #  - AttributeName: last_name
        #    AttributeType: S
        #  - AttributeName: opponent
        #    AttributeType: S
        #  - AttributeName: played
        #    AttributeType: N
        #  - AttributeName: position
        #    AttributeType: S
        #  - AttributeName: salary
        #    AttributeType: N
        #  - AttributeName: team
        #    AttributeType: S
       KeySchema:
         - AttributeName: playerId
           KeyType: HASH
       ProvisionedThroughput:
         ReadCapacityUnits: 1
         WriteCapacityUnits: 1
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-offline
