service: sns-sqs-example

provider:
  name: aws
  runtime: nodejs12.x
  versionFunctions: false

  stage: ${opt:stage, 'dev'}
  timeout: 30

#  deploymentPrefix: serverless
#  deploymentBucket: dzin-serverless-deploy

  environment:
    SENDER_TOPIC_ARN: ${self:custom.senderTopicArn}

  iamRoleStatements:
    - Effect: Allow
      Resource: ${self:custom.senderTopicArn}
      Action:
        - sns:Publish

package:
  excludeDevDependencies: false
  exclude: ['**/**']
  include:
    - dist/handlers.js

custom:
  prefix: ${self:service}-${self:provider.stage}

  snsSqsStack:  sns-sqs-resources
  senderTopicArn: !ImportValue ${self:custom.snsSqsStack}-SenderTopicArn
  receiverQueueArn: !ImportValue ${self:custom.snsSqsStack}-ReceiverQueueArn

functions:
  sender:
    handler: dist/handlers.sender

  receiver:
    handler: dist/handlers.receiver
    events:
      - sqs:
          arn: ${self:custom.receiverQueueArn}
          batchSize: 1
