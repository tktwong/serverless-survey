service: aws-websocket-demo

provider:
  name: aws
  runtime: python3.6
  timeout: 20
  environment:
    DEPLOY_STAGE: ${opt:stage}
  websocketsApiName: websocket-example-demo
  websocketsApiRouteSelectionExpression: $request.body.action
  iamRoleStatements:
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DescribeTable
      Resource: 'arn:aws:dynamodb:us-east-1:*:*'

functions:
  connectHandler:
    handler: ws_chat.handlers.connect_handler
    events:
      - websocket:
          route: $connect
          authorizer: authHandler
  disconnectHandler:
    handler: ws_chat.handlers.disconnect_handler
    events:
      - websocket:
          route: $disconnect
  defaultMessageHandler:
    handler: ws_chat.handlers.message_handler
    events:
      - websocket:
          route: $default
  authHandler:
    handler: ws_chat.handlers.user_auth

resources:
  Resources:
    UserConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: WSChatUsers-${opt:stage}
        KeySchema:
          - AttributeName: connection_id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: connection_id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
plugins:
  - serverless-python-requirements
