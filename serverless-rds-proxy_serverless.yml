service: rds

provider:
  name: aws
  stage: dev
  region: ca-central-1
  environment:
    AURORA_HOST: ${self:custom.AURORA.HOST}
    AURORA_PORT: ${self:custom.AURORA.PORT}
    AURORA_DB_NAME: ${self:custom.AURORA.DB_NAME}
    AURORA_USERNAME: ${self:custom.AURORA.USERNAME}
    AURORA_PASSWORD: ${self:custom.AURORA.PASSWORD}

# Define variables here for lisibility
custom:
  AURORA:
    DB_NAME: aurora${self:provider.stage}
    USERNAME: master
    PASSWORD: password
    HOST:
      Fn::GetAtt: [AuroraRDSCluster, Endpoint.Address]
    PORT:
      Fn::GetAtt: [AuroraRDSCluster, Endpoint.Port]
    VPC_CIDR: 10
  email:
    dev: nadtakan@serverlessguru.com

resources:
  Resources:    
    # VPC config
    ServerlessVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default
    
    MySecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: RDS Network
        GroupName: RDS Networkcd
        Tags: 
          - Key: Name
            Value: ${self:service}-security-group
        VpcId: 
          Ref: ServerlessVPC
        SecurityGroupIngress: 
          - CidrIp: 0.0.0.0/0
            FromPort: 3306
            ToPort: 3306
            IpProtocol: tcp

    SubnetA:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/24
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: ${self:service}-subnet-a

    SubnetB:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}b
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.1.0/24
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: ${self:service}-subnet-b
    
    # Private subnet
    PrivateSubnetA:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}b
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.2.0/24
        Tags:
          - Key: Name
            Value: ${self:service}-subnet-d

    # attaching public subnet with internet GW
    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: 
          Ref: ServerlessVPC
        Tags:
          - Key: Name
            Value: ${self:service}-route-table
    
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value: ${self:service}-internet-gateway

    VPCGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties: 
        InternetGatewayId:
          Ref: InternetGateway
        VpcId: 
          Ref: ServerlessVPC

    RouteConfig:
      Type: AWS::EC2::Route
      Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: 
          Ref: InternetGateway
        RouteTableId:
          Ref: RouteTable
    
    # Associates a subnet with a route table
    SubnetARouteTable:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: 
          Ref: RouteTable
        SubnetId:
          Ref: SubnetA

    SubnetBRouteTable:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: 
          Ref: RouteTable
        SubnetId:
          Ref: SubnetB

    # Aurora DB config
    AuroraSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: "Aurora Subnet Group"
        SubnetIds:
          # - Ref: SubnetPublic
          - Ref: SubnetA
          - Ref: SubnetB
          - Ref: PrivateSubnetA
          
    AuroraRDSClusterParameter:
      Type: AWS::RDS::DBClusterParameterGroup
      Properties:
        Description: Parameter group for the Serverless Aurora RDS DB.
        Family: aurora-mysql5.7
        Parameters:
          character_set_database: "utf32"

    AuroraRDSInstanceParameter:
      Type: AWS::RDS::DBParameterGroup
      Properties:
        Description: Parameter group for the Serverless Aurora RDS DB.
        Family: aurora-mysql5.7
        Parameters:
          sql_mode: IGNORE_SPACE
          max_connections: 100
          wait_timeout: 900
          interactive_timeout: 900

    AuroraRDSCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        MasterUsername: ${self:custom.AURORA.USERNAME}
        MasterUserPassword: ${self:custom.AURORA.PASSWORD}
        DBSubnetGroupName:
          Ref: AuroraSubnetGroup
        Engine: aurora-mysql
        EngineVersion: "5.7"
        DatabaseName: ${self:custom.AURORA.DB_NAME}
        BackupRetentionPeriod: 1
        DBClusterParameterGroupName:
          Ref: AuroraRDSClusterParameter
        VpcSecurityGroupIds:
          - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup

    AuroraRDSInstanceOne:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceClass: db.t2.small
        DBSubnetGroupName:
          Ref: AuroraSubnetGroup
        Engine: aurora-mysql
        EngineVersion: "5.7"
        PubliclyAccessible: false
        DBParameterGroupName:
          Ref: AuroraRDSInstanceParameter
        DBClusterIdentifier:
          Ref: AuroraRDSCluster
        # MultiAZ: true # rds proxy need minimum 2 AZs
    
    AuroraRDSInstanceTwo:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceClass: db.t2.small
        DBSubnetGroupName:
          Ref: AuroraSubnetGroup
        Engine: aurora-mysql
        EngineVersion: "5.7"
        PubliclyAccessible: false
        DBParameterGroupName:
          Ref: AuroraRDSInstanceParameter
        DBClusterIdentifier:
          Ref: AuroraRDSCluster
        # MultiAZ: true # rds proxy need minimum 2 AZs

    RdsSNSTopic:
      Type: AWS::SNS::Topic
      Properties: 
        DisplayName: RdsNotification
        Subscription:
          - Endpoint: ${self:custom.email.${self:provider.stage}}
            Protocol: email
        Tags: 
          - Key: Name
            Value: nadtakan
        TopicName: RdsNotification

    RdsEventSubscription:
      Type: AWS::RDS::EventSubscription
      Properties: 
        Enabled: true
        SnsTopicArn: 
          Ref: RdsSNSTopic
        SourceType: db-cluster
  
  Outputs:
    ServerlessVPC:
      Value: 
        Fn::GetAtt: 
          - ServerlessVPC
          - DefaultSecurityGroup
      Export:
        Name: ${self:service}:${self:provider.stage}:ServerlessVPCId
    
    MySecurityGroup:
      Value: 
        Fn::GetAtt: 
          - MySecurityGroup
          - GroupId
      Export:
        Name: ${self:service}:${self:provider.stage}:MySecurityGroup

    SubnetPrivateA: # this should name PublicSubnetA
      Value: 
        Ref: SubnetA
      Export:
        Name: ${self:service}:${self:provider.stage}:SubnetA
    
    SubnetPrivateB: # this should name PublicSubnetB
      Value:  
        Ref: SubnetB
      Export:
        Name: ${self:service}:${self:provider.stage}:SubnetB
    
    SubnetPrivateC: # this should name PrivateSubnetA
      Value:  
        Ref: PrivateSubnetA
      Export:
        Name: ${self:service}:${self:provider.stage}:PrivateSubnetA

    AuroraRDSInstanceOne:
      Value:  
        Fn::GetAtt: 
          - AuroraRDSInstanceOne
          - Endpoint.Address
      Export:
        Name: ${self:service}:${self:provider.stage}:AuroraRDSInstanceOne
    
    AuroraRDSInstanceTwo:
      Value:  
        Fn::GetAtt: 
          - AuroraRDSInstanceTwo
          - Endpoint.Address
      Export:
        Name: ${self:service}:${self:provider.stage}:AuroraRDSInstanceTwo

    AuroraRDSCluster:
      Value:
        Fn::GetAtt:
          - AuroraRDSCluster
          - Endpoint.Address
      Export:
        Name: ${self:service}:${self:provider.stage}:AuroraRDSCluster
    
    AuroraRDSClusterId:
      Value:  
        Ref: AuroraRDSCluster
      Export:
        Name: ${self:service}:${self:provider.stage}:AuroraRDSClusterId
    
    