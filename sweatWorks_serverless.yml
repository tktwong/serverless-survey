service: sweatWorksApi

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: true
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    ACCESS_KEY_ID: ${file(./commons/credentials.json):${self:provider.stage}.accessKeyId}
    SECRET_ACCESS_KEY: ${file(./commons/credentials.json):${self:provider.stage}.secretAccessKey}
    AUTHORS_TABLE: Authors
    PUBLICATIONS_TABLE: Publications

plugins:
  - serverless-offline

package:
  include:
    - ./commons/commonFunctions.js
    - ./commons/dynamoHandler.js
  exclude:
    - node_modules/**
    - .idea/**

functions:
  createAuthor:
      handler: handler.authorCreate
      events:
        - http:
            path: author
            method: post
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  readAuthorDetails:
      handler: handler.authorDetail
      events:
        - http:
            path: author/{id}
            method: get
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  readAuthorAll:
      handler: handler.authorAll
      events:
        - http:
            path: author
            method: get
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  updateAuthor:
      handler: handler.authorUpdate
      events:
        - http:
            path: author/{id}
            method: put
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  deleteAuthor:
      handler: handler.authorDelete
      events:
        - http:
            path: author/{id}
            method: delete
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  createPublication:
      handler: handler.publicationCreate
      events:
        - http:
            path: publication
            method: post
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  readPublicationDetails:
      handler: handler.publicationDetail
      events:
        - http:
            path: publication/{id}
            method: get
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  readPublications:
      handler: handler.publicationsAll
      events:
        - http:
            path: publication
            method: get
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  readPublicationsByAuthor:
      handler: handler.publicationsAll
      events:
        - http:
            path: publication/author/{id}
            method: get
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  updatePublication:
      handler: handler.publicationUpdate
      events:
        - http:
            path: publication/{id}
            method: put
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}
  deletePublication:
      handler: handler.publicationDelete
      events:
        - http:
            path: publication/{id}
            method: delete
            cors: true
      layers:
          - arn:aws:lambda:us-east-1:${file(./commons/credentials.json):${self:provider.stage}.awsAccountId}:layer:node_js_layer:${file(./commons/credentials.json):${self:provider.stage}.layerVersion}