service: mattmitchell-dev

plugins:
  - serverless-sync-s3
  - serverless-cloudfront-invalidate

provider:
  name: aws
  runtime: nodejs12.x
  profile: ${opt:profile, ''}
  region: us-east-1
  stage: ${opt:stage, ''}

custom:
  name: mattmitchell-dev
  websiteBucketName: ${self:custom.name}-${self:provider.stage}
  hostedZoneNameMap:
    prod: mattmitchell.dev.
  domainMap:
    prod: mattmitchell.dev
  certificateArnMap:
    prod: arn:aws:acm:us-east-1:205844185710:certificate/a88b723c-4782-4675-a44f-9c4603867490
  cloudfrontInvalidate:
    distributionIdKey: "MattMitchellDevCloudFrontDistributionId"
    items:
      - "/*"
  syncS3:
    - bucketName: ${self:custom.websiteBucketName}
      localDir: dist

resources:
  Resources:
    MattMitchellDevCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - Id: ${self:custom.name}-${self:provider.stage} ## An identifier for the origin which must be unique within the distribution.
              DomainName:
                "Fn::GetAtt": [MattMitchellDevUIBucket, DomainName]
              S3OriginConfig:
                OriginAccessIdentity:
                  "Fn::Join":
                    [
                      "",
                      [
                        "origin-access-identity/cloudfront/",
                        { Ref: MattMitchellDevUIOriginAccessIdentity },
                      ],
                    ]
          Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ErrorCachingMinTTL: 300
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ErrorCachingMinTTL: 300
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods: [DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT]
            CachedMethods: [GET, HEAD, OPTIONS]
            TargetOriginId: ${self:custom.name}-${self:provider.stage}
            ViewerProtocolPolicy: redirect-to-https
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: all
          # ## Restrict to North America only
          # PriceClass: PriceClass_100
          Aliases:
            - ${self:custom.domainMap.${self:provider.stage}}
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificateArnMap.${self:provider.stage}}
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.1_2016
    DomainRoute53Alias:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            "Fn::GetAtt": [MattMitchellDevCloudFrontDistribution, DomainName]
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2 # CloudFront Hosted Zone ID cloudfront.net (NOT CUSTOM DOMAIN)
        HostedZoneName: ${self:custom.hostedZoneNameMap.${self:provider.stage}}
        Name: ${self:custom.domainMap.${self:provider.stage}}
        Type: A
    MattMitchellDevUIOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: "CloudFrontOriginAccessIdentity for ${self:service}-${self:provider.stage}"
    MattMitchellDevUIBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.websiteBucketName}
        AccessControl: Private
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    MattMitchellDevUIBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: MattMitchellDevUIBucket
        PolicyDocument:
          Statement:
            - Action:
                - "s3:GetObject"
              Effect: Allow
              Resource:
                {
                  "Fn::Join":
                    [
                      "",
                      ["arn:aws:s3:::", { Ref: MattMitchellDevUIBucket }, "/*"],
                    ],
                }
              Principal:
                CanonicalUser:
                  "Fn::GetAtt":
                    [MattMitchellDevUIOriginAccessIdentity, S3CanonicalUserId]
  Outputs:
    MattMitchellDevCloudFrontDistributionId:
      Value:
        Ref: MattMitchellDevCloudFrontDistribution
    MattMitchellDevCloudFrontDistributionDomainName:
      Value:
        "Fn::GetAtt": [MattMitchellDevCloudFrontDistribution, DomainName]
