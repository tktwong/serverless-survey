service: authors-api-demo

provider:
  name: aws
  runtime: nodejs8.10
  region: sa-east-1
  environment:
    DYNAMODB_NAMESPACE: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

plugins:
  - serverless-dynamodb-local
  - serverless-offline


custom:
  dynamodb:
    start:
      seed: true

    seed:
      test:
        sources:
          - table: ${self:provider.environment.DYNAMODB_NAMESPACE}-authors
            sources: [./seed/authors_seed.json]
          - table: ${self:provider.environment.DYNAMODB_NAMESPACE}-publications
            sources: [./seed/publications_seed.json]

functions:

  ## Authors API
  createAuthor:
    handler: src/Author.create
    events:
      - http:
          method: POST
          path: /api/authors
          cors: true

  getAuthor:
    handler: src/Author.get
    events:
      - http:
          method: GET
          path: /api/authors/{id}
          cors: true

  listAuthors:
    handler: src/Author.list
    events:
      - http:
          method: GET
          path: /api/authors
          cors: true

  updateAuthor:
    handler: src/Author.update
    events:
      - http:
          method: PUT
          path: /api/authors/{id}
          cors: true

  deleteAuthor:
    handler: src/Author.delete
    events:
      - http:
          method: DELETE
          path: /api/authors/{id}
          cors: true

  ## Publications API
  createPublication:
    handler: src/Publication.create
    events:
      - http:
          method: POST
          path: /api/publications
          cors: true

  getPublication:
    handler: src/Publication.get
    events:
      - http:
          method: GET
          path: /api/publications/{id}
          cors: true

  listPublications:
    handler: src/Publication.list
    events:
      - http:
          method: GET
          path: /api/publications
          cors: true

  updatePublication:
    handler: src/Publication.update
    events:
      - http:
          method: PUT
          path: /api/publications/{id}
          cors: true

  deletePublication:
    handler: src/Publication.delete
    events:
      - http:
          method: DELETE
          path: /api/publications/{id}
          cors: true

resources:
  Resources:

    AuthorsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-authors

    PublicationsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: author
            AttributeType: S
          -
            AttributeName: dummy
            AttributeType: N
          -
            AttributeName: date
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-publications
        GlobalSecondaryIndexes:
          - IndexName: author
            KeySchema:
              - AttributeName: author
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: all
            KeySchema:
              - AttributeName: dummy
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
