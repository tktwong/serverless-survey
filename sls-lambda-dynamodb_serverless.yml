service:
  name: ans-prototype-one
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  settings:
    TEST_TABLE: ansTestTable

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-create-global-dynamodb-table
  - serverless-prune-plugin
 

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2

  # apiGateway:
  #   minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment: ${self:custom.settings}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TEST_TABLE}"

functions:
  getbycustom:
    handler: handler.getbycustom
    events:
      - http:
          method: GET
          path: videos
  
  add:
    handler: handler.addVideo
    events:
      - http:
          method: POST
          path: video
  
  delete:
    handler: handler.deleteVideo
    events:
      - http:
          method: DELETE
          path: video/{id}


resources:
  Resources:

    testTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TEST_TABLE}
        AttributeDefinitions:
          - AttributeName: PageName_VideoID
            AttributeType: S
        KeySchema:
          - AttributeName: PageName_VideoID
            KeyType: HASH
        # AttributeDefinitions:
        #   - AttributeName: id
        #     AttributeType: S
        # KeySchema:
        #   - AttributeName: id
        #     KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1