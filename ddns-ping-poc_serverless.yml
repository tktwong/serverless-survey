service: ddns-ping-poc

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  endpointType: regional
  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    RECORDS_TABLE_NAME: records-table-${self:provider.environment.SERVERLESS_STAGE}
    HOSTED_ZONE_NAME: ${env:HOSTED_ZONE_NAME}
    HOSTED_ZONE_ID: ${env:HOSTED_ZONE_ID}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - route53:ChangeResourceRecordSets
      Resource:
        - !Sub "arn:aws:route53:::hostedzone/${env:HOSTED_ZONE_ID}"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - !Sub "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:provider.environment.RECORDS_TABLE_NAME}"
        - !Sub "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:provider.environment.RECORDS_TABLE_NAME}/*"

plugins:
  - serverless-pseudo-parameters

functions:
  ping:
    handler: src/handlers/ping/index.handler
    events:
      - http:
          path: "/{token}"
          method: get
  record:
    handler: src/handlers/record/index.handler
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt RecordsTable.StreamArn
          batchSize: 1
resources:
  Resources:
    DomainName:
      Type: "AWS::ApiGateway::DomainName"
      Properties:
        RegionalCertificateArn: ${env:CERTIFICATE_ARN}
        DomainName: ${self:provider.environment.SERVERLESS_STAGE}.${env:HOSTED_ZONE_NAME}
        EndpointConfiguration:
          Types:
            - REGIONAL
    DNSRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: "${env:HOSTED_ZONE_NAME}."
        Name: !Sub "#{DomainName}."
        Type: A
        AliasTarget:
          DNSName: !GetAtt DomainName.RegionalDomainName
          HostedZoneId: !GetAtt DomainName.RegionalHostedZoneId
    BasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      DependsOn: DomainName
      Properties:
        BasePath: ''
        DomainName: ${self:provider.environment.SERVERLESS_STAGE}.${env:HOSTED_ZONE_NAME}
        RestApiId: !Ref ApiGatewayRestApi
        Stage: ${self:provider.environment.SERVERLESS_STAGE}
    RecordsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
          - AttributeName: user
            AttributeType: S
          - AttributeName: record
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: user
            KeySchema:
              - AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: record
            KeySchema:
              - AttributeName: record
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TimeToLiveSpecification:
          AttributeName: expires
          Enabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:provider.environment.RECORDS_TABLE_NAME}
