service: notificationsender

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'prod'}
  role: ${file(./deployment_setting/${self:provider.stage}.json):EXECUTION_ROLE}
  memorySize: 1024
  timeout: 30
  region: ${file(./deployment_setting/${self:provider.stage}.json):LAMBDA_REGION}
  apiKeys:
    - Api_${self:provider.stage}

package:
  include:
    - app/**
    - node_modules/**
    - index.js
  exclude:
    - .idea/**
    - .serverless/**
    - deployment_setting/**
    - test/**
    - .env
    - .git/**
    - .gitignore
    - package-lock.json
    - package.json
    - README.md
  individually: true

functions:
  sendmail:
    handler: index.sendmail
    description: Send an email using API
    events:
      - http:
          path: sendmail
          method: post
          cors: true
          private: true
    environment:
      SES_REGION: ${file(./deployment_setting/${self:provider.stage}.json):SES_REGION}
      BUCKET_REGION: ${file(./deployment_setting/${self:provider.stage}.json):BUCKET_REGION}
      BUCKET_NAME: ${file(./deployment_setting/${self:provider.stage}.json):BUCKET_NAME}
      ATTACHMENTS_PATH: ${file(./deployment_setting/${self:provider.stage}.json):ATTACHMENTS_PATH}
      MAIL_FROM: ${file(./deployment_setting/${self:provider.stage}.json):MAIL_FROM}
      ENVIRONMENT: ${file(./deployment_setting/${self:provider.stage}.json):ENVIRONMENT}
      DBUSER: ${file(./deployment_setting/${self:provider.stage}.json):DBUSER}
      DBHOST: ${file(./deployment_setting/${self:provider.stage}.json):DBHOST}
      DBPASSWORD: ${file(./deployment_setting/${self:provider.stage}.json):DBPASSWORD}
      DBNAME: ${file(./deployment_setting/${self:provider.stage}.json):DBNAME}
      APP_BASE_URL: ${file(./deployment_setting/${self:provider.stage}.json):APP_BASE_URL}