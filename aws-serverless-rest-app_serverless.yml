service: blog-api

custom:
  tableName: 'blog-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["PostsDynamoDBTable", "Arn" ] }
  environment:
    BLOG_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getPosts:
    handler: Post/getList.run
    events:
      - http: 'GET /posts'
  createPost:
    handler: Post/create.run
    events:
      - http: 'POST /posts'
  updatePost:
    handler: Post/update.run
    events:
      - http: 'PUT /posts'
  getPost:
    handler: Post/getOne.run
    events:
      - http: 'GET /posts/{proxy+}'
  deletePost:
    handler: Post/delete.run
    events:
      - http: 'DELETE /posts/{proxy+}'

resources:
  Resources:
    PostsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: postId
            AttributeType: S
        KeySchema:
          -
            AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}