service: todos-api

plugins:

provider:
  name: aws
  runtime: nodejs10.x
  environment:
    AUTH0_CLIENT_ID: ${file(./secrets.json):AUTH0_CLIENT_ID}
    AUTH0_CLIENT_PUBLIC_KEY: ${file(./public_key)}
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  fetch:
    handler: handler.fetch
    events:
      - http:
          path: /user/{id}/todos
          method: get
          authorizer: authorizer
  create:
    handler: handler.create
    events:
      - http:
          path: /user/{id}/todos
          method: post
          authorizer: authorizer
  delete:
    handler: handler.delete
    events:
      - http:
          path: /user/{id}/todos
          method: delete
          authorizer: authorizer
  authorizer:
    handler: authorizer.authorizer

resources:
  Resources:
    FOYTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
