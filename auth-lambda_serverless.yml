service: oauth-js
frameworkVersion: '2'
useDotenv: true
plugins:
  - serverless-dotenv-plugin
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

functions:
  home:
    handler: src/handler.home
    events: 
      - http: 
          method: get
          cors: true
          path: /
  auth:
    environment:
      DB_PG: ${env:DB_PG}
      DB_PG_USER: ${env:DB_PG_USER}
      DB_PG_PASS: ${env:DB_PG_PASS}
      DB_PG_HOST: ${env:DB_PG_HOST}
      DB_PG_PORT: ${env:DB_PG_PORT}
      JWT_SECRET: ${env:JWT_SECRET}
      ROUNDS_BCRYPT: ${env:ROUNDS_BCRYPT}
      DB_DY_REGION: ${env:DB_DY_REGION}
      DB_DY_HOST: ${env:DB_DY_HOST}
    handler: src/handler.auth
    events:
      - http:
          method: post
          cors: true
          path: auth

  updatePassword:
    environment:
      DB_PG: ${env:DB_PG}
      DB_PG_USER: ${env:DB_PG_USER}
      DB_PG_PASS: ${env:DB_PG_PASS}
      DB_PG_HOST: ${env:DB_PG_HOST}
      DB_PG_PORT: ${env:DB_PG_PORT}
      ROUNDS_BCRYPT: ${env:ROUNDS_BCRYPT}
    handler: src/handler.updatePassword
    events:
      - http:
          method: put
          cors: true
          path: user/{id}/password

  updateEmail:
    environment:
      DB_PG: ${env:DB_PG}
      DB_PG_USER: ${env:DB_PG_USER}
      DB_PG_PASS: ${env:DB_PG_PASS}
      DB_PG_HOST: ${env:DB_PG_HOST}
      DB_PG_PORT: ${env:DB_PG_PORT}
    handler: src/handler.updateEmail
    events:
      - http:
          method: put
          cors: true
          path: user/{id}/email
  
  updateUser:
    environment:
      DB_PG: ${env:DB_PG}
      DB_PG_USER: ${env:DB_PG_USER}
      DB_PG_PASS: ${env:DB_PG_PASS}
      DB_PG_HOST: ${env:DB_PG_HOST}
      DB_PG_PORT: ${env:DB_PG_PORT}
    handler: src/handler.updateUser
    events:
      - http:
          method: put
          cors: true
          path: user/{id}

custom:
  dotenv:
    path: ./.env
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY