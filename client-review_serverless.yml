service: email-service

plugins:
  - serverless-bundle
  - serverless-offline

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x

# you can overwrite defaults here
  stage: dev
  region: eu-central-1

  # best practice: roles per function
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:ListStreams
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
      Resource:
        - 'Fn::ImportValue': ${self:custom.stage}-ReviewsTableArn
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource: 
        - "*"
      Condition:
        StringEquals:
          ses:FromAddress:
            - 'mldnmilosevic@gmail.com'

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-ApiGatewayRestApiRootResourceId

# best practice: exclude/include per function
functions:
  notify:
    handler: handler.notify
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn: 
            'Fn::ImportValue': ${self:custom.stage}-ReviewsTableStreamArn

  contact:
    handler: handler.contact
    events:
      - http:
          path: contact
          method: post
          cors: true
          authorizers: aws_iam