service: argus-indexer-service

provider:

  name: aws
  stage: dev
  region: eu-west-1

  apiKeys:
    - argus-indexer-service-testing-key
    - argus-indexer-service-app-dev

  environment:
    APP_BUCKET: argus-security-app
    COLLECTIONS_TABLE: argus-collections

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - ${self:custom.bucket-arn}
        - ${self:custom.bucket-arn}/*
    - Effect: Allow
      Action:
        - rekognition:*
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamoDB:*
      Resource: "*"

functions:

  uploadFace:
    runtime: nodejs12.x
    handler: src/handler/uploadFace.handler
    events:
      - http:
          path: face
          method: post
          private: true
          authorizer:
            arn:  ${self:custom.authorizer-arn}

  faceIndexer:
    runtime: nodejs12.x
    handler: src/handler/faceIndexer.handler
    events:
      - s3:
          bucket: argus-security-app
          event: s3:ObjectCreated:*
          rules:
            - prefix: faces/
            - suffix: .jpg
          existing: true

  createCollection:
    runtime: nodejs12.x
    handler: src/handler/createCollection.handler
    events:
      - http:
          path: collection
          method: post
          private: true
          authorizer:
            arn:  ${self:custom.authorizer-arn}

custom:
  bucket-arn: arn:aws:s3:::argus-security-app
  authorizer-arn: arn:aws:cognito-idp:eu-west-1:206386915763:userpool/eu-west-1_vMNp7XqR0

resources:
  Resources:

    CollectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: argus-collections
        AttributeDefinitions:
          - AttributeName: rekognitionFaceId
            AttributeType: S
        KeySchema:
          - AttributeName: rekognitionFaceId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1