service: sil-transcriber-processnewfile

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: dev #cli build params will override this!!
  stackName: TranscriberTrigger${self:custom.myStage}

custom:
  myStage: ${opt:stage, self:provider.stage} #use the --stage CLI option if it exists, or use provider.stage
plugins:
  -serverless-plugin-typescript
package:
  exclude:
    - node_modules/**/*
  include:
    - node_modules/mp3-duration/**
    - node_modules/index/**
    - node_modules/bluebird/**
    - node_modules/bluebird-co/**
    - node_modules/content-type/**
    - node_modules/debug/**
    - node_modules/file-type/**
    - node_modules/media-typer/**
    - node_modules/ms/**
    - node_modules/music-metadata/**
    - node_modules/strtok3/**
    - node_modules/then-read-stream/**
    - node_modules/token-types/**  
    
  
functions:
  sil-transcriber-processnewfile:
    handler: src/index.handler # required, handler set in AWS Lambda
    name: sil-transcriber-processnewfile-${self:custom.myStage} # optional, Deployed Lambda name
    description: Process new audio file upload # optional, Description to publish to AWS
    #events:
    # - s3: 
    #      bucket: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_USERFILES_BUCKET
    #      event: s3:ObjectCreated:*
    #      existing: true
    runtime: nodejs10.x # optional overwrite, default is provider runtime
    memorySize: 128 # optional, in MB, default is 1024
    timeout: 30 # optional, in seconds, default is 6
    environment:
      SIL_TR_HOST: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_HOST}
      SIL_TR_URLPATH: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_URLPATH}
    role: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_LAMBDA_ROLE}
    deploymentBucket:
      name: sil-transcriber-trigger # Deployment bucket name. Default is generated by the framework
