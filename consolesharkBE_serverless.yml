service: ConsoleSharkIOT
plugins:
  - serverless-plugin-split-stacks
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  role: arn:aws:iam::802130463548:role/lambda_admin_role
  stage: ${self:custom.stage}

functions:
  - ${file(src/api/Auth/Routes/routes.yml)}
  - ${file(src/api/User/Routes/routes.yml)}
  - ${file(src/api/Organization/Routes/routes.yml)}
  - ${file(src/api/Log/Routes/routes.yml)}
  - ${file(src/api/Request/Routes/routes.yml)}
  - ${file(src/api/Site/Routes/routes.yml)}
  - ${file(src/api/Host/Routes/routes.yml)}
  - ${file(src/api/Appliance/Routes/routes.yml)}
  - ${file(src/api/Dongle/Routes/routes.yml)}
  - ${file(src/api/Terminal/Routes/routes.yml)}

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.stage}-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email

    PoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.stage}-user-pool-client
        UserPoolId:
          Ref: UserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false

  Outputs:
    UserPoolId:
      Value:
        Ref: UserPool

    UserPoolClientId:
      Value:
        Ref: PoolClient
custom:
  stage: dev
  splitStacks:
    nestedStackCount: 20
    perFunction: false
    perType: false
    perGroupFunction: true
