service: locker-app-api

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-locker
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2

  environment:
    tableName: ${self:custom.tableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ LockerTable, Arn ]

functions:
  addFile:
    handler: addFile.main
    events:
      - http:
          path: files
          method: post
          cors: true
          authorizer: aws_iam
  getFile:
    handler: getFile.main
    events:
      - http:
          path: files/{id}
          method: get
          cors: true
          authorizer: aws_iam
  allFiles:
    handler: allFiles.main
    events:
      - http:
          path: files/
          method: get
          cors: true
          authorizer: aws_iam
  editFile:
    handler: editFile.main
    events:
      - http:
          path: files/{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteFile:
    handler: deleteFile.main
    events:
      - http:
          path: files/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  allFilesAdmin:
    handler: allFilesAdmin.main
    events:
      - http:
          path: admin/
          method: get
          cors: true
          authorizer: aws_iam
  deleteFileAdmin:
    handler: deleteFileAdmin.main
    events:
      - http:
          path: admin/{id}
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  - ${file(definitions/dynamo.yml)}
  - ${file(definitions/s3.yml)}
  - ${file(definitions/cognito.yml)}
  - ${file(definitions/cognito-identity.yml)}