service: deposit-service

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  stage: ${opt:stage, self:provider.stage}
  GroupsTableName: ${self:custom.stage}-group-configuration
  chequesTableName: ${self:custom.stage}-cheques
  s3PhotosBucketName: ${self:custom.stage}-cheques-photos2

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1

  environment:
    groupsTableName: ${self:custom.GroupsTableName}
    chequesTableName: ${self:custom.chequesTableName}
    chequePhotosBucketName: ${self:custom.s3PhotosBucketName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [GroupsTable, Arn]

functions:
  createDepositFile:
    handler: functions/createDepositFile.main
    events:
      - schedule: rate(24 hours)

resources:
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/s3-bucket.yml)}
