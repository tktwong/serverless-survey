service: serverless-aws-log-notifier

plugins:
  - serverless-plugin-warmup
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs8.10
  region: ap-northeast-1
  stage: ${env:DEPLOY_STAGE}
  logRetentionInDays: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:*
        - lambda:InvokeFunction
      Resource:
        - "*"
        - Fn::Join:
          - ":"
          - - arn:aws:lambda
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - function:${self:service}-${opt:stage, self:provider.stage}-*
  environment:
    DEPLOY_STAGE: ${env:DEPLOY_STAGE}
    NOTIFICATION_SLACK_TOKEN: ${env:NOTIFICATION_SLACK_TOKEN}
    NOTIFICATION_SLACK_CHANNEL: ${env:NOTIFICATION_SLACK_CHANNEL}

package:
  exclude:
    - .git/**
    - .nyc_output/**
    - coverage/**
    - .idea/**
    - src/**
    - node_modules/.bin/**
    - node_modules/.cache/**

custom:
  warmup:
    prewarm: true
  prune:
    automatic: true
    number: 3

functions:
  mockApi:
    handler: dist/src/app/function/slack.mockApi
    warmup: true
    tracing: true
    events:
      - http:
          path: mock
          method: get
          cors: true
    timeout: 30
  notifySlack:
    handler: dist/src/app/function/slack.notify
    warmup: true
    tracing: true
    events:
      - cloudwatchLog: "/aws/lambda/serverless-aws-log-notifier-${env:DEPLOY_STAGE}-mockApi"

resources:
  Resources:
    WarmUpPluginLogGroup:
      Properties:
        RetentionInDays: "1"
