service: lambda-functions

provider:
  name: aws
  runtime: nodejs4.3
  region: us-east-1
  stage: dev

resources:
  Resources:
    PostsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: 'Posts'
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:DescribeTable
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #       - dynamodb:DeleteItem
      # Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  addUser:
    handler: accounts.addUser
    events:
      - http:
          path: accounts
          method: any
  updateLeaderStatus:
    handler: accounts.updateLeaderStatus
    events:
      - http:
          path: accounts
          method: any
  updateProfilePic:
    handler: accounts.updateProfilePic
    events:
      - http:
          path: accounts
          method: any
  updateUserName:
    handler: accounts.updateUserName
    events:
      - http:
          path: accounts
          method: any
  getAccount:
    handler: accounts.getAccount
    events:
      - http:
          path: accounts
          method: any
  createAccountDetails:
    handler: accountDetails.createAccountDetails
    events:
      - http:
          path: accountDetails
          method: any
  updateBio:
    handler: accountDetails.updateBio
    events:
      - http:
          path: accountDetails
          method: any
  updateEmail:
    handler: accountDetails.updateEmail
    events:
      - http:
          path: accountDetails
          method: any
  getAccountDetails:
    handler: accountDetails.getAccountDetails
    events:
      - http:
          path: accountDetails
          method: any
  addFriend:
    handler: accountAdded.addFriend
    events:
      - http:
          path: accountAdded
          method: any
  getAdded:
    handler: accountAdded.getAdded
    events:
      - http:
          path: accountAdded
          method: any
  removeFriend:
    handler: accountAdded.removeFriend
    events:
      - http:
          path: accountAdded
          method: any
  addEvent:
    handler: calendar.addEvent
    events:
      - http:
          path: calendar
          method: any
  updateEventAdded:
    handler: calendar.updateEventAdded
    events:
      - http:
          path: calendar
          method: any
  updateEventTitle:
    handler: calendar.updateEventTitle
    events:
      - http:
          path: calendar
          method: any
  updateEventDate:
    handler: calendar.updateEventDate
    events:
      - http:
          path: calendar
          method: any
  removeAdded:
    handler: calendar.removeAdded
    events:
      - http:
          path: calendar
          method: any
  getEvent:
    handler: calendar.getEvent
    events:
      - http:
          path: calendar
          method: any
  getListOfUserEvents:
    handler: calendar.getListOfUserEvents
    events:
      - http:
          path: calendar
          method: any
  addEvent:
    handler: calendarDetails.addEvent
    events:
      - http:
          path: calendarDetails
          method: any
  updateEventReminder:
    handler: calendarDetails.updateEventReminder
    events:
      - http:
          path: calendarDetails
          method: any
  updateEventTimes:
    handler: calendarDetails.updateEventTimes
    events:
      - http:
          path: calendarDetails
          method: any
  updateEventStartTime:
    handler: calendarDetails.updateEventStartTime
    events:
      - http:
          path: calendarDetails
          method: any
  updateEventEndTime:
    handler: calendarDetails.updateEventEndTime
    events:
      - http:
          path: calendarDetails
          method: any
  updateAllDay:
    handler: calendarDetails.updateAllDay
    events:
      - http:
          path: calendarDetails
          method: any
  hideEvent:
    handler: calendarDetails.hideEvent
    events:
      - http:
          path: calendarDetails
          method: any
  getEventDetails:
    handler: calendarDetails.getEventDetails
    events:
      - http:
          path: calendarDetails
          method: any
  createEngagements:
    handler: engagements.createEngagements
    events:
      - http:
          path: engagements
          method: any
  createComment:
    handler: engagements.createComment
    events:
      - http:
          path: engagements
          method: any
  createLikes:
    handler: engagements.createLikes
    events:
      - http:
          path: engagements
          method: any
  savePost:
    handler: engagements.savePost
    events:
      - http:
          path: engagements
          method: any
  getListPostComments:
    handler: engagements.getListPostComments
    events:
      - http:
          path: engagements
          method: any
    handler: engagements.getUserSavedPosts
    events:
      - http:
          path: engagements
          method: any
  removeComment:
    handler: engagements.removeComment
    events:
      - http:
          path: engagements
          method: any
  createForms:
    handler: forms.createForms
    events:
      - http:
          path: forms
          method: any
  formStatus:
    handler: forms.formStatus
    events:
      - http:
          path: forms
          method: any
  removeForm:
    handler: forms.removeForm
    events:
      - http:
          path: forms
          method: any
  getUserForm:
    handler: forms.getUserForm
    events:
      - http:
          path: forms
          method: any
  getListOfUserForms:
    handler: forms.getListOfUserForms
    events:
      - http:
          path: forms
          method: any
  createFormDetails:
    handler: formDetails.createFormDetails
    events:
      - http:
          path: formDetails
          method: any
  updateRequests:
    handler: formDetails.updateRequests
    events:
      - http:
          path: formDetails
          method: any
  getFormDetails:
    handler: formDetails.getFormDetails
    events:
      - http:
          path: formDetails
          method: any
  createInterestsList:
    handler: interests.createInterestsList
    events:
      - http:
          path: interests
          method: any
  viewInterestList:
    handler: interests.viewInterestList
    events:
      - http:
          path: interests
          method: any
  createMessage:
    handler: messages.createMessage
    events:
      - http:
          path: messages
          method: any
  getListOfUserMessages:
    handler: messages.getListOfUserMessages
    events:
      - http:
          path: messages
          method: any
  removeFromGroup:
    handler: messages.removeFromGroup
    events:
      - http:
          path: messages
          method: any
  deleteMessage:
    handler: messages.deleteMessage
    events:
      - http:
          path: messages
          method: any
  createMessage:
    handler: messageDetail.createMessage
    events:
      - http:
          path: messageDetail
          method: any
  updateMessage:
    handler: messageDetail.updateMessage
    events:
      - http:
          path: messageDetail
          method: any
  getMessageDetails:
    handler: messageDetail.getMessageDetails
    events:
      - http:
          path: messageDetail
          method: any
  createPost:
    handler: posts.createPost
    events:
      - http:
          path: posts
          method: any
  getListOfUserPosts:
    handler: posts.getListOfUserPosts
    events:
      - http:
          path: posts
          method: any
  getListPosts:
    handler: posts.getListPosts
    events:
      - http:
          path: posts
          method: any
  updatePostDescription:
    handler: posts.updatePostDescription
    events:
      - http:
          path: posts
          method: any
  hidePosts:
    handler: posts.hidePosts
    events:
      - http:
          path: posts
          method: any
  createSystem:
    handler: systems.createSystem
    events:
      - http:
          path: systems
          method: any
  getSystem:
    handler: systems.getSystem
    events:
      - http:
          path: systems
          method: any
  getListOfUserSystems:
    handler: systems.getListOfUserSystems
    events:
      - http:
          path: systems
          method: any
  getListOfSystems:
    handler: systems.getListOfSystems
    events:
      - http:
          path: systems
          method: any
  updateSystemPhoto:
    handler: systems.updateSystemPhoto
    events:
      - http:
          path: systems
          method: any
  updateSystemTitle:
    handler: systems.updateSystemTitle
    events:
      - http:
          path: systems
          method: any
  addSystemDetails:
    handler: systemDetails.addSystemDetails
    events:
      - http:
          path: systemDetails
          method: any
  updateSystemStatus:
    handler: systemDetails.updateSystemStatus
    events:
      - http:
          path: systemDetails
          method: any
  updateSystemFinished:
    handler: systemDetails.updateSystemFinished
    events:
      - http:
          path: systemDetails
          method: any
  updateSystemPurchase:
    handler: systemDetails.updateSystemPurchase
    events:
      - http:
          path: systemDetails
          method: any
  addFriends:
    handler: systemDetails.addFriends
    events:
      - http:
          path: systemDetails
          method: any
  updateSystemDescription:
    handler: systemDetails.updateSystemDescription
    events:
      - http:
          path: systemDetails
          method: any
  removeFriend:
    handler: systemDetails.removeFriend
    events:
      - http:
          path: systemDetails
          method: any
  getSystemDetails:
    handler: systemDetails.getSystemDetails
    events:
      - http:
          path: systemDetails
          method: any
  createSteps:
    handler: systemSteps.createSteps
    events:
      - http:
          path: systemSteps
          method: any
  toogleStep:
    handler: systemSteps.toogleStep
    events:
      - http:
          path: systemSteps
          method: any
  changeStepInfo:
    handler: systemSteps.changeStepInfo
    events:
      - http:
          path: systemSteps
          method: any
  changeStepPosition:
    handler: systemSteps.changeStepPosition
    events:
      - http:
          path: systemSteps
          method: any
  removeStep:
    handler: systemSteps.removeStep
    events:
      - http:
          path: systemSteps
          method: any
  addStepToList:
    handler: systemSteps.addStepToList
    events:
      - http:
          path: systemSteps
          method: any
  getSystemSteps:
    handler: systemSteps.getSystemSteps
    events:
      - http:
          path: systemSteps
          method: any
  selectInterests:
    handler: userIntersts.selectInterests
    events:
      - http:
          path: userIntersts
          method: any
  getUserInterests:
    handler: userIntersts.getUserInterests
    events:
      - http:
          path: userIntersts
          method: any
  changeSelected:
    handler: userIntersts.changeSelected
    events:
      - http:
          path: userIntersts
          method: any

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      migrate: true
      port: 8100
      dbPath: ~/Desktop
  serverless-offline:
    babelOptions:
      presets: ["es2015"]
