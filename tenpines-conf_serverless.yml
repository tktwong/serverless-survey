service: tenpines-conf

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables (Mo lo utilizamos en este ejemplo)

provider:
  name: aws # El nombre del proovedor
  runtime: nodejs12.x # El lenguaje que utilizamos
  stage: dev # La stage por defecto
  region: us-east-1 # La región de aws
  environment:
    stage: ${self:provider.stage}
    tableName: ${ssm:${opt:stage}_TABLE_NAME}
    repository: ${ssm:${opt:stage}_REPOSITORY}

   # Las policies para el role que tendrán nuestras funciones
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Scan"
        - "cloudformation:DescribeStackResource"
        - "cloudformation:DeleteStack"
        - "s3:ListObjects"
        - "s3:DeleteObject"
        - "lambda:DeleteFunction"
        - "lambda:RemovePermission"
        - "logs:DeleteLogGroup"
        - "apigateway:DELETE"
        - "iam:DeleteRolePolicy"
        - "iam:DeleteRole"
        - "s3:DeleteBucket"
        - "s3:DeleteBucketPolicy"
      Resource: "*"

functions:
  addQuote:
    handler: src/handlers/add.handler
    events:
      - http:
          path: add
          method: post
  getRandomQuote:
    handler: src/handlers/getRandom.handler
    events:
      - http:
          path: getRandom
          method: get
  deleteStack:
    handler: stacks/src/handlers/stacks/delete.handler
    events:
      - http:
          path: delete
          method: post
          request:
            schema:
              application/json: ${file(stacks/src/libs/delete_request_model_schema.json)}
