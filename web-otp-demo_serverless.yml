service:
  name: web-otp-demo-api
custom:
  defaultStage: dev
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  profile: aa
  stage: ${opt:stage, self:custom.defaultStage}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'sns:Publish'
      Resource: '*'
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}*'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DYNAMODB_TABLE: ${self:service.name}-${self:provider.stage}
    OTP_TABLE: ${self:service.name}-${self:provider.stage}-otp
    AUTH_KEY: ${env:AUTH_KEY}
    DOMAIN: ${env:DOMAIN}
functions:
  customauth:
    handler: handler.customauth
  send:
    handler: handler.send
    events:
      - http:
          method: post
          path: send
          authorizer: customauth
          cors: true
  otp:
    handler: handler.otp
    events:
      - http:
          method: post
          path: otp
          cors: true
resources:
  Resources:
    User:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.OTP_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
