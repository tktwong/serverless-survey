# serverless.yml

service: antibiotic-flask

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  usersTable: 'users-table-${self:provider.stage}'
  metricsTable: 'metrics-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["MetricsDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.usersTable}
    METRICS_TABLE: ${self:custom.metricsTable}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getUser:
    handler: wsgi_handler.handler
    events:
      - http: 'GET /users/{proxy+}'
  getMetrics:
    handler: wsgi_handler.handler
    events:
      - http: 'GET /metrics/{proxy+}'
  createUser:
    handler: wsgi_handler.handler
    events:
      - http: 'POST /users'
  postMetrics:
    handler: wsgi_handler.handler
    events:
      - http: 'POST /metrics'

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTable}
    MetricsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: metricId
            AttributeType: S
          -
            AttributeName: datetime
            AttributeType: S
        KeySchema:
          -
            AttributeName: metricId
            KeyType: HASH
          - 
            AttributeName: datetime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.metricsTable}
