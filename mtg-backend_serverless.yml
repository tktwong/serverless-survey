service: import-service

frameworkVersion: '2'

provider:
  profile: andery
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBuckets"
      Resource:
        - "arn:aws:s3:::mtg-application-import-bucket"
    - Effect: "Allow"
      Action: "s3:*"
      Resource:
        - "arn:aws:s3:::mtg-application-import-bucket/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - "arn:aws:sqs:eu-west-1:373270479572:catalog-item-queue"

  environment:
    SQS_URL: "https://sqs.eu-west-1.amazonaws.com/373270479572/catalog-item-queue"

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

functions:
  importProductsFile:
    handler: handlers/import-product-file/index.handler
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: tokenAuthorizer
            arn:
              Fn::Join:
                - ':'
                - - 'arn:aws:lambda'
                  - Ref: 'AWS::Region'
                  - Ref: 'AWS::AccountId'
                  - 'function:authorization-service-dev-basicAuthorizer'
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: handlers/import-file-parser/index.handler
    events:
      - s3:
          bucket: mtg-application-import-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    GatewayResponseDenied:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: ACCESS_DENIED
        RestApiId: !Ref ApiGatewayRestApi
    GatewayResponseUnauthorized:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: UNAUTHORIZED
        RestApiId: !Ref ApiGatewayRestApi
