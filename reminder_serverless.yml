service:
  name: reminder
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  awsAccount: ${opt:awsAccount}
  tableName: ${opt:tableName, 'write_blog_every_week'}
  slackApiUrl: ${opt:slackApiUrl}
  slackChannelName: ${opt:slackChannelName, 'general'}
  slackToken: ${opt:slackToken}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  memorySize: 128
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    WBEW_SLACK_API_URL: ${self:custom.slackApiUrl}
    WBEW_SLACK_CHANNEL_NAME: ${self:custom.slackChannelName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:${self:custom.awsAccount}:table/${self:custom.tableName}"

functions:
  result:
    handler: blog.result
    events:
      - schedule: cron(0 15 ? * SUN *)
  remind:
    handler: blog.remind
    events:
      - schedule: cron(0 06 ? * WED,FRI,SUN *)
  register:
    handler: blog.register
    environment:
      WBEW_SLACK_TOKEN: ${self:custom.slackToken}
    events:
      - http:
          method: get
          path: register

