service:
  name: test-sls-data-mapper

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stages:
    - dev
  dynamodb:
    start:
      port: 8001
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
    stages:
      - dev

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline # adding the plugin to be able to run the offline emulation

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"



functions:
  create-customer:
    handler: src/index.createAccountLambda
    events:
      - http:
          method: post
          path: customer
          cors: true


resources:
  Resources:
    AuthServiceDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: entityType
            AttributeType: S
          - AttributeName: customerId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: entityType
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: customerId-index
            KeySchema:
              - AttributeName: customerId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
        TimeToLiveSpecification:
          - AttributeName: ttl
            Enabled: true
        TableName: ${self:provider.environment.DYNAMODB_TABLE}