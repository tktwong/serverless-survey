# set environment variable AWS_CLIENT_TIMEOUT to increase timeout

service: open-bot-v1

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: dev
  region: us-east-1
  logRetentionInDays: 14
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"
    - Effect: "Allow"
      Action:
        - "*"
      Resource: "arn:aws:dynamodb:us-east-1:*:table/open-bot-${opt:stage}-queue"
    - Effect: "Allow"
      Action:
        - "*"
      Resource:
       - "arn:aws:dynamodb:us-east-1:*:table/open-bot-${opt:stage}-schedule"
       - "arn:aws:dynamodb:us-east-1:*:table/open-bot-${opt:stage}-schedule/index/*"

plugins:
  - serverless-offline

package:
  individually: true
  exclude:
    - '**'
  include:
    - lib/node_modules/**
    - handlers.js

functions:
  processTasks:
    handler: handlers.processTasks
    timeout: 120
    package:
      include:
        - lib/open-bot-process-tasks/**
        - lib/open-bot/**
        - lib/open-bot-scheduler/**
        - config.json
    environment:
      STAGE: "${opt:stage}"
    events:
      - stream:
          type: dynamodb
          batchSize: 20
          startingPosition: TRIM_HORIZON
          arn:
            Fn::GetAtt:
              - QueueDynamoDbTable
              - StreamArn
  handleGithubEvent:
    handler: handlers.handleGithubEvent
    package:
      include:
        - lib/open-bot-handle-github-event/**
        - lib/open-bot/**
        - config.json
    environment:
      STAGE: "${opt:stage}"
    events:
      - http:
          path: github
          method: POST
          timeout: 20
  processScheduledTasks:
    handler: handlers.processScheduledTasks
    timeout: 300
    package:
      include:
        - lib/open-bot-process-scheduled-tasks/**
        - config.json
    environment:
      STAGE: "${opt:stage}"
    events:
      - schedule: rate(10 minutes)
resources:
  Resources:
    QueueDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: item
            AttributeType: S
        KeySchema:
          -
            AttributeName: item
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        TableName: "open-bot-${opt:stage}-queue"
    ScheduleDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: item
            AttributeType: S
          -
            AttributeName: epoch
            AttributeType: N
          -
            AttributeName: schedule
            AttributeType: N
        KeySchema:
          -
            AttributeName: item
            KeyType: HASH
        GlobalSecondaryIndexes:
          -
            IndexName: schedule-index
            KeySchema:
              -
                AttributeName: epoch
                KeyType: HASH
              -
                AttributeName: schedule
                KeyType: RANGE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "open-bot-${opt:stage}-schedule"


