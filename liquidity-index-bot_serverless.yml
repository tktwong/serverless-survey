service:
  name: coinph-api

plugins:
  - serverless-webpack
  - serverless-prune-plugin

custom:
  myStage: ${opt:stage, self:provider.stage}
  defaultStage: dev
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs10.x
  logRetentionInDays: 3 
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:custom.myStage}
    S3_BUCKET: ${self:service}-coinph-historical-data-${opt:stage, self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"

functions:
  update: 
    handler: handler.update
    events:
      - http:
          path: coinph-daily-volume
          method: post
          cors: true
  getList: 
    handler: handler.getList
    events:
      - http:
          path: coinph-daily-volume
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                recordNum: true # number of records to fetch
  migrate: 
    handler: handler.migrate
    timeout: 900 
  importFromCsv: 
    handler: handler.importFromCsv
    timeout: 300 
    events:
      - s3: "${self:provider.environment.S3_BUCKET}"
        event: s3:ObjectCreated:*
        rules:
          - suffix: .csv

resources:
  Resources:
    CoinPhDailyVolume:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
          -
            AttributeName: date 
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: date 
            KeyType: RANGE 
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:provider.environment.DYNAMODB_TABLE}"
