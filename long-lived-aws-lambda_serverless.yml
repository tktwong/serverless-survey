service: eventbus

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 256
  timeout: 5
  stage: ${opt:stage, self:custom.defaultStage}
  environment:
    SALESFORCE_URL: https://test.salesforce.com
    SALESFORCE_USERNAME: brian.pfeil@merck.com.gbld6poc
    SALESFORCE_PASSWORD: ${ssm:eventbus.SALESFORCE_PASSWORD}
    EVENT_OBJECT_NAME: Log__e
    EVENT_NAME: /event/Log__e
    CONFIG_TABLE_NAME: ${self:custom.configTableName}
    EVENT_TABLE_NAME: ${self:custom.eventsTableName}
    EVENTS_STREAM_NAME: ${self:custom.eventsStreamName}
  iamRoleStatements: 
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: "arn:aws:dynamodb:#{AWS::Region}:*:table/${self:custom.pre}-*"
      - Effect: Allow
        Action:
          - lambda:*
        Resource: "arn:aws:lambda:#{AWS::Region}:*:function:${self:custom.pre}-*"
      - Effect: Allow
        Action:
          - states:*
        Resource: "arn:aws:states:#{AWS::Region}:*:stateMachine:*"        
      - Effect: Allow
        Action:
          - SNS:*
        Resource: "arn:aws:sns:#{AWS::Region}:*:${self:custom.pre}-*"
      - Effect: Allow
        Action:
          - kinesis:*
        Resource: "arn:aws:kinesis:#{AWS::Region}:*:stream/${self:custom.pre}-*"

plugins:  
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-step-functions

custom:
  defaultStage: dev
  pre: ${self:service}-${self:provider.stage}
  configTableName: ${self:service}-${self:provider.stage}-config
  eventsTableName: ${self:service}-${self:provider.stage}-events
  eventsStreamName: ${self:service}-${self:provider.stage}-events
  snsEventTopicName: ${self:service}-${self:provider.stage}-events
  e2eVerifyEventCaptureStepFunctionName: e2eVerifyEventCapture
  verifyEventCaptureStepFunctionArn: ${self:resources.Outputs.E2eVerifyEventCapture.Value}

functions:
  cometdToSns:
    handler: handler.cometdToSns
    memorySize: 256
    timeout: 10
    environment:
      SNS_ARN: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.snsEventTopicName}
  salesforcePlatformEvent:
    handler: handler.salesforcePlatformEvent
    memorySize: 256
    events:
      - sns: ${self:custom.snsEventTopicName}
  verifyEventCapture:
    handler: handler.verifyEventCapture
    memorySize: 512
    timeout: 300
    environment:
      TRUNCATE_LAMBDA_NAME: ${self:service}-${self:provider.stage}-truncateTable
      COMET_TO_SNS_LAMBDA_NAME: ${self:service}-${self:provider.stage}-cometdToSns
  truncateTable:
    handler: handler.truncateTable
    memorySize: 512
    timeout: 60
  variablesTests:
    handler: handler.variablesTests
    environment:
      ENV1: ${self:service}-${self:provider.stage}-#{AWS::AccountId}-#{AWS::Region}
  testStepFunctionInvoke:
    handler: handler.testStepFunctionInvoke
    environment:
      arn: ${self:custom.verifyEventCaptureStepFunctionArn}
  postInstall:
    handler: handler.postInstall
  kinesisStreamHandler:
    handler: handler.kinesisStreamHandler
    events:
      - stream:
          type: kinesis
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/${self:custom.eventsStreamName}
  putRecordsToKinesisStream:
    handler: handler.putRecordsToKinesisStream
  cloudWatchAlarmTest:
    handler: handler.cloudWatchAlarmTest

stepFunctions:
  stateMachines:
    E2eVerifyEventCapture:
      name: ${self:custom.e2eVerifyEventCaptureStepFunctionName}
      role: arn:aws:iam::#{AWS::AccountId}:role/${self:service}-${self:provider.stage}-#{AWS::Region}-lambdaRole
      definition:
        Comment: "truncateEventTable"
        StartAt: truncateEventTable
        States:
          truncateEventTable:
            Type: Task
            InputPath: "$"
            ResultPath: "$"
            OutputPath: "$"
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-truncateTable
            Catch:
              - ErrorEquals:
                  - States.ALL
                Next: CatchAllFallback
            End: true
          CatchAllFallback:
            Type: Fail
            Error: Error
            Cause: This is a fallback from any error code

resources:
  Resources:
    eventStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:custom.eventsStreamName}
        ShardCount: 1
    eventbus:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.configTableName}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    events:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.eventsTableName}
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
          - AttributeName: _event
            AttributeType: S            
          - AttributeName: _timestamp
            AttributeType: S
          - AttributeName: replayId
            AttributeType: N            
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
          - AttributeName: _timestamp
            KeyType: RANGE            
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          -
            IndexName: EventReplayIdIndex
            KeySchema:
              -
                AttributeName: _event
                KeyType: HASH
              -
                AttributeName: replayId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
  Outputs:
    E2eVerifyEventCapture:
      Description: The ARN of E2eVerifyEventCapture state machine
      Value:
        Ref: E2eVerifyEventCapture
    eventStreamArn:
      Description: The ARN of kinesis event stream
      Value:
        Fn::GetAtt:
          - eventStream
          - Arn
    eventStreamName:
      Description: The kinesis event stream name
      Value:
        Ref: eventStream