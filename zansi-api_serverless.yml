# NOTE: update this with your service name
service: zansi-api

frameworkVersion: "1.35.1"
# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-export-env

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  devCognitoPool: ${self:custom.environment.UserPoolId}
  prodCognitoPool: ${self:custom.environment.UserPoolId}
  OrdersDB: ${self:custom.stage}-order
  StudentsDB: ${self:custom.stage}-student
  #tableName: ${self:custom.stage}-orders
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  serverless-offline:
    port: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}
  
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  
  environment:
    OrdersDB: ${self:custom.OrdersDB}
    StudentsDB: ${self:custom.StudentsDB}
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStream



      Resource:
        - "Fn::GetAtt": [OrdersTable, Arn]
        - "Fn::GetAtt": [StudentsTable, Arn]



functions:
  graphql:
    handler: src/graphql.graphqlHandler
    environment:
      SLS_DEBUG: true
    events:
      - http:
          path: graphql
          method: post 
          cors: true
          integration: lambda-proxy
          authorizer:
              arn:aws:cognito-idp:us-east-1:{}:userpool/us-east-1_kqavT3wHs
              arn:aws:cognito-idp:us-east-1:{}:userpool/us-east-1_ZuB3MH0bV



      - http:
          path: graphql
          method: get 
          cors: true
          integration: lambda-proxy

  #record:
    #handler: src/graphql.record
    #events: 
      #- stream: 
       # type: dynamodb
        #batchSize: 1
        #arn: 
        # Fn::GetAtt: [OrdersTable, StreamArn]
              
            
          


resources:
  #Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  #DynamoDB
  #- ${file(resources/dynamodb-table.yml)}
  
  - ${file(resources/OrdersDB.yml)}
  - ${file(resources/StudentsDB.yml)}




