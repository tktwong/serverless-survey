service: speakers-api

provider:
  name: aws
  region: us-east-1
  runtime: nodejs10.x
  stage: ${opt:env, 'dev'}
  environment:
    SPEAKERS_TABLE: ${self:custom.config.${self:provider.stage}.table_name}
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource:
    - Fn::GetAtt: [SpeakersTable, Arn]
  - Effect: Allow
    Action:
    - ses:SendEmail
    Resource: '*'

custom:
  config:
    dev:
      table_name: dev-speakers
      table_rcu: 1
      table_wcu: 1
    stage:
      table_name: stage-speakers
      table_rcu: 5
      table_wcu: 25
    prod:
      table_name: speakers
      table_rcu: 5
      table_wcu: 200

functions:
  saveSpeaker:
    handler: handler.saveSpeaker
    events:
    - http: POST /v1/speakers
  updateSpeaker:
    handler: handler.updateSpeaker
    events:
    - http: PUT /v1/speakers/{email}
  getSpeakers:
    handler: handler.getSpeakers
    events:
    - http: GET /v1/speakers
  getSpeaker:
    handler: handler.getSpeaker
    events:
    - http: GET /v1/speakers/{email}
  deleteSpeaker:
    handler: handler.deleteSpeaker
    events:
    - http: DELETE /v1/speakers/{email}
  sendWelcomeEmail:
    handler: handler.sendWelcomeEmail
    events:
    - stream:
        type: dynamodb
        arn:
          Fn::GetAtt: [SpeakersTable, StreamArn]

resources:
- ${file(resources/speakers-table.yml)}
