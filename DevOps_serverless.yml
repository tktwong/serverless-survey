service: serverless-work-29-march


provider:
  name: aws
  runtime: nodejs12.x
  profile: aamir
  stage: dev
  region: us-east-1
  environment:
    tableName: playerTB
    bucketName: aamir-learning
  iamRoleStatements: 
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:*
      Resource: '*'


plugins:
  - serverless-s3-sync

package:
  individually: true
  
custom:
  gp: test-aamir
  tableName: playerTB  
  bucketName: aamir-learning   
  s3Sync: 
    - bucketName: aamir-learning
      localDir: uploads


functions:
  writeFile:
    handler: lambdas/endpoint/S3Bucket/writeFile.handler_api
    environment: ${self:environment.bucketName}
    events:
      - http:
          path: write-file/{fileName}
          method: POST
          cors: true

  getFile:
    handler: lambdas/endpoint/S3Bucket/getFile.handler_api
    environment: ${self:environment.bucketName}
    events:
      - http:
          path: get-file/{fileName}
          method: GET
          cors: true

  getPlayerScore:
    handler: lambdas/endpoint/DynamoDB/getPlayerScore.handler_api
    environment: ${self:environment.tableName}
    events:
      - http:
          path: get-player-score/{ID}
          method: GET
          cors: true

  writePlayerScore:
    handler: lambdas/endpoint/DynamoDB/writePlayerScore.handler_api
    environment: ${self:environment.tableName}
    events:
      - http:
          path: write-player-score/{ID}
          method: POST
          cors: true    
          
  deletePlayerScore:
    handler: lambdas/endpoint/DynamoDB/deletePlayerScore.handler_api
    environment: ${self:environment.tableName}    
    events:
      - http:
          path: delete-player-score/{ID}
          method: DELETE
          cors: true   

  
  updatePlayerScore:
    handler: lambdas/endpoint/DynamoDB/updatePlayerScore.handler_api
    environment: ${self:environment.tableName}    
    events:
      - http:
          path: update-player-score/{ID}
          method: PUT
          cors: true  
          
          

resources:
  Resources: 
      secGroupName:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupName: ${self:custom.gp}
          GroupDescription: This is serverless test to make sure some point ive in mind.
          VpcId: 'vpc-a0eeacda'
          SecurityGroupIngress:
            - CidrIp: 0.0.0.0/0
              IpProtocol: tcp
              FromPort: 22
              ToPort: 22
          Tags:
            - Key: name 
              Value: aamir-sg-ssh

         
         