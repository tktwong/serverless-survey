service:
  name: request-amz-stock-update

package:
  individually: true
  exclude:
    - '**/**'

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service.name}-stack
  stage: ${opt:stage, 'prod'}
  region: eu-central-1
  deploymentBucket:
    name: kaskadi-serverless-deployment-bucket
  apiGateway:
    restApiId: !ImportValue kaskadi-stocks-api-id
    restApiRootResourceId: !ImportValue kaskadi-stocks-api-amz-resource-id
  tags:
    app: kaskadi
    service: ${self:service.name}
    logical-unit: stocks
    type: schedule and http

layers:
  RequestAmzStockUpdateLayer:
    path: layer
    name: ${self:service.name}-layer
    description: Layer for ${self:service.name}
    compatibleRuntimes:
      - nodejs10.x
      - nodejs12.x
    licenseInfo: MIT
    package:
      include:
        - '**/**'

functions:
  RequestAmzStockUpdate:
    handler: request-amz-stock-update.handler
    name: ${self:service.name}
    layers:
      - { Ref: RequestAmzStockUpdateLayerLambdaLayer }
    package:
      include:
        - 'request-amz-stock-update.js'
        - 'helpers/**'
        - 'marketplaces.js'
    environment:
      MWS_KEY_ID: ${env:MWS_KEY_ID}
      MWS_KEY_SECRET: ${env:MWS_KEY_SECRET}
      AMZ_EU_SELLER_ID: ${env:AMZ_EU_SELLER_ID}
    events:
      - http:
          method: get
          path: request-update
          cors: true
      - schedule:
          rate: cron(0 7 ? * * *) # runs every day at 7:00AM
          enabled: true
