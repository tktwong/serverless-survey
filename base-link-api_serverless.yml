# https://docs.serverless.com
service: base-link-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-1
  apiName: ${self:service}-${self:provider.stage}

functions:
  access-token:
    handler:  src/accessToken.func
    name: ${self:service}-access-token-${self:provider.stage}
    events:
      - http:
          method: get
          path: access-token
          integration: lambda
          cors: true
  refresh-token:
    handler:  src/refreshToken.func
    name: ${self:service}-refresh-token-${self:provider.stage}
    events:
      - http:
          method: get
          path: refresh-token
          integration: lambda
          cors: true
  user:
    handler: src/user.func
    name: ${self:service}-user-${self:provider.stage}
    events:
      - http:
          method: get
          path: user
          integration: lambda
          cors: true
  order:
    handler: src/orders/orders.func
    name: ${self:service}-orders-${self:provider.stage}
    events:
      - http:
          method: get
          path: orders
          integration: lambda
          cors: true
  next-order:
    handler: src/orders/next.func
    name: ${self:service}-orders-next-${self:provider.stage}
    events:
      - http:
          method: get
          path: next-orders
          integration: lambda
          cors: true
  order-detail:
    handler: src/orders/detail.func
    name: ${self:service}-orders-detail-${self:provider.stage}
    events:
      - http:
          method: get
          path: order-detail
          integration: lambda
          cors: true
