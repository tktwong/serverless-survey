service: "vs-spaceportal-backend-lab"

plugins:
  - serverless-cloudwatch-dashboard
  - serverless-iam-roles-per-function

frameworkVersion: ">=1.6.0 <2.1.0"

provider:
  name: aws
  stage: ${self:custom.environment.stage}
  region: ${self:custom.environment.region}
  memorySize: 512
  timeout: 5
  logRetentionInDays: 14
  versionFunctions: false
  stackName: ${self:service}-${self:provider.stage}
  runtime: dotnetcore2.1
  environment:
    DEBUG: false
    UNWRAP_AGGREGATE_EXCEPTIONS: 1   
  deploymentPrefix: serverless # The S3 prefix under which deployed artifacts should be stored. Default is serverless
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: "*"
  tags: # Optional service wide function tags
    stream: 'spaceportal'
  tracing:
    apiGateway: true
    lambda: true

custom:
  awsLambda: 'arn:aws:lambda'
  environment:
    stage: ${opt:stage, 'playground'}
    region: ${opt:region, 'eu-north-1'}
  accountNumbers:
    playground: '286643423608'
    master: '587813452421'
    dev: '732848455604'
    staging: '442341849784'
    prod: '428243677256'
  stages:
    - dev
    - staging
    - prod
  serverless-cloudwatch-dashboard: # https://github.com/vegah/serverless-cloudwatch-dashboard/blob/master/readme.md
    lambda:
      metrics:
        - Invocations
        - Errors
        - Duration
  
  serverless-iam-roles-per-function:
    defaultInherit: true

package:
  artifact: bin/release/netcoreapp2.1/deploy-package.zip

functions:
  UserHandler:
    handler: SpacePortal.Lambda::SpacePortal.Lambda.Functions.UserHandler::HandleAsync
    description: Test lambda for users
    timeout: 20
