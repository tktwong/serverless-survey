# NOTE: update this with your service name
service: auction9-backend

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  #profile: myProfile # This is name of profile that I use for aws credentials
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
    # Currently for localhost mysql with default settings
    # Use AWS configs later
    #MYSQL_ENDPOINT: localhost
    #MYSQL_PORT: 3306 #8889 S/3306 D
    #MYSQL_DATABASE: auction9
    #MYSQL_USER: root
    #MYSQL_PASSWORD: 12345 #root S/12345 D

functions:
  # return 'auction' by id
  getAuction:
    handler: handler.getAuction
    events:
      - http:
          path: auctions/{id}
          method: get
          cors: true
          
  # return all 'active' auctions
  getActiveAuctions:
    handler: handler.getActiveAuctions
    events:
      - http:
          path: auctions
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - NoAuth # need this because of custom header
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Origin
          
  # creates new auction
  postAuction:
    handler: handler.postAuction
    events:
      - http:
          path: auctions
          method: post
          cors: true

  # returns auction bids (users' bids history)
  getAuctionBids:
    handler: handler.getAuctionBids
    events:
      - http:
          path: auctions/{id}/bids
          method: get
          cors: true

# return all users auctions
  getUserAuctions:
    handler: handler.getUserAuctions
    events:
      - http:
          path: userAuctions
          method: get
          cors: true

  # updates auction
  updateAuction:
    handler: handler.updateAuction
    events:
      - http:
          path: updateAuction
          method: put
          cors: true

  # update status to 'inactive'
  stopActiveAuction:
    handler: handler.stopActiveAuction
    events:
      - http:
          path: myauctions/{id}/stop
          method: put
          cors: true

  # return all my won auctions
  getUserWonAuctions:
    handler: handler.getUserWonAuctions
    events:
      - http:
          path: wonauctions
          method: get
          cors: true

  # update status to 'realized'
  realizeFinishedAuction:
    handler: handler.realizeFinishedAuction
    events:
      - http:
          path: myauctions/{id}
          method: put
          cors: true

  # creates new bid
  postNewBid:
    handler: handler.postNewBid
    events:
      - http:
          path: auctions/{id}/bids
          method: post
          cors: true
