service: rimac-aws-lambda-api-service
custom:
  serverless-offline:
    port: 4000
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  #sls config credentials --provider aws --key {iam-key} --secret {iam-secret} --profile aws-serverless
  profile: aws-serverless
  environment:
    ERROR_MSG: "Error Interno!"
    FAN_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: "*"

resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.FAN_TABLE}

functions:
  fan:
    handler: handler.fan
    events:
      - http:
          method: post
          path: /fan
          integration: lambda
          request:
              template:
                application/json: ${file(request_input.template)}
  fans:
    handler: handler.fans
    events:
      - http:
          method: get
          path: /fans
          integration: lambda
          request:
              template:
                application/json: ${file(request_input.template)}
plugins:
  - serverless-offline