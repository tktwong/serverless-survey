service: twitch-data-collector

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 256
  timeout: 90
  region: us-west-1

functions:
  captureCurrentGames:
    handler: handler.captureCurrentGames
    events:
      # Every hour
      - schedule: cron(0 * * * ? *)
    environment:
      PGCLIENTENCODING: utf8
      PGDATABASE: ${file(./serverless.env.yml):${opt:stage}.PGDATABASE}
      PGHOST: ${file(./serverless.env.yml):${opt:stage}.PGHOST}
      PGPASSWORD: ${file(./serverless.env.yml):${opt:stage}.PGPASSWORD}
      PGPORT: ${file(./serverless.env.yml):${opt:stage}.PGPORT}
      PGUSER: ${file(./serverless.env.yml):${opt:stage}.PGUSER}
      TWITCH_CLIENT_ID: ${file(./serverless.env.yml):${opt:stage}.TWITCH_CLIENT_ID}

# From the example https://github.com/rentrop/serverless-postgraphql/blob/master/serverless.yml
resources:
  Resources:
    pgSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Access to Postgres
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0

    pgDB:
      Type: "AWS::RDS::DBInstance"
      Properties:
        Engine: "postgres"
        EngineVersion: "9.6.2"
        DBInstanceClass: "db.t2.micro"
        MultiAZ: false
        StorageType: "gp2"
        AllocatedStorage: 20
        DBInstanceIdentifier: "stream-assist"
        MasterUsername: ${file(./serverless.env.yml):${opt:stage}.PGUSER}
        MasterUserPassword: ${file(./serverless.env.yml):${opt:stage}.PGPASSWORD}
        VPCSecurityGroups:
          - Fn::GetAtt:
            - pgSecurityGroup
            - GroupId
        DBName: "twitch"
        Port: "5432"

