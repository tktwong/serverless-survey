# NOTE: update this with your service name
service: fishball

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: ap-east-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    region: ${self:provider.region}
    OrderTable: ${self:custom.stage}-OrderTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        arn:aws:dynamodb:${self:provider.region}:*:*

  #  sampleEnvVar: ${env:SAMPLE_ENV_VAR}
# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables


custom:
  stage: ${opt:stage, self:provider.stage}

functions:
  addOrder:
    handler: lambda/order.addOrder
    events:
      - http:
          path: order
          method: post

resources:
  - Resources:
      OrderTable:
        Type: AWS::DynamoDB::Table
        DeletionPolicy: Retain
        Properties:
          TableName: ${self:provider.environment.OrderTable}
          AttributeDefinitions:
            - AttributeName: orderId
              AttributeType: S
          KeySchema:
            - AttributeName: orderId
              KeyType: HASH
          BillingMode: PAY_PER_REQUEST