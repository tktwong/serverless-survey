# NOTE: update this with your service name
service: random-admin

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
# - serverless-mysql
#  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  bucket: random-admin-images
  bundle:
    sourcemaps: false
    tsConfig: './tsconfig.json'
    caching: false
    linting: false
    # aliases:
    #   - ".": ./
    
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

functions:
  auth:
    handler: authorizer/index.authorizer
  generateToken:
    handler: authorizer/generateToken.generateToken
    events:
      - http:
          path: generateToken
          method: post
          cors:
            origin: http://localhost:3000
            allowCredentials: true
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  hi:
    handler: index.hi
    events:
      - http:
          path: /
          method: post
          authorizer: auth
  signup:
    handler: user/signup.signup
    events:
      - http:
          path: /signup
          method: post
  login:
    handler: user/login.login
    events:
      - http:
          path: /login
          method: post
          cors:
            origin: http://localhost:3000
            allowCredentials: true

  # will be deprecated...
  addUser:
    handler: user/addUser.addUser
    events:
      - http:
          path: /addUser
          method: post
          cors:
            origin: http://localhost:3000
            allowCredentials: true
  # needs rename
  add:
    handler: user/addUser.addUser
    events:
      - http:
          path: /add
          method: put
          cors:
            origin: http://localhost:3000
            allowCredentials: true
  getUserList:
    handler: user/getUserList.getUserList
    events:
      - http:
          path: /users
          method: get
          cors:
            origin: http://lcoalhost:3000
            allowCredentials: true
  getUserInfo:
    handler: user/getUserInfo.getUserInfo
    events:
      - http:
          path: /user
          method: get
          cors:
            origin: http://lcoalhost:3000
            allowCredentials: true
  addBanner:
    handler: banner/addBanner.addBanner
    events:
      - http:
          path: /addBanner
          method: put
          cors:
            origin: http://localhost:3000
            allowCredentials: true
  getBanner:
    handler: banner/getBanner.getBanner
    events:
      - http:
          path: /getBanner
          method: get
          cors:
            origin: http://localhost:3000
  getBanners:
    handler: banner/getBanners.getBanners
    events:
      - http:
          path: /banners
          method: get
          authorizer: auth
          cors:
            origin: http://localhost:3000
            allowCredentials: true
  save:
    handler: save.save
    environment:
      BUCKET: ${self:custom.bucket}